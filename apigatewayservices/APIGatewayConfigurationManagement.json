{
  "swagger" : "2.0",
  "info" : {
    "description" : "Configuration Management API is used to configure the external components  and internal components of API Gateway. \n\nFollowing are the external components \n\t1) Elasticsearch - Used to specify connection details of the data store for API gateway.\n\t2) Kibana - Used to specify the connection details for rendering the dashboard in API Gateway.\n\t3) Cluster - Used to store cluster settings specific to invoking API Gateway node.\nFollowing are the internal Components\n\t 1) Ports - Used to create ports that can be accessed via API Gateway. \n\t\tSupported ports \n\t\t1. HTTP\n\t\t2. HTTPS \n\t\t3. Websocket \n\t\t4. External \n\t\t5. Internal \n\t\t6. Registration.\n\t2) Keystore - Used to create Keystore that can be accessed in API Gateway \n\t3) Truststore - Used to create Truststore that can be accessed in API Gateway \n\t4) License - Used to update the License in API Gateway \n\t5) Log Level Configuration - Used to set the log level for API Gateway \n\t6) Configurations - Used to configure the extended settings and watt property in API Gateway.\n The external configuration changes require restart of the API Gateway to take effect. External configuration can be only be edited and user cannot delete the external configuration. Internal configuration can be created, modified or deleted only when API Gateway is up and running. User with Manage",
    "version" : "10.7",
    "title" : "API Gateway Configuration Management Service"
  },
  "host" : "localhost:5555",
  "basePath" : "/rest/apigateway",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/administration" : {
      "get" : {
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This REST API will get you all the configurations related to API Gateway. If the external configuration is specified then it will fetch the details provided else it will fetch you current configuration used by API Gateway. ",
            "examples" : {
              "application/json" : "{\r\n    \"apigw\": {\r\n        \"elasticsearch\": {\r\n            \"tenantId\": \"default\",\r\n            \"hosts\": \"localhost:9240\",\r\n            \"autostart\": \"true\",\r\n            \"http\": {\r\n                \"keepAlive\": \"true\",\r\n                \"keepAliveMaxConnections\": 50,\r\n                \"keepAliveMaxConnectionsPerRoute\": 15,\r\n                \"connectionTimeout\": 10000,\r\n                \"socketTimeout\": 30000,\r\n                \"maxRetryTimeout\": 100000\r\n            },\r\n            \"sniff\": {\r\n                \"enable\": \"true\",\r\n                \"timeInterval\": 60000\r\n            },\r\n            \"clientHttpResponseSize\": 100\r\n        },\r\n        \"kibana\": {\r\n            \"dashboardInstance\": \"http://<localhost>:9405\"\r\n        },\r\n        \"cluster\": {\r\n            \"clusterAware\": \"false\",\r\n            \"clusterSessTimeout\": \"60\",\r\n            \"tsaURLs\": \"\",\r\n            \"actionOnStartupError\": \"standalone\",\r\n            \"pendingRestart\": \"false\"\r\n        },\r\n        \"keystores\": [\r\n            {\r\n                \"id\": \"DEFAULT_IS_KEYSTORE\",\r\n                \"keyStoreName\": \"DEFAULT_IS_KEYSTORE\",\r\n                \"keyStoreDescription\": \"Default keystore alias for Integration Server.\",\r\n                \"keyStoreType\": \"JKS\",\r\n                \"keyStoreProvider\": \"SUN\",\r\n                \"keyStorePassword\": \"wm.security.keystore.DEFAULT_IS_KEYSTORE\",\r\n                \"uploadFileName\": \"keystore.jks\",\r\n                \"fileContent\": \"/u3+7QAAAAIAAAABAAAAAQAEc3NvcwAAAU3jFrE/AAAFAzCCBP8wDgYKKwYBBAEqAhEBAQUABIIE6/2CimpqOXAELQb47VWbZx5vQionU7882vDKQywXT2726dYXQK/YBtK3ufezdzTg82EEWyqw75YuqMcaa5zS8FiGEovvf2DsdCcHWkAso24Ya1l56j+FgF5TsaOrFcKu3HjuyzhqgDiD/U7NfIcFud4kaBxNI23/ouvB7O7+JOww8xzE2pyxtvGyyvzqMDHFE8+h0X+dSgVVCioL794mP7gj2ujg2EKS9lI1KhFjrZfOn6kLnDAsd1QUfAdJxrooLXPP97auAApX2C5aD+lIdS+yPs0eC7h0R3QBYBiPuCEBPmna0C2iZtukqmCNH/W0VPbdIswz0KcCATFH8LuC3Mg3IbTqdXFj4bzUPACqutmyObyGwFKEzNdicTV2f6UJDBfUnl7ip1f4vb/a18PM+FuKsHigW6+PHWAo4hc85ntFjXoQBKgSpeneuiRIQbvmcWlp68FVuebJjMsmYKsvhIfCTUWYmf3iS6sQUILD3IKvbIKMYudgImEe9TWFyCUuv5NJ6198BndyveeYylrcXhTkHUz3MPguCAV6htdndvS5i7y3shzXJ78APCudBMNC58kKp+jXqEiqirPA4hKkD2yUXuw2kn2FTI2fItnjlugex7FeDSC631j7TbJ2VhlOItG253ems2o5qQQfipUJKbn71q/M2iGFRdhRRmpTu3axcr79CIJHqrZa5/tReI+q/vRN236frexjWdKtSjzLk5BIw4VZEMgBJ/mZMD/val0gZsszFR+dksUxZXlUVs7pA20MsJI2Zwm3kdqY1L3PgT9jQdmxcfXdEkIY+vrl3oaB6fbMe9WsUzPHwyCh+GZbYMPcComAerapdRGuw6ra7DAVF+idAFmkMYDa8WCP3iHVBA5KxhFTj8JSGLxmf80Gd86jBC10wE8CHE6ENGW62FjTU5rJ5zhJ8ZgX5WZ1zHGnj2SSriFJ9TVvCRMBCf3H1/7TvKyrPl2fO+bjANdR3jnqizXgor2DodJrwcO6pwAtXwviPqIkvT8JyVnhqNr1uAjIVaKEjHFmmNWzlGSEP2jcCMLmIzHQf7NJf0qlBCZ7e8/qUJXFRjDqME8bHzukn+7Xrof7IsDhGrby/S7a5HWHei4Ncag6FeExb4wlJJO6+iOFzBKw0XQYR3zBnZyd8OwhAvewpibxL+RUZzUuAnd2NS5fHQ0xOJnJGubaPJwxE2s/10KJ9JREX0CbPsjnuSNOq8ChHPK+ppTrW0LFWRm5+s4KlQO0GMxJ5R4ZOvlJ77xbTUf8+z+G/k16ZxSSRtyMrHj+MOcpcWgXSBHevAUdVhbUuqgnvWetOlxf0RAu6YDe9tg05hkgIkEEqO8Bx1C3OVlZBoRW5xI1a3cMzgW6pCFaUi7qbIP2YSuL1Zj0QRUG9WtayNTX4wvdvJU4ZuryvR/kWjDfUsdljXk5HL7Sd7O8W9itueMS15mxnE0FDq5SqZInRby+lnWkmbiJf13SppFFyl4wO+MnQ1+NHeq08N7PV7ib9vkJeQ2Ni1yyimRk43Br9flS7GxLcyT9a4r/H67zdjKTe9er6P1qZjMEwOPSPJM8CQ9zD9iKaWSnuJU5XugiYbsl3ZD5oHrW2jZT57fHOzQqtmInKVpF52/uwA8hEV6KexI2g4QnANdTSHt84cBQCRlZFsdYqWhdcnj3EL2zoExVkla8AAAAAQAFWC41MDkAAANzMIIDbzCCAlegAwIBAgIEBYhs3TANBgkqhkiG9w0BAQ0FADBgMQswCQYDVQQGEwJERTEQMA4GA1UECBMHVW5rbm93bjEQMA4GA1UEBxMHVW5rbm93bjEMMAoGA1UEChMDc2FnMRAwDgYDVQQLEwdkZWZhdWx0MQ0wCwYDVQQDEwRzc29zMB4XDTE1MDYxMTE0NDY1OFoXDTQ1MDYxMDE0NDY1OFowYDELMAkGA1UEBhMCREUxEDAOBgNVBAgTB1Vua25vd24xEDAOBgNVBAcTB1Vua25vd24xDDAKBgNVBAoTA3NhZzEQMA4GA1UECxMHZGVmYXVsdDENMAsGA1UEAxMEc3NvczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKCBRN8DR2xjRWDl/wXOF6d/GrcTqBsunX2UYspKgVlhV+VGdwsm/9bMbx8l1LsAqry+PNoAfKYmgMmNVFS2YAgfVusFJhzUf2QAyRV3IYf6+dUchU3+0RttmD0EqB2ldHotAOQPavHAuwn46lh/XRnydNZDSWl7DRpa8kjIGtt6+jcBDWyGvK1Jirknz4uV6TpnFynG2YTa4HTLLv9ESG4zJNMETrUlem2RwsekmQAb3QMm89mcAZoD+srkzVlv8CAgcj9XGZy1wmAvrEZDfnA1e8bVYjq28gSiNUnxXhAFT78MR54AUJtTQs0WkcDyewoTsdTznQVucELGI74Y0xUCAwEAAaMxMC8wDgYDVR0PAQH/BAQDAgSwMB0GA1UdDgQWBBTsePBFullXlfM2IPokRniCHLqB+jANBgkqhkiG9w0BAQ0FAAOCAQEAJzpJJ1T1cR6uKpcrjyVlYLEifMF+cCe/ivGSmb+fNnYcOxsbUrdtTZa/ZJqFIZ8iwdiHljW7wN8Cbu1Wrv8vj1pV38I8C1bmsUv7mCwEmOtAcCfBoduxG+iy/LsgQW4vCj3gCm98Fv/AKD7pe+IhVkVEY8m37W6wNgdDgDKHg9txgrckBY1gOEm4Z1bhlBFFLkfJBUN1hdQu425HK9EgOO0EsjDTi1jqUPuCIZ+1XqlN7W/5pmD9NH7Oo2pji9rFoPMBibs6h5dWGkjxGft3aGBkCuhPOSHbgJbSM/yNowVMlj9PNutJvNiqkVBT9aw1f8ANN7r1+X4JusVZAshesN6R6K3v/UlgOxIB9C41M4P57LCq\",\r\n                \"pkAliasesList\": \"ssos\",\r\n                \"pkPasswordsList\": \"wm.security.keystore.DEFAULT_IS_KEYSTORE.ssos\",\r\n                \"nullPKpasswds\": \"false\",\r\n                \"bitarray\": \"1\",\r\n                \"loaded\": true,\r\n                \"warning\": false\r\n            }\r\n        ],\r\n        \"truststores\": [\r\n            {\r\n                \"id\": \"DEFAULT_IS_TRUSTSTORE\",\r\n                \"keyStoreName\": \"DEFAULT_IS_TRUSTSTORE\",\r\n                \"keyStoreDescription\": \"Default truststore alias for Integration Server.\",\r\n                \"keyStoreType\": \"JKS\",\r\n                \"keyStoreProvider\": \"SUN\",\r\n                \"keyStoreLocation\": \"..\\\\..\\\\..\\\\common\\\\conf\\\\platform_truststore.jks\",\r\n                \"keyStorePassword\": \"wm.security.keystore.DEFAULT_IS_TRUSTSTORE\",\r\n                \"uploadFileName\": \"platform_truststore.jks\",\r\n                \"fileContent\": \"/u3+7QAAAAIAAAABAAAAAgAEc3NvcwAAAU3mhMeWAAVYLjUwOQAAA3MwggNvMIICV6ADAgECAgQFiGzdMA0GCSqGSIb3DQEBDQUAMGAxCzAJBgNVBAYTAkRFMRAwDgYDVQQIEwdVbmtub3duMRAwDgYDVQQHEwdVbmtub3duMQwwCgYDVQQKEwNzYWcxEDAOBgNVBAsTB2RlZmF1bHQxDTALBgNVBAMTBHNzb3MwHhcNMTUwNjExMTQ0NjU4WhcNNDUwNjEwMTQ0NjU4WjBgMQswCQYDVQQGEwJERTEQMA4GA1UECBMHVW5rbm93bjEQMA4GA1UEBxMHVW5rbm93bjEMMAoGA1UEChMDc2FnMRAwDgYDVQQLEwdkZWZhdWx0MQ0wCwYDVQQDEwRzc29zMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoIFE3wNHbGNFYOX/Bc4Xp38atxOoGy6dfZRiykqBWWFX5UZ3Cyb/1sxvHyXUuwCqvL482gB8piaAyY1UVLZgCB9W6wUmHNR/ZADJFXchh/r51RyFTf7RG22YPQSoHaV0ei0A5A9q8cC7CfjqWH9dGfJ01kNJaXsNGlrySMga23r6NwENbIa8rUmKuSfPi5XpOmcXKcbZhNrgdMsu/0RIbjMk0wROtSV6bZHCx6SZABvdAybz2ZwBmgP6yuTNWW/wICByP1cZnLXCYC+sRkN+cDV7xtViOrbyBKI1SfFeEAVPvwxHngBQm1NCzRaRwPJ7ChOx1POdBW5wQsYjvhjTFQIDAQABozEwLzAOBgNVHQ8BAf8EBAMCBLAwHQYDVR0OBBYEFOx48EW6WVeV8zYg+iRGeIIcuoH6MA0GCSqGSIb3DQEBDQUAA4IBAQAnOkknVPVxHq4qlyuPJWVgsSJ8wX5wJ7+K8ZKZv582dhw7GxtSt21Nlr9kmoUhnyLB2IeWNbvA3wJu7Vau/y+PWlXfwjwLVuaxS/uYLASY60BwJ8Gh27Eb6LL8uyBBbi8KPeAKb3wW/8AoPul74iFWRURjybftbrA2B0OAMoeD23GCtyQFjWA4SbhnVuGUEUUuR8kFQ3WF1C7jbkcr0SA47QSyMNOLWOpQ+4Ihn7VeqU3tb/mmYP00fs6jamOL2sWg8wGJuzqHl1YaSPEZ+3doYGQK6E85IduAltIz/I2jBUyWP08260m82KqRUFP1rDV/wA03uvX5fgm6xVkCyF6w8kYX8OFNdQYzf4B0AFvNNaJSS1I=\",\r\n                \"certificateAliases\": [\r\n                    \"ssos\"\r\n                ],\r\n                \"loaded\": true,\r\n                \"warning\": false\r\n            }\r\n        ],\r\n        \"ports\": [\r\n            {\r\n                \"configURL\": \"/WmRoot/configWebSocket.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"WebSocketListener@4559\",\r\n                \"portDescription\": \"Integration Server WebSocket port: 4559\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"false\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 4559,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test\",\r\n                \"key\": \"WebSocketListener@4559\",\r\n                \"uniqueID\": \"2701a1b15ebe4e929cee0ff961439eb3\",\r\n                \"clientAuth\": \"basic\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerType\": \"Regular\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"true\",\r\n                \"protocol\": \"HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"portAlias\": \"DefaultPrimaryPort\",\r\n                \"key\": \"HTTPListener@5555\",\r\n                \"uniqueID\": \"fb5163612fca44fa82d33abe61cabde1\",\r\n                \"curDelay\": \"0\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"listenerKey\": \"HTTPListener@5555\",\r\n                \"portDescription\": \"Integration Server HTTP port: 5559\",\r\n                \"internalPort\": \"-1\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"port\": 5555,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"idProvider\": null,\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\",\r\n                \"primary\": \"true\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"maxQueue\": \"65534\",\r\n                \"listenerType\": \"revinvokeinternal\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"false\",\r\n                \"proxyPort\": \"7777\",\r\n                \"protocol\": \"HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"portAlias\": \"registrationport\",\r\n                \"key\": \"HTTPListener@7778\",\r\n                \"uniqueID\": \"631361dc176f4df39da6a63b8d07dddd\",\r\n                \"curDelay\": \"0\",\r\n                \"keepAliveTimeout\": \"0\",\r\n                \"listenerKey\": \"HTTPListener@7778\",\r\n                \"portDescription\": \"Integration Server HTTP port: 7778\",\r\n                \"internalPort\": \"7778\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"port\": 7778,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"idProvider\": null,\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            },\r\n            {\r\n                \"curDelay\": \"0\",\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"HTTPListener@7777\",\r\n                \"portDescription\": \"external port\",\r\n                \"internalPort\": \"7778\",\r\n                \"listenerType\": \"revinvoke\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"false\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"protocol\": \"HTTP\",\r\n                \"port\": 7777,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"idProvider\": null,\r\n                \"portAlias\": \"external\",\r\n                \"key\": \"HTTPListener@7777\",\r\n                \"uniqueID\": \"11cbaa3200a0450f875d53879ad361da\",\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            },\r\n            {\r\n                \"curDelay\": \"0\",\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"HTTPListener@5559\",\r\n                \"portDescription\": \"Integration Server HTTP port: 5559\",\r\n                \"internalPort\": \"-1\",\r\n                \"listenerType\": \"Regular\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"true\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"protocol\": \"HTTP\",\r\n                \"port\": 5559,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"idProvider\": null,\r\n                \"portAlias\": \"asdasd\",\r\n                \"key\": \"HTTPListener@5559\",\r\n                \"uniqueID\": \"c3e97bc70c8e43a5a6e08269742464be\",\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            }\r\n        ],\r\n        \"settings\": {\r\n            \"wattKeys\": {\r\n                \"watt.server.http.allowOptions\": \"true\",\r\n                \"watt.server.coder.responseAsXML\": \"true\",\r\n                \"watt.server.SoapRPC.checkHeaders\": \"true\",\r\n                \"watt.server.ws.responseTNS.from.request\": \"false\",\r\n                \"watt.server.brokerTransport.dur\": \"60\",\r\n                \"watt.server.control.controlledDeliverToTriggers.pctMaxThreshold\": \"90\",\r\n                \"watt.server.RESTDirective.V2\": \"restv2\",\r\n                \"watt.net.client.SSLSessionTimeout\": \"0\",\r\n                \"watt.net.jsse.client.enabledProtocols\": \"TLSv1,TLSv1.1,TLSv1.2\",\r\n                \"watt.server.defaultContentHandler\": \"true\",\r\n                \"watt.core.xsd.useGeneratedURIForCreateXSD\": \"false\",\r\n                \"watt.server.http.listRequestVars\": \"asNeeded\",\r\n                \"watt.server.tx.cluster.lockTimeoutMillis\": \"100\",\r\n                \"watt.server.ns.dependencyManager\": \"true\",\r\n                \"watt.tx.sweepTime\": \"60\",\r\n                \"watt.core.generatedTypeName.localName.prefix\": \"__\",\r\n                \"watt.server.isMicroservicesContainer\": \"false\",\r\n                \"watt.server.auth.cache.timeout\": \"300000\",\r\n                \"watt.server.diagnostic.logFiles.maxMB\": \"250\",\r\n                \"watt.net.ftpClientDataConnTimeout\": \"30000\",\r\n                \"watt.server.RESTDirective\": \"rest\",\r\n                \"watt.server.cors.supportedHeaders\": \"\",\r\n                \"watt.server.http.securityRealm\": \"Integration Server\",\r\n                \"watt.server.audit.schemaName\": \"\",\r\n                \"watt.core.validation.skipAbsentStarBody\": \"false\",\r\n                \"watt.server.http.authorizationEncoding\": \"UTF-8\",\r\n                \"watt.server.oauth.approvalpage.title\": \"Access Approval\",\r\n                \"watt.server.http.useAcceptHeader\": \"true\",\r\n                \"watt.server.oauth.approvalpage.header\": \"Resource access approval\",\r\n                \"watt.server.soapjms.request.timeout\": \"10\",\r\n                \"watt.server.messaging.debugTrace\": \"false\",\r\n                \"watt.server.jms.trigger.maxPrefetchSize\": \"10\",\r\n                \"watt.server.ldap.extendedProps\": \"\",\r\n                \"watt.server.oauth.requireHTTPS\": \"true\",\r\n                \"watt.server.cors.host\": \"\",\r\n                \"watt.server.event.tx.async\": \"true\",\r\n                \"watt.server.password.minSpecialChars\": \"\",\r\n                \"watt.server.ns.decodeJavaService\": \"false\",\r\n                \"watt.server.package.parallel.threads\": \"6\",\r\n                \"watt.server.BrokerDocSync.LockRetries\": \"5\",\r\n                \"watt.server.http.xmlFormat\": \"node\",\r\n                \"watt.server.threadPool\": \"75\",\r\n                \"watt.server.trigger.local.checkTTL\": \"false\",\r\n                \"watt.server.trigger.preprocess.suspendAndRetryOnError\": \"false\",\r\n                \"watt.server.publish.useCSQ\": \"always\",\r\n                \"watt.server.service.blacklist\": \"\",\r\n                \"watt.server.smtpTrustStoreAlias\": \"\",\r\n                \"watt.adminapi.group.readOnly\": \"\",\r\n                \"watt.server.optimize.monitoring\": \"false\",\r\n                \"watt.server.jms.trigger.concurrent.primaryThread.pollingInterval\": \"500\",\r\n                \"watt.server.SOAP.warnOnPartValidation\": \"false\",\r\n                \"watt.server.ws.defaultNamespace\": \"http://www.webMethods.com/noNamespace/\",\r\n                \"watt.server.cors.exposedHeaders\": \"\",\r\n                \"watt.server.fileEncoding\": \"\",\r\n                \"watt.server.threadKill.interruptThread.enabled\": \"false\",\r\n                \"watt.server.hostDeny\": \"\",\r\n                \"watt.server.http.X-Content-Type-Options\": \"none\",\r\n                \"watt.server.publish.usePipelineBrokerEvent\": \"false\",\r\n                \"watt.server.jms.trigger.wmjms.clientIDSharing\": \"true\",\r\n                \"watt.server.json.allowUnquotedFieldNames\": \"false\",\r\n                \"watt.server.dispatcher.join.reaperDelay\": \"1800000\",\r\n                \"watt.server.classloader.pkgpriority\": \"\",\r\n                \"watt.server.defaultPackage\": \"Default\",\r\n                \"watt.core.brokerCoder.wireFormat\": \"3\",\r\n                \"watt.core.validation.skipMandatoryFields\": \"false\",\r\n                \"watt.server.trigger.keepAsBrokerEvent\": \"false\",\r\n                \"watt.security.decrypt.keyStoreAlias\": \"\",\r\n                \"watt.core.xsd.useGeneratedURIForNonRPC\": \"true\",\r\n                \"watt.server.http.returnException\": \"true\",\r\n                \"watt.server.auth.samlResolver\": \"http://localhost:8585/services/SAML\",\r\n                \"watt.server.password.minLength\": \"\",\r\n                \"watt.server.stats.logfile\": \"logs/stats.log\",\r\n                \"watt.security.KeystoreAndTruststore.defaultAliasCreated\": \"true\",\r\n                \"watt.tx.defaultTTLMins\": \"30\",\r\n                \"watt.core.xml.allowedExternalEntities\": \"\",\r\n                \"watt.server\": \"true\",\r\n                \"watt.server.audit.stdout.recordDelimiter\": \"&&\",\r\n                \"watt.net.jsse.server.enabledCipherSuiteList\": \"default\",\r\n                \"watt.ssh.jsch.kex\": \"\",\r\n                \"watt.security.ssl.keyAlias\": \"\",\r\n                \"watt.server.security.ssl.sessionlog\": \"false\",\r\n                \"watt.server.jdbc.derby.commitTolerance\": \"150\",\r\n                \"watt.server.ldap.DNescapeChars\": \"\\\\/\",\r\n                \"watt.net.ftpDataConn\": \"false\",\r\n                \"watt.server.json.prettyPrint\": \"false\",\r\n                \"watt.server.publish.drainCSQInOrder\": \"true\",\r\n                \"watt.security.decrypt.keyAlias\": \"\",\r\n                \"watt.server.service.lazyEval\": \"true\",\r\n                \"watt.net.ftpPassiveLocalAddr\": \"\",\r\n                \"watt.server.event.jmsRetrievalError.async\": \"true\",\r\n                \"watt.server.event.routing.runAsUser\": \"Administrator\",\r\n                \"watt.server.http.Strict-Transport-Security\": \"none\",\r\n                \"watt.server.session.stateful.enableLimit\": \"true\",\r\n                \"watt.net.ssl.server.clientHandshakeTimeout\": \"20000\",\r\n                \"watt.server.oauth.token.endpoint.auth\": \"session\",\r\n                \"watt.server.SOAP.MTOMStreaming.cachedFiles.location\": \"temp\\\\mtom\\\\cachedfiles\",\r\n                \"watt.server.json.decodeRealAsString\": \"false\",\r\n                \"watt.server.jms.trigger.pooledConsumer.timeout\": \"20000\",\r\n                \"watt.server.http.x-frame-options\": \"SAMEORIGIN\",\r\n                \"watt.com.wm.isextdc.monitored\": \"false\",\r\n                \"watt.server.stats.logRotateSize\": \"\",\r\n                \"watt.server.scheduler.maxWait\": \"60\",\r\n                \"watt.server.auth.cache.enabled\": \"true\",\r\n                \"watt.net.encodeToUpperCase\": \"true\",\r\n                \"watt.server.broker.producer.multiclient\": \"1\",\r\n                \"watt.server.jms.trigger.concurrent.secondaryThread.pollingInterval\": \"1\",\r\n                \"watt.server.jms.trigger.stopRequestTimeout\": \"3\",\r\n                \"watt.server.dispatcher.comms.brokerPollingInterval\": \"10000\",\r\n                \"watt.server.ns.synchronized\": \"false\",\r\n                \"watt.core.template.compatibleScope\": \"false\",\r\n                \"watt.server.storage.lock.maxWait\": \"240000\",\r\n                \"watt.server.event.exception.async\": \"true\",\r\n                \"watt.server.enterprisegateway.ignoreXForwardedForHeader\": \"true\",\r\n                \"watt.server.eventAgentPort\": \"5055\",\r\n                \"watt.server.oauth.token.defaultExpirySeconds\": \"3600\",\r\n                \"watt.server.ldap.retryCount\": \"0\",\r\n                \"watt.server.audit.file.recordDelimiter\": \"\",\r\n                \"watt.server.isMicroservicesLicensed\": \"false\",\r\n                \"watt.core.xsd.useKnownSchemaLocation\": \"true\",\r\n                \"watt.server.cluster.aliasList\": \"\",\r\n                \"watt.ssl.entrust.toolkit.ssl.fragmentblockcipher\": \"true\",\r\n                \"watt.security.max.headerLength\": \"0\",\r\n                \"watt.server.SOAP.hideEPRHostInFault\": \"false\",\r\n                \"watt.server.SoapRPC.useSecondaryType\": \"false\",\r\n                \"watt.server.xml.xmlNodeToDocument.keepDuplicates\": \"true\",\r\n                \"watt.server.serviceResults.cache\": \"\",\r\n                \"watt.net.sftpSweepInterval\": \"600\",\r\n                \"watt.server.SOAP.streamHandlers\": \"\",\r\n                \"watt.server.invoke.maxRetryPeriod\": \"15000\",\r\n                \"watt.server.compile.unicode\": \"javac -encoding Unicode -classpath {0} -d {1} {2}\",\r\n                \"watt.server.hotDeploymentTimeout\": \"60\",\r\n                \"watt.server.SOAP.retainUndeclaredNamespace\": \"true\",\r\n                \"watt.server.http.header.useSecure\": \"true\",\r\n                \"watt.server.WSDL.debug\": \"false\",\r\n                \"watt.server.jca.transaction.rollbackOnWriteFailure\": \"true\",\r\n                \"watt.server.extendedSettingsList\": \"watt.server.compile;\",\r\n                \"watt.server.oauth.disableClient.disableTokens\": \"true\",\r\n                \"watt.server.mime.decodeHeaders\": \"none\",\r\n                \"watt.server.key\": \"\",\r\n                \"watt.server.allowDirective\": \"\",\r\n                \"watt.server.http.X-XSS-Protection\": \"none\",\r\n                \"watt.security.cert.wmChainVerifier.trustByDefault\": \"true\",\r\n                \"watt.server.jms.trigger.extendedDelay.delayIncrementInterval\": \"0\",\r\n                \"watt.server.log.alertMaxEntries\": \"\",\r\n                \"watt.server.SOAP.request.timeout\": \"-1\",\r\n                \"watt.com.wm.artextdc.configVersion\": \"1.0\",\r\n                \"watt.server.thread.aging.limit\": \"60\",\r\n                \"watt.core.validation.validationEnabled\": \"true\",\r\n                \"watt.server.event.replication.async\": \"true\",\r\n                \"watt.server.enablePasswordChange\": \"\",\r\n                \"watt.server.http.reauth.user-agent.list\": \"Firefox;MSIE\",\r\n                \"watt.server.brokerTransport.max\": \"60\",\r\n                \"watt.server.ftpConnect.message\": \"true\",\r\n                \"watt.server.log.refreshInterval\": \"90\",\r\n                \"watt.server.cluster.action.errorOnStartup\": \"standalone\",\r\n                \"watt.server.jms.connection.pingPeriod\": \"300\",\r\n                \"watt.security.max.urlLength\": \"0\",\r\n                \"watt.server.serviceMail\": \"\",\r\n                \"watt.server.serverlogFilesToKeep\": \"-1\",\r\n                \"watt.server.cachemanager.connectTimeout\": \"60000\",\r\n                \"watt.server.security.ssl.sessionlog.cacheLogEntries\": \"false\",\r\n                \"watt.server.eventAgentPortEnabled\": \"false\",\r\n                \"watt.server.strictAccessExceptionLogging\": \"false\",\r\n                \"watt.core.transientStore.logExceptions\": \"false\",\r\n                \"watt.server.homeDir\": \"C:\\\\SoftwareAG_105\\\\IntegrationServer\\\\instances\\\\default\",\r\n                \"watt.server.password.maxLength\": \"\",\r\n                \"watt.server.serverlogQueueSize\": \"8192\",\r\n                \"watt.net.maxRedirects\": \"5\",\r\n                \"watt.server.checkPath.restorePipelineFromFile\": \"true\",\r\n                \"watt.server.ftpLogin.message\": \"true\",\r\n                \"watt.server.cors.allowedOrigins\": \"\",\r\n                \"watt.server.http.header.useHttpOnly\": \"true\",\r\n                \"watt.server.date.suppressPatternError\": \"false\",\r\n                \"watt.server.netEncoding\": \"UTF-8\",\r\n                \"watt.server.java.unicode\": \"false\",\r\n                \"watt.art.page.size\": \"10\",\r\n                \"watt.server.ldap.memberInfoInGroups\": \"true\",\r\n                \"watt.server.audit.stdout.fieldDelimiter\": \"||\",\r\n                \"watt.net.http401.throwException\": \"false\",\r\n                \"watt.net.ssl.server.handshake.maxVersion\": \"tls\",\r\n                \"watt.security.trustStoreAlias\": \"\",\r\n                \"watt.server.soap.validateResponse\": \"true\",\r\n                \"watt.server.http.interceptor.preprocess.sizeLimit\": \"-1\",\r\n                \"watt.server.SOAP.pre82WSD.ignoreVersionMismatch\": \"false\",\r\n                \"watt.server.math.floatOperation.mode\": \"default\",\r\n                \"watt.net.ftpUseCertMap\": \"false\",\r\n                \"watt.server.ssl.trustStoreAlias\": \"\",\r\n                \"watt.server.db.blocktimeout\": \"-1\",\r\n                \"watt.server.jms.trigger.reuseJmsTxSession\": \"true\",\r\n                \"watt.server.control.triggerInputControl.delayIncrementInterval\": \"10000\",\r\n                \"watt.server.storage.lock.maxDuration\": \"180000\",\r\n                \"watt.core.schema.generateSubstitutionGroups\": \"false\",\r\n                \"watt.net.jsse.client.enabledCipherSuiteList\": \"default\",\r\n                \"watt.server.trigger.interruptRetryOnShutdown\": \"false\",\r\n                \"watt.um.clientLog.level\": \"Error\",\r\n                \"watt.net.useCookies\": \"true\",\r\n                \"watt.security.ssl.keypurposeverification\": \"false\",\r\n                \"watt.server.cluster.SessTimeout\": \"60\",\r\n                \"watt.net.proxy.fallbackToDirectConnection\": \"true\",\r\n                \"watt.net.ftp.ignoreErrors\": \"false\",\r\n                \"watt.server.content.type.mappings\": \"text/* text/xml\",\r\n                \"watt.server.dispatcher.messageStore.redeliverOriginalMessage\": \"false\",\r\n                \"watt.ssl.iaik.debug\": \"false\",\r\n                \"watt.server.ldap.DNstripQuotes\": \"true\",\r\n                \"watt.server.um.producer.transaction.commitRetryCount\": \"0\",\r\n                \"watt.password.encrypt\": \"1\",\r\n                \"watt.server.recordToDocument.bufferSize\": \"4096\",\r\n                \"watt.net.ftpClientTimeout\": \"600\",\r\n                \"watt.server.noObjectURL\": \"\",\r\n                \"watt.server.password.historyLength\": \"\",\r\n                \"watt.server.rg.internalregistration.timeout\": \"0\",\r\n                \"watt.server.threadKill.timeout.enabled\": \"true\",\r\n                \"watt.server.jdbc.statementCache\": \"false\",\r\n                \"watt.server.coder.bincoder.trycontextloaderfirst\": \"false\",\r\n                \"watt.server.dispatcher.comms.connectionShareLimit\": \"5\",\r\n                \"watt.server.compile\": \"C:\\\\SoftwareAG_105\\\\jvm\\\\jvm\\\\bin\\\\javac -classpath {0} -d {1} {2}\",\r\n                \"watt.server.eventMgr.maxThreads\": \"5\",\r\n                \"watt.server.jms.trigger.serial.primaryThread.pollingInterval\": \"500\",\r\n                \"watt.server.requestCerts\": \"false\",\r\n                \"watt.server.email.charset\": \"\",\r\n                \"watt.server.event.session.async\": \"true\",\r\n                \"watt.debug.logfile\": \"logs/server.log\",\r\n                \"watt.net.proxySkipList\": \"localhost\",\r\n                \"watt.server.jms.trigger.raiseEventOnRetryFailure\": \"true\",\r\n                \"watt.server.email.from\": \"\",\r\n                \"watt.server.service.list.treatEmptyAsNull\": \"true\",\r\n                \"watt.server.SOAP.completeLoad\": \"true\",\r\n                \"watt.server.auth.cache.capacity\": \"250\",\r\n                \"watt.server.eventMgr.minThreads\": \"2\",\r\n                \"watt.server.ldap.cleanContext\": \"false\",\r\n                \"watt.server.db.connectionCache\": \"session\",\r\n                \"watt.server.http.jsonFormat\": \"parsed\",\r\n                \"watt.server.optimize.jms.server.url\": \"\",\r\n                \"watt.server.pipeline.processor\": \"true\",\r\n                \"watt.server.jdbc.driverList\": \"\",\r\n                \"watt.server.cronMinThreads\": \"2\",\r\n                \"watt.server.broker.replyConsumer.multiclient\": \"1\",\r\n                \"watt.server.session.locale.ignore\": \"false\",\r\n                \"watt.server.createPackage.ignorePattern\": \"\",\r\n                \"watt.server.deprecatedExceptionLogging\": \"false\",\r\n                \"watt.server.log.orphanLoggers\": \"WEBMETHODS.DEFAULT,log4j.logger.com.softwareag.wsstack,log4j.logger.com.softwareag.security,Debug.com.webmethods.lwq,com.webmethods.portal.jms.db.DbJMSClient\",\r\n                \"watt.server.http.X-Permitted-Cross-Domain-Policies\": \"\",\r\n                \"watt.net.socketProvider\": \"com.wm.ext.iaik.IaikSecureSocket\",\r\n                \"watt.net.ssl.client.handshake.maxVersion\": \"tls\",\r\n                \"watt.server.oauth.requirePost\": \"true\",\r\n                \"watt.server.rest.removeInputVariablesFromResponse\": \"true\",\r\n                \"watt.pkg.art.resourcebundlemanager.verbose\": \"false\",\r\n                \"watt.server.ldap.retryWait\": \"0\",\r\n                \"watt.server.new.http.session.context\": \"false\",\r\n                \"watt.server.acl.groupScanInterval\": \"10000\",\r\n                \"watt.server.httplog\": \"false\",\r\n                \"watt.server.ldap.includeOnlyActiveGroups\": \"true\",\r\n                \"watt.server.indoubtresolver.triggerColumnSize\": \"36\",\r\n                \"watt.net.email.validateHost\": \"false\",\r\n                \"watt.security.ssl.keyStoreAlias\": \"\",\r\n                \"watt.server.jca.connectionPool.thresholdWaitingRequest\": \"0\",\r\n                \"watt.core.datatype.patternMatcherPool.delayFill\": \"false\",\r\n                \"watt.core.schema.generateAllTypeDocuments\": \"false\",\r\n                \"watt.server.hotDeploymentAutoRecover\": \"false\",\r\n                \"watt.server.serviceUsageDSP.RefreshInterval\": \"90\",\r\n                \"watt.server.dateStampFmt\": \"yyyy-MM-dd HH:mm:ss z\",\r\n                \"watt.net.ftpConnTimeout\": \"900000\",\r\n                \"watt.server.jms.nirvana.durableSubscriber.includeClientId\": \"true\",\r\n                \"watt.server.cache.gcMins\": \"60\",\r\n                \"watt.server.diagnostic.logperiod\": \"6\",\r\n                \"watt.server.jms.trigger.pollingSession.timeout\": \"30\",\r\n                \"watt.xmlrpc.compressSize\": \"2147483647\",\r\n                \"watt.core.xml.expandGeneralEntities\": \"true\",\r\n                \"watt.adminapi.log.clientErrors\": \"false\",\r\n                \"watt.server.SOAP.MTOMThreshold\": \"0\",\r\n                \"watt.server.SOAP.generateRequiredTags\": \"true\",\r\n                \"watt.server.eventAgentAcl\": \"Default\",\r\n                \"watt.server.security.ssl.sessionlog.maxFileSize\": \"10\",\r\n                \"watt.server.jms.connection.update.blockingTime\": \"1000\",\r\n                \"watt.server.jms.connection.update.restartDelay\": \"500\",\r\n                \"watt.net.ssl.client.useJSSE\": \"true\",\r\n                \"watt.server.event.audit.async\": \"true\",\r\n                \"watt.server.http.Content-Security-Policy\": \"none\",\r\n                \"watt.server.publish.maxCSQRedeliveryCount\": \"5\",\r\n                \"watt.server.jms.trigger.concurrent.consecutiveMessageThreshold\": \"0\",\r\n                \"watt.server.diagnostic.port\": \"9999\",\r\n                \"watt.server.hideRuntimeEnvironment\": \"\",\r\n                \"watt.server.ftp.listingFileAge\": \"60\",\r\n                \"watt.server.cache.flushMins\": \"10\",\r\n                \"watt.tx.retryBackoffTime\": \"60\",\r\n                \"watt.net.localhost\": \"\",\r\n                \"watt.server.cgi.cache\": \"false\",\r\n                \"watt.server.ws.security.timestampTimeToLive\": \"300\",\r\n                \"watt.server.email.waitForServiceCompletion\": \"false\",\r\n                \"watt.server.SOAP.addEmptyHeader\": \"true\",\r\n                \"watt.um.clientLog.fileDepth\": \"2\",\r\n                \"watt.art.tmgr.timeout\": \"-1\",\r\n                \"watt.debug2.facList\": \"\",\r\n                \"watt.tx.jobThreads\": \"5\",\r\n                \"watt.server.SOAP.encodeXSITypeValue\": \"true\",\r\n                \"watt.net.http501-599.throwException\": \"false\",\r\n                \"watt.server.audit.failFastLoggers\": \"\",\r\n                \"watt.security.pub.getFile.checkReadAllowed\": \"false\",\r\n                \"watt.server.enableHotDeployment\": \"false\",\r\n                \"watt.server.apiportal.url\": \"{0}/abs/apirepository/v1/apis{1}?src={2}&tenant={3}\",\r\n                \"watt.security.sign.keyAlias\": \"\",\r\n                \"watt.server.jdbc.defaultDriver\": \"\",\r\n                \"watt.server.mediator.directives\": \"ws,mediator,gateway,callback\",\r\n                \"watt.server.revInvoke.proxyMapUserCerts\": \"false\",\r\n                \"watt.server.SOAP.directive\": \"soap\",\r\n                \"watt.server.db.testSQL\": \"\",\r\n                \"watt.server.serviceResults.cacheManager\": \"\",\r\n                \"watt.core.generatedTypeName.namespaceName.authority\": \"localhost\",\r\n                \"watt.server.ssl.keyStoreAlias\": \"\",\r\n                \"watt.server.dispatcher.comms.brokerPing\": \"1800000\",\r\n                \"watt.server.search.fast\": \"false\",\r\n                \"watt.server.defaultCountry\": \"US\",\r\n                \"watt.server.SOAP.inbound.CDATA.removeTags\": \"true\",\r\n                \"watt.server.ns.hideWmRoot\": \"true\",\r\n                \"watt.server.package.maxSizeMB\": \"10000\",\r\n                \"watt.server.jdbc.datadirect.spy.default\": \"SpyAttributes=(log=(file)logs/spy/${pool_alias_name}.log;logTName=yes;timestamp=yes)\",\r\n                \"watt.server.event.gd.async\": \"true\",\r\n                \"watt.net.ftp.securitychecks\": \"true\",\r\n                \"watt.server.jms.csq.maxRedeliveryCount\": \"5\",\r\n                \"watt.server.ns.useServiceManifest\": \"false\",\r\n                \"watt.server.publish.validateOnIS\": \"perDoc\",\r\n                \"watt.server.clientTimeout\": \"10\",\r\n                \"watt.server.scheduler.ignoreReferenceValidationErrors\": \"false\",\r\n                \"watt.server.soapjms.defaultMessageType\": \"BytesMessage\",\r\n                \"watt.server.password.minDigits\": \"\",\r\n                \"watt.server.jms.trigger.maxDeliveryCount\": \"100\",\r\n                \"watt.server.ldap.DNescapeURL\": \"false\",\r\n                \"watt.server.smtpTransportSecurity\": \"\",\r\n                \"watt.server.jdbc.loginTimeout\": \"60\",\r\n                \"watt.server.transaction.recovery.abandonTimeout\": \"5\",\r\n                \"watt.server.illegalUserChars\": \"\\\"\\\\<&\",\r\n                \"watt.server.password.minUpperChars\": \"\",\r\n                \"watt.core.brokerTypeCoder.verbose\": \"false\",\r\n                \"watt.net.primaryListener\": \"HTTPListener@5555@WmRoot\",\r\n                \"watt.server.I18NLogging\": \"true\",\r\n                \"watt.server.tspace.max\": \"52428800\",\r\n                \"watt.server.eventHandlerUser\": \"Administrator\",\r\n                \"watt.server.password.maxIdenticalCharsInARow\": \"\",\r\n                \"watt.core.validation.maxErrors\": \"1\",\r\n                \"watt.net.ssl.server.cipherSuiteList\": \"default\",\r\n                \"watt.server.hostAllow\": \"\",\r\n                \"watt.server.stats.pollTime\": \"60\",\r\n                \"watt.server.jms.trigger.reuseSession\": \"false\",\r\n                \"watt.frag.keep.original.servicename\": \"false\",\r\n                \"watt.security.sign.keyStoreAlias\": \"\",\r\n                \"watt.server.broker.replyConsumer.sweeperInterval\": \"30000\",\r\n                \"watt.server.jca.transaction.writeRecoveryRecord\": \"true\",\r\n                \"watt.net.ssl.server.strongcipheronly\": \"false\",\r\n                \"watt.server.stats.logFilesToKeep\": \"0\",\r\n                \"watt.server.session.stateful.warning\": \"25\",\r\n                \"watt.server.cgi.unicode\": \"false\",\r\n                \"watt.server.logEncoding\": \"UTF-8\",\r\n                \"watt.server.audit.logDir\": \"logs\",\r\n                \"watt.net.ftpPassivePort.min\": \"\",\r\n                \"watt.server.db.share.ISInternal\": \"false\",\r\n                \"watt.server.jms.connection.retryPeriod\": \"20\",\r\n                \"watt.server.ns.backupNodes\": \"false\",\r\n                \"watt.server.tx.cluster.lockBreakSecs\": \"120\",\r\n                \"watt.net.httpChunkSize\": \"8192\",\r\n                \"watt.server.ws.71xHandlerChainBehavior\": \"false\",\r\n                \"watt.server.inetaddress\": \"\",\r\n                \"watt.net.retries\": \"0\",\r\n                \"watt.server.userFtpRootDir\": \"userFtpRoot\",\r\n                \"watt.server.jms.csq.publishDelayWhileDraining\": \"0\",\r\n                \"watt.security.openid.logExceptions\": \"true\",\r\n                \"watt.server.ftpPort\": \"\",\r\n                \"watt.server.loginFailureLimit\": \"5\",\r\n                \"watt.server.jms.wmjms.lms.readTimeout\": \"30000\",\r\n                \"watt.server.oauth.approvalpage.footer\": \"\",\r\n                \"watt.server.jms.connection.monitorPeriod\": \"45\",\r\n                \"watt.server.scheduler.deleteCompletedTasks\": \"true\",\r\n                \"watt.server.jdbc.moreResults\": \"false\",\r\n                \"watt.net.ftpUseDefaultContentHdlr\": \"true\",\r\n                \"watt.server.broker.replyConsumer.fetchSize\": \"5\",\r\n                \"watt.server.ldap.doNotBind\": \"false\",\r\n                \"watt.core.template.enableFilterHtml\": \"true\",\r\n                \"watt.server.debugFIPS\": \"false\",\r\n                \"watt.server.SOAP.default.endpointHTTPS\": \"\",\r\n                \"watt.ssh.jsch.mac_c2s\": \"hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96\",\r\n                \"watt.ssh.jsch.mac_s2c\": \"hmac-md5,hmac-sha1,hmac-sha2-256,hmac-sha1-96,hmac-md5-96\",\r\n                \"watt.server.compile.readFromStdErr\": \"true\",\r\n                \"watt.server.serverclassloadername\": \"com.wm.app.b2b.server.ServerClassLoader\",\r\n                \"watt.net.ftp.noExtensionKey\": \"ftp_no_extension\",\r\n                \"watt.server.log.queued\": \"true\",\r\n                \"watt.net.httpPass\": \"\",\r\n                \"watt.server.indoubtresolver.uuidColumnSize\": \"96\",\r\n                \"watt.core.template.enableSecureUrlRedirection\": \"true\",\r\n                \"watt.server.SOAP.encodeXSIType\": \"true\",\r\n                \"watt.server.threadKill.enabled\": \"true\",\r\n                \"watt.net.jsse.server.SSLSessionTimeout\": \"\",\r\n                \"watt.server.storage.lock.sweepInterval\": \"5\",\r\n                \"watt.server.audit.logRotateSize\": \"\",\r\n                \"watt.server.serverlogRotateSize\": \"\",\r\n                \"watt.server.trigger.monitoringInterval\": \"60\",\r\n                \"watt.xmlrpc.version\": \"7\",\r\n                \"watt.server.ldap.extendedMessages\": \"false\",\r\n                \"watt.net.clientKeepaliveUsageLimit\": \"100\",\r\n                \"watt.server.install.service\": \"false\",\r\n                \"watt.server.jms.csq.batchProcessingSize\": \"25\",\r\n                \"watt.core.datatype.patternMatcherPool.minSize\": \"10\",\r\n                \"watt.server.control.maxPublishOnSuccess\": \"50000\",\r\n                \"watt.server.requireV3Manifests\": \"true\",\r\n                \"watt.server.trigger.removeSubscriptionOnReloadOrReinstall\": \"true\",\r\n                \"watt.server.cors.enabled\": \"false\",\r\n                \"watt.server.serverLogFmt\": \"{4}  [{6}{7}.{1}.{0,number,0000}] {3}\",\r\n                \"watt.server.json.decodeIntegerAsLong\": \"true\",\r\n                \"watt.cachedirective.exclude.packages\": \"\",\r\n                \"watt.server.portQueue\": \"65534\",\r\n                \"watt.ssh.jsch.ciphers\": \"aes256-ctr,aes192-ctr,arcfour,arcfour128,arcfour256\",\r\n                \"watt.server.emailPortQueue\": \"\",\r\n                \"watt.server.event.jmsDeliveryError.async\": \"true\",\r\n                \"watt.server.ftp.usecommandip\": \"false\",\r\n                \"watt.infradc.artmonitor\": \"false\",\r\n                \"watt.net.userAgent\": \"Mozilla/4.0 [en] (WinNT; I)\",\r\n                \"watt.server.SOAP.preserveCDATA\": \"true\",\r\n                \"watt.server.cache.TCDB.enabled\": \"false\",\r\n                \"watt.config.systemProperties\": \"mail.imap.partialfetch=true\",\r\n                \"watt.server.sftp.dateStampFmt\": \"yyyy-MM-dd HH:mm:ss z\",\r\n                \"watt.server.remoteInvoke.queryCSRFToken\": \"true\",\r\n                \"watt.server.tspace.location\": \"\",\r\n                \"watt.server.oauth.authCode.expirySeconds\": \"600\",\r\n                \"watt.server.jms.trigger.monitoringInterval\": \"60\",\r\n                \"watt.server.threadPoolMin\": \"10\",\r\n                \"watt.security.max.contentLength\": \"0\",\r\n                \"watt.server.cronMaxThreads\": \"5\",\r\n                \"watt.server.cachemanager.logsDirectory\": \"logs/tc-client-logs\",\r\n                \"watt.server.messaging.csq.maxRedeliveryCount\": \"5\",\r\n                \"watt.net.httpUser\": \"\",\r\n                \"watt.core.schema.validateIncomingXSD\": \"true\",\r\n                \"watt.server.security.jaas.jaasRealms\": \"IS_Transport, PlatformManagement, WSS_Message_IS, WSS_Transport_IS, IS_KERBEROS_INBOUND, IS_KERBEROS_OUTBOUND, WSS_Transport_ProxyService\",\r\n                \"watt.server.checkWhitelist\": \"true\",\r\n                \"watt.security.trustStore.supportedTypes\": \"JKS\",\r\n                \"watt.server.control.memorySensorInterval\": \"30000\",\r\n                \"watt.server.xml.encoding\": \"\",\r\n                \"watt.tx.disabled\": \"false\",\r\n                \"watt.server.hostMap\": \"\",\r\n                \"watt.server.jms.trigger.raiseEventOnException\": \"true\",\r\n                \"watt.server.control.threadSensorInterval\": \"2000\",\r\n                \"watt.server.SOAP.generateNilTags\": \"true\",\r\n                \"watt.server.jms.connection.pingDestination\": \"\",\r\n                \"watt.server.json.optimizeForUniqueKeys\": \"true\",\r\n                \"watt.server.url.alias.partialMatching\": \"false\",\r\n                \"watt.server.control.serverThreadThreshold\": \"15\",\r\n                \"watt.server.jms.trigger.extendedDelay.delays\": \"0, 1000, 2000, 3000\",\r\n                \"watt.server.suppresscwarn\": \"true\",\r\n                \"watt.server.SOAP.default.endpointHTTP\": \"\",\r\n                \"watt.server.tspace.timeToLive\": \"0\",\r\n                \"watt.net.clientKeepaliveAgingLimit\": \"180\",\r\n                \"watt.adminapi.returnExceptions\": \"true\",\r\n                \"watt.server.thread.usage.limit\": \"1000\",\r\n                \"watt.net.ssl.client.strongcipheronly\": \"false\",\r\n                \"watt.server.password.mode\": \"\",\r\n                \"watt.server.pubDateTimeFormat.javaSlidingWindow\": \"false\",\r\n                \"watt.server.security.ssl.sessionlog.cachedLogEntry.expiryTime\": \"300\",\r\n                \"watt.server.oauth.authServer.alias\": \"local\",\r\n                \"watt.server.control.freeMemoryThreshold\": \"5\",\r\n                \"watt.server.invokeDirective\": \"invoke\",\r\n                \"watt.server.control.triggerInputControl.delays\": \"500,1000,1500,5000\",\r\n                \"watt.server.displayDirectories\": \"true\",\r\n                \"watt.server.illegalNSChars\": \"?'- #&@^!%*:$./\\\\`;,~+=)(|}{][><\\\"\",\r\n                \"watt.server.jndi.searchresult.maxlimit\": \"0\",\r\n                \"watt.art.synchronousNotification.selectExecuteUser\": \"\",\r\n                \"watt.server.scheduler.threadThrottle\": \"75\",\r\n                \"watt.server.response.displayISErrorCode\": \"true\",\r\n                \"watt.security.ssl.ignoreExpiredChains\": \"false\",\r\n                \"watt.server.oauth.custom.responseHeader\": \"false\",\r\n                \"watt.server.jdbcLogging\": \"off\",\r\n                \"watt.server.cache.prefetchUser\": \"Administrator\",\r\n                \"watt.security.ssl.cacheClientSessions\": \"false\",\r\n                \"watt.debug2.logstringfile\": \"lib\\\\logstr.txt\",\r\n                \"watt.security.ssl.resumeClientSessions\": \"false\",\r\n                \"watt.core.schema.createSchema.omitXSDAny\": \"true\",\r\n                \"watt.server.SOAP.useStringforAnyTypewithSimpleValue\": \"false\",\r\n                \"watt.server.trigger.suspendOnAuditErrorWhen\": \"ErrorPipelineEnabled\",\r\n                \"watt.security.session.forceReauthOnExpiration\": \"true\",\r\n                \"watt.server.control.maxPersist\": \"500000\",\r\n                \"watt.server.ftpSystem.message\": \"true\",\r\n                \"watt.server.password.minLowerChars\": \"\",\r\n                \"watt.server.trigger.reuseSession\": \"false\",\r\n                \"watt.server.audit.file.fieldDelimiter\": \"\",\r\n                \"watt.server.SOAP.identifyISGeneratedWSDL\": \"true\",\r\n                \"watt.server.audit.logFilesToKeep\": \"0\",\r\n                \"watt.server.statsLogRotateInterval\": \"1440\",\r\n                \"watt.server.SOAP.defaultProtocol\": \"SOAP 1.1 Protocol\",\r\n                \"watt.server.http.interceptor.impl\": \"\",\r\n                \"watt.brokerCoder.verbose\": \"false\",\r\n                \"watt.server.json.decodeRealAsDouble\": \"true\",\r\n                \"watt.server.serviceErrorsAsLogged\": \"false\",\r\n                \"watt.security.ssl.client.ignoreEmptyAuthoritiesList\": \"false\",\r\n                \"watt.net.jsse.server.enabledProtocols\": \"SSLv2Hello,TLSv1,TLSv1.1,TLSv1.2\",\r\n                \"watt.server.SOAP.useMultiReference\": \"true\",\r\n                \"watt.net.ssl.server.handshake.minVersion\": \"tls\",\r\n                \"watt.tx.heuristicFailRetry\": \"false\",\r\n                \"watt.server.jdbc.datadirect.snoop.default\": \"ddtdbg.ProtocolTraceEnable=true;ddtdbg.ProtocolTraceMaxline=16;ddtdbg.ProtocolTraceLocation=logs/snoop/${pool_alias_name}.log;ddtdbg.ProtocolTraceShowTime=true\",\r\n                \"watt.server.trigger.managementUI.excludeList\": \"\",\r\n                \"watt.server.ws.defaultPrefix\": \"webM\",\r\n                \"watt.server.audit.dbEncoding\": \"UTF-8\",\r\n                \"watt.server.json.quoteFieldNames\": \"true\",\r\n                \"watt.server.ws.security.timestampMaximumSkew\": \"300\",\r\n                \"watt.net.ssl.client.cipherSuiteList\": \"default\",\r\n                \"watt.server.ws.security.timestampPrecisionInMilliseconds\": \"true\",\r\n                \"watt.server.http.uriPath.decodePlus\": \"true\",\r\n                \"watt.server.jdbcLogFile\": \"logs/jdbc.log\",\r\n                \"watt.server.jms.producer.pooledSession.timeout\": \"60000\",\r\n                \"watt.server.scheduler.logical.hostname\": \"\",\r\n                \"watt.ssl.accelerator.provider\": \"\",\r\n                \"watt.server.oauth.approvalpage.logo\": \"/WmAPIGateway/images/logo.png\",\r\n                \"watt.debug.layout\": \"legacy\",\r\n                \"watt.server.defaultLanguage\": \"en\",\r\n                \"watt.server.transaction.recovery.sleepInterval\": \"30\",\r\n                \"watt.security.keyStore.supportedTypes\": \"JKS, PKCS12\",\r\n                \"watt.server.SOAP.validateSOAPMessage\": \"true\",\r\n                \"watt.server.content.type.default\": \"application/octet-stream\",\r\n                \"watt.server.soap.convertPlainTextHTTPResponseIntoSOAPFault\": \"true\",\r\n                \"watt.server.diagnostic.tabular\": \"true\",\r\n                \"watt.server.isIntegrationAgent\": \"false\",\r\n                \"watt.server.logs.dateStampTimeZone\": \"\",\r\n                \"watt.server.xml.enforceEntityRef\": \"true\",\r\n                \"watt.server.scheduler.dbTimesUpdated\": \"true\",\r\n                \"watt.server.SOAP.MTOMStreaming.enable\": \"false\",\r\n                \"watt.server.cache.maxEntriesInCache\": \"-1\",\r\n                \"watt.server.hostAccessMode\": \"include\",\r\n                \"watt.server.publish.local.rejectOOS\": \"false\",\r\n                \"watt.security.ope.AllowInternalPasswordAccess\": \"false\",\r\n                \"watt.debug.level\": \"Info\",\r\n                \"watt.com.wm.isextdc.configVersion\": \"1.0\",\r\n                \"watt.server.session.stateful.max\": \"\",\r\n                \"watt.server.control.controlledDeliverToTriggers.delayIncrementInterval\": \"2000\",\r\n                \"watt.server.smtpServer\": \"\",\r\n                \"watt.server.jms.guaranteedMultisend.alwaysUseTxLogging\": \"false\",\r\n                \"watt.server.cluster.cacheType\": \"ehcache\",\r\n                \"watt.server.db.maintainminimum\": \"false\",\r\n                \"watt.server.event.security.async\": \"true\",\r\n                \"watt.server.cors.supportedMethods\": \"GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH\",\r\n                \"watt.server.serviceMonitor.queryOnServerId\": \"false\",\r\n                \"watt.server.login.userFtpDir\": \"false\",\r\n                \"watt.server.dispatcher.exactlyOnce\": \"on\",\r\n                \"watt.net.overrideSystemProxyselector\": \"false\",\r\n                \"watt.server.checkAclsInternally\": \"false\",\r\n                \"watt.server.auth.checkWithSession\": \"false\",\r\n                \"watt.core.datatype.usejavaregex\": \"false\",\r\n                \"watt.server.db.provider\": \"\",\r\n                \"watt.core.validation.w3cConformant\": \"false\",\r\n                \"watt.server.tx.heuristicFailRetry\": \"true\",\r\n                \"watt.server.checkPath.savePipelineToFile\": \"true\",\r\n                \"watt.net.proxy.useNonDefaultProxies\": \"true\",\r\n                \"watt.server.event.stat.async\": \"true\",\r\n                \"watt.server.serverlogMaskBearerToken\": \"true\",\r\n                \"watt.um.clientLog.size\": \"10\",\r\n                \"watt.server.brokerTransport.ret\": \"3\",\r\n                \"watt.security.cert.wmChainVerifier.enforceExtensionsChecks\": \"false\",\r\n                \"watt.net.ftpDataConnTimeout\": \"60000\",\r\n                \"watt.server.SOAP.MTOMStreaming.threshold\": \"4000\",\r\n                \"watt.net.maxClientKeepaliveConns\": \"0\",\r\n                \"watt.server.http.interceptor.enabled\": \"false\",\r\n                \"watt.server.audit.displayLogs.convertTime\": \"true\",\r\n                \"watt.core.validation.multipleRoot\": \"true\",\r\n                \"watt.net.ssl.client.hostnameverification\": \"false\",\r\n                \"watt.security.hw.ncipher.standardPort\": \"\",\r\n                \"watt.server.partner\": \"\",\r\n                \"watt.broker.sync.enableBrokerSync\": \"true\",\r\n                \"watt.broker.sync.forceDispatcherInit\": \"false\",\r\n                \"watt.core.datatype.patternMatcherPool.maxSize\": \"50\",\r\n                \"watt.server.http.preserveUriReservedChars\": \"true\",\r\n                \"watt.server.storage.skipStoreExistCheck\": \"true\",\r\n                \"watt.server.email.processReplyEmails\": \"false\",\r\n                \"watt.server.tx.sweepTime\": \"60\",\r\n                \"watt.server.licenses\": \"1\",\r\n                \"watt.server.mbean.auditPerCall\": \"false\",\r\n                \"watt.server.noAccessURL\": \"\",\r\n                \"watt.server.package.pre82WSD.loadExternalResources\": \"true\",\r\n                \"watt.net.ftpPassivePort.max\": \"\",\r\n                \"watt.server.storage.addKeyToStoreIfNotPresent\": \"false\",\r\n                \"watt.server.txMail\": \"\",\r\n                \"watt.server.control.controlledDeliverToTriggers.delays\": \"500,2000,3000,3500,4000,4500,5000\",\r\n                \"watt.net.jsse.server.useCipherSuitesOrder\": \"false\",\r\n                \"watt.core.validation.ignoreContent\": \"false\",\r\n                \"watt.server.messaging.csq.publishDelayWhileDraining\": \"0\",\r\n                \"watt.server.mon.auth\": \"false\",\r\n                \"watt.server.jms.trigger.groupTag\": \"WMTG\",\r\n                \"watt.net.timeout\": \"300\",\r\n                \"watt.net.ssl.ftps.client.useJSSE\": \"false\",\r\n                \"watt.server.smtpServerPort\": \"\",\r\n                \"watt.server.email.processReturnedEmails\": \"false\",\r\n                \"watt.server.cluster.aware\": \"false\",\r\n                \"watt.server.typeSynchronizer.verbose\": \"false\",\r\n                \"watt.net.ssl.client.handshake.minVersion\": \"sslv2\",\r\n                \"watt.server.ns.lockingMode\": \"full\",\r\n                \"watt.security.fips.mode\": \"false\",\r\n                \"watt.server.cors.supportsCredentials\": \"false\",\r\n                \"watt.net.clientKeepaliveTimeout\": \"180\",\r\n                \"watt.server.ldap.DNescapePairs\": \"\",\r\n                \"watt.server.errorMail\": \"\",\r\n                \"watt.updateManager.versionInfo\": \"\",\r\n                \"watt.server.sync.timeout\": \"60\",\r\n                \"watt.server.tx.cluster.jobPendingWait\": \"60\",\r\n                \"watt.server.compile.exitOnError\": \"true\",\r\n                \"watt.net.socketpool.sweeperInterval\": \"60\",\r\n                \"watt.server.portStateless\": \"\",\r\n                \"watt.server.cors.maxAge\": \"-1\",\r\n                \"watt.server.cachemanager.parallelThreads\": \"5\",\r\n                \"watt.ssh.jsch.logging\": \"false\",\r\n                \"watt.server.log.maxEntries\": \"35\",\r\n                \"watt.net.ftpSweepInterval\": \"600\",\r\n                \"watt.server.getFile.checkReadAllowed\": \"true\",\r\n                \"watt.server.port\": \"5555\",\r\n                \"watt.server.ns.generateServiceManifest\": \"false\",\r\n                \"watt.server.idr.reaperInterval\": \"10\",\r\n                \"watt.tx.vm.id\": \"0\",\r\n                \"watt.server.metadata.registry.timeout\": \"10\"\r\n            },\r\n            \"extendedKeys\": {\r\n                \"pg_Cache_maxCacheSize\": \"1048576\",\r\n                \"saveAuditlogsWithPayload\": \"true\",\r\n                \"apig_schemaValidationPoolSize\": \"10\",\r\n                \"apig_MENConfiguration_tickInterval\": \"60\",\r\n                \"pg_JWT_isHTTPS\": \"true\",\r\n                \"pg_xslt_enableSecureProcessing\": \"true\",\r\n                \"pg.snmp.userTarget.retries\": \"1\",\r\n                \"pg.snmp.communityTarget.sendTimeOut\": \"500\",\r\n                \"apiGroupingPossibleValues\": \"Finance Banking and Insurance,Sales and Ordering,Search,Transportation and Warehousing\",\r\n                \"pg.snmp.communityTarget.retries\": \"1\",\r\n                \"pg.cs.snmpTarget.base64Encoded\": \"false\",\r\n                \"pg.snmp.userTarget.maxRequestSize\": \"65535\",\r\n                \"pg_Cache_minCacheSize\": \"1024\",\r\n                \"pg_Cache_statisticsProcessorRunInterval\": \"15\",\r\n                \"pg_xslt_disableDoctypeDeclarations\": \"true\",\r\n                \"retainResponseStatus\": \"false\",\r\n                \"pg.snmp.communityTarget.base64Encoded\": \"false\",\r\n                \"apiKeyHeader\": \"x-Gateway-APIKey\",\r\n                \"events.collectionQueue.size\": \"10000\",\r\n                \"pgmen.quotaSurvival.interval\": \"1\",\r\n                \"defaultEncoding\": \"UTF-8\",\r\n                \"events.reportingPool.maxThreads\": \"4\",\r\n                \"paginationPossibleValues\": \"10,20,30,40,50\",\r\n                \"enableHotDeploy\": \"true\",\r\n                \"backupSharedFileLocation\": \"\",\r\n                \"pg.nativeServer.validatePrivateIPs\": \"false\",\r\n                \"maxWindowSize\": \"10000\",\r\n                \"pg.3pSnmpSender.sendDelay\": \"0\",\r\n                \"pg.uddiClient.publish.maxThreads\": \"2\",\r\n                \"customCertificateHeader\": \"X-Client-Cert\",\r\n                \"return408ForConnectionTimeout\": \"true\",\r\n                \"apiDocumentsRestrictedExtension\": \"exe,dll,bat,bin\",\r\n                \"apiMaturityStatePossibleValues\": \"Beta,Deprecated,Experimental,Production,Test\",\r\n                \"pg_Cache_minCachePercent\": \"20\",\r\n                \"pg.snmp.customTarget.connTimeout\": \"0\",\r\n                \"pg.cs.snmpTarget.maxRequestSize\": \"10485760\",\r\n                \"maxAllowedZipFileSize\": \"100000000\",\r\n                \"pg.cs.snmpTarget.sendTimeOut\": \"500\",\r\n                \"allowExceedMaxWindowSize\": \"true\",\r\n                \"apiKeyExpirationPeriod\": \"\",\r\n                \"pg_Cache_autoScalerRunInterval\": \"120\",\r\n                \"defaultLanguage\": \"en\",\r\n                \"portClusteringEnabled\": \"true\",\r\n                \"forwardInternalAPIsRequest\": \"false\",\r\n                \"pg_Cache_averageObjectSize\": \"64\",\r\n                \"maxBackupsLimit\": \"-1\",\r\n                \"pg.cs.snmpTarget.connTimeout\": \"0\",\r\n                \"pgmen.quotaSurvival.addLostIntervals\": \"true\",\r\n                \"pg.snmp.userTarget.sendTimeOut\": \"500\",\r\n                \"pg.snmp.communityTarget.maxRequestSize\": \"65535\",\r\n                \"pg_Cache_boundedCacheResizerRunInterval\": \"30\",\r\n                \"events.collectionPool.maxThreads\": \"8\",\r\n                \"events.reportingPool.minThreads\": \"2\",\r\n                \"pg.endpoint.readTimeout\": \"30\",\r\n                \"pg_xslt_enableDOM\": \"false\",\r\n                \"events.collectionPool.minThreads\": \"1\",\r\n                \"pg_OpenID_isHTTPS\": \"true\",\r\n                \"sendClientRequestURI\": \"false\",\r\n                \"decodeAllDelimitersInURI\": \"false\",\r\n                \"disableRemoteEntityReference\": \"true\",\r\n                \"transformerPoolSize\": \"5\",\r\n                \"setDefaultContentType\": \"true\",\r\n                \"events.reportingQueue.size\": \"5000\",\r\n                \"esScrollTimeOut\": \"60000\",\r\n                \"pg.lb.failoverOnDowntimeErrorOnly\": \"true\",\r\n                \"pg_Active_OpenID_Provider\": \"\",\r\n                \"pg_oauth2_isHTTPS\": \"true\",\r\n                \"pg.cs.snmpTarget.retries\": \"1\",\r\n                \"pg.endpoint.connectionTimeout\": \"30\",\r\n                \"strictResourceMatching\": \"true\",\r\n                \"invokeESB_asUser\": \"\",\r\n                \"apiDocumentsUploadSizeLimitInMB\": \"5\",\r\n                \"apig_rest_service_redirect\": \"false\",\r\n                \"pg.uddiClient.uddiClientTimeout\": \"15000\"\r\n            }\r\n        },\r\n        \"logConfig\": {\r\n            \"logDestination\": \"\",\r\n            \"hostName\": \"\",\r\n            \"indexName\": \"\",\r\n            \"enableLogAggregation\": \"false\",\r\n            \"userName\": \"\",\r\n            \"protocol\": \"HTTP\",\r\n            \"password\": \"********************************\",\r\n            \"kibanaLogger\": \"\",\r\n            \"enableSecurityLogger\": \"false\",\r\n            \"sagOsgiLogger\": \"info\",\r\n            \"port\": \"\",\r\n            \"enableSessionLogger\": \"false\",\r\n            \"apigatewayLogger\": \"Info\",\r\n            \"elasticSearchLogger\": \"info\"\r\n        },\r\n        \"license\": {\r\n            \"LicenseInfo\": {\r\n                \"Clustering\": \"true\",\r\n                \"Publish / Subscribe\": \"true\",\r\n                \"Adapter Runtime\": \"true\",\r\n                \"Remote Invoke\": \"true\",\r\n                \"Guaranteed Delivery\": \"true\",\r\n                \"Security Auditing\": \"true\",\r\n                \"Enterprise Gateway\": \"true\",\r\n                \"Distributed Cache\": \"true\",\r\n                \"Microservices\": \"false\"\r\n            },\r\n            \"LicenseDetails\": [\r\n                {\r\n                    \"Sales Information\": {\r\n                        \"Serial Number\": \"0000030050\",\r\n                        \"License Key\": \"55DEE281555BC2F69412622B3AA47C5B\",\r\n                        \"Customer ID\": \"1\",\r\n                        \"Customer Name\": \"Software AG\",\r\n                        \"ContractDetails\": \"1\",\r\n                        \"ContractPosNumber\": \"1\",\r\n                        \"License Type Details\": \"Internal\",\r\n                        \"AutoCallHome\": \"No\"\r\n                    }\r\n                },\r\n                {\r\n                    \"Product Information\": {\r\n                        \"Expiration Date\": \"Unlimited\",\r\n                        \"Operating System\": \"win\",\r\n                        \"Product Code\": \"YAIAA\",\r\n                        \"Product ID\": \"\",\r\n                        \"Product Name\": \"API Gateway Advanced Edition\",\r\n                        \"Product Version\": \"10.1\",\r\n                        \"Usage\": \"\",\r\n                        \"RenewalDate\": \"\",\r\n                        \"HigherLevPosNr\": \"\",\r\n                        \"HigherLevProdCode\": \"\",\r\n                        \"HigherLevProdName\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"Integration Server\": {\r\n                        \"Product Code\": \"YAI\",\r\n                        \"Product Version\": \"10.1\",\r\n                        \"Concurrent Sessions\": \"Unlimited\",\r\n                        \"Clustering\": \"yes\",\r\n                        \"Publish / Subscribe\": \"yes\",\r\n                        \"Adapter Runtime\": \"yes\",\r\n                        \"Remote Invoke\": \"yes\",\r\n                        \"Guaranteed Delivery\": \"yes\",\r\n                        \"Security Auditing\": \"yes\",\r\n                        \"Distributed Cache\": \"yes\",\r\n                        \"Enterprise Gateway\": \"yes\"\r\n                    }\r\n                },\r\n                {\r\n                    \"License Information\": {\r\n                        \"Price Unit\": \"TAM\",\r\n                        \"Price Quantity\": \"49\",\r\n                        \"TypeOfInstallation\": \"\",\r\n                        \"LicenseType\": \"\",\r\n                        \"ExtendedRights\": \"\",\r\n                        \"LicenseVersion\": \"1.2\",\r\n                        \"Metering\": \"Not Required\"\r\n                    }\r\n                },\r\n                {\r\n                    \"API Gateway\": {\r\n                        \"Policy Management - Threat Protection\": \"yes\",\r\n                        \"Policy Management - Gateway\": \"yes\",\r\n                        \"Application Management\": \"yes\",\r\n                        \"APIManagement\": \"yes\"\r\n                    }\r\n                }\r\n            ],\r\n            \"TerracottaLicenseInformation\": {\r\n                \"License File\": null,\r\n                \"BigMemory\": \"no\",\r\n                \"Expiration Date\": null\r\n            },\r\n            \"LicenseSettings\": {\r\n                \"LicenseKeyFile\": \"C:\\\\SoftwareAG_105\\\\IntegrationServer\\\\instances\\\\default\\\\config\\\\licenseKey.xml\",\r\n                \"terracottaLicenseFileSet\": null\r\n            }\r\n        }\r\n    }\r\n}"
            },
            "schema" : {
              "$ref" : "#/definitions/APIGatewayYAMLConfig"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges \"Manage general administration configurations\" to access this API.",
            "examples" : {
              "application/json" : "{\\r\\n    \\\"errorDetails\\\": \\\" The user: provider is not authorized to perform: GET on the resource: administration\\\"\\r\\n}"
            }
          },
          "500" : {
            "description" : "This status code indicates that the server has encountered an error while trying to fetch the configuration details from API Gateway"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "post" : {
        "description" : "This REST API is used to update or create multiple configuration in a single HTTP call. The below example is used to update elasticsearch connection details for API Gateway and create a http port in API Gateway. Once the configuration updated in API Gateway it will return the updated configuration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/APIGatewayYAMLConfig"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"apigw\": {\r\n        \"elasticsearch\": {\r\n            \"tenantId\": \"default\",\r\n            \"hosts\": \"127.0.0.1:9240\",\r\n            \"autostart\": \"true\",\r\n            \"http\": {\r\n                \"keepAlive\": \"true\",\r\n                \"keepAliveMaxConnections\": 50,\r\n                \"keepAliveMaxConnectionsPerRoute\": 15,\r\n                \"connectionTimeout\": 10000,\r\n                \"socketTimeout\": 30000,\r\n                \"maxRetryTimeout\": 100000\r\n            },\r\n            \"sniff\": {\r\n                \"enable\": \"true\",\r\n                \"timeInterval\": 60000\r\n            },\r\n            \"clientHttpResponseSize\": 150\r\n        },\r\n        \"ports\": [\r\n            {\r\n                \"maxQueue\": \"200\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"false\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 5599,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test_websocket\",\r\n                \"clientAuth\": \"basic\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n\r\n\r\n"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "This response contains the updated configuration of elasticsearch and all ports details as part of the response.",
            "examples" : {
              "application/json" : "{\r\n    \"apigw\": {\r\n        \"elasticsearch\": {\r\n            \"tenantId\": \"default\",\r\n            \"hosts\": \"127.0.0.1:9240\",\r\n            \"autostart\": \"true\",\r\n            \"http\": {\r\n                \"keepAlive\": \"true\",\r\n                \"keepAliveMaxConnections\": 50,\r\n                \"keepAliveMaxConnectionsPerRoute\": 15,\r\n                \"connectionTimeout\": 10000,\r\n                \"socketTimeout\": 30000,\r\n                \"maxRetryTimeout\": 100000\r\n            },\r\n            \"sniff\": {\r\n                \"enable\": \"true\",\r\n                \"timeInterval\": 60000\r\n            },\r\n            \"clientHttpResponseSize\": 150,\r\n            \"pendingRestart\": \"true\"\r\n        },\r\n        \"ports\": [\r\n            {\r\n                \"configURL\": \"/WmRoot/configWebSocket.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"WebSocketListener@4559\",\r\n                \"portDescription\": \"Integration Server WebSocket port: 4559\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"false\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 4559,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test\",\r\n                \"key\": \"WebSocketListener@4559\",\r\n                \"uniqueID\": \"9ab5e939dbe546f4b03fc47949fec4d9\",\r\n                \"clientAuth\": \"basic\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configWebSocket.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"WebSocketListener@5599\",\r\n                \"portDescription\": \"Integration Server WebSocket port: 5599\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"false\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 5599,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test_websocket\",\r\n                \"key\": \"WebSocketListener@5599\",\r\n                \"uniqueID\": \"79cc6980881d4a80908138f7ed17f88b\",\r\n                \"clientAuth\": \"basic\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerType\": \"Regular\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"true\",\r\n                \"protocol\": \"HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"portAlias\": \"DefaultPrimaryPort\",\r\n                \"key\": \"HTTPListener@5555\",\r\n                \"uniqueID\": \"fb5163612fca44fa82d33abe61cabde1\",\r\n                \"curDelay\": \"0\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"listenerKey\": \"HTTPListener@5555\",\r\n                \"portDescription\": \"Integration Server HTTP port: 5559\",\r\n                \"internalPort\": \"-1\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"port\": 5555,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"idProvider\": null,\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\",\r\n                \"primary\": \"true\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"maxQueue\": \"65534\",\r\n                \"listenerType\": \"revinvokeinternal\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"false\",\r\n                \"proxyPort\": \"7777\",\r\n                \"protocol\": \"HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"portAlias\": \"registrationport\",\r\n                \"key\": \"HTTPListener@7778\",\r\n                \"uniqueID\": \"2de74bf32f4847a0b2d7d4260e47ee62\",\r\n                \"curDelay\": \"0\",\r\n                \"keepAliveTimeout\": \"0\",\r\n                \"listenerKey\": \"HTTPListener@7778\",\r\n                \"portDescription\": \"Integration Server HTTP port: 7778\",\r\n                \"internalPort\": \"7778\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"port\": 7778,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"idProvider\": null,\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            },\r\n            {\r\n                \"curDelay\": \"0\",\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"HTTPListener@7777\",\r\n                \"portDescription\": \"external port\",\r\n                \"internalPort\": \"7778\",\r\n                \"listenerType\": \"revinvoke\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"false\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"protocol\": \"HTTP\",\r\n                \"port\": 7777,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"idProvider\": null,\r\n                \"portAlias\": \"external\",\r\n                \"key\": \"HTTPListener@7777\",\r\n                \"uniqueID\": \"60c4cd43cb9548398f94ac4f1bd1b793\",\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            },\r\n            {\r\n                \"curDelay\": \"0\",\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"HTTPListener@5559\",\r\n                \"portDescription\": \"Integration Server HTTP port: 5559\",\r\n                \"internalPort\": \"-1\",\r\n                \"listenerType\": \"Regular\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"true\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"protocol\": \"HTTP\",\r\n                \"port\": 5559,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"idProvider\": null,\r\n                \"portAlias\": \"asdasd\",\r\n                \"key\": \"HTTPListener@5559\",\r\n                \"uniqueID\": \"50d375d2b44a4aae81ef2ea237af599d\",\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            }\r\n        ]\r\n    }\r\n}"
            },
            "schema" : {
              "$ref" : "#/definitions/APIGatewayYAMLConfig"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges \"Manage general administration configurations\" to create or update the configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" The user: provider is not authorized to perform: POST on the resource: administration\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicate that request doesnt have valid payload. The below sample response shows the error during port creation with existing port alias name",
            "examples" : {
              "application/json" : "\"{\r\n    \"errorDetails\": \"Port Alias test_websocket must be unique.\"\r\n}\""
            }
          },
          "500" : {
            "description" : "This status code indicates that the server has encountered an error while trying to update the specified configuration details in API Gateway"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "This REST API is used to update or create multiple configuration in a single HTTP call. The below example is used to update elasticsearch connection details for API Gateway and create a http port in API Gateway. Once the configuration updated in API Gateway it will return the updated configuration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/APIGatewayYAMLConfig"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"apigw\": {\r\n        \"elasticsearch\": {\r\n            \"tenantId\": \"default\",\r\n            \"hosts\": \"127.0.0.1:9240\",\r\n            \"autostart\": \"true\",\r\n            \"http\": {\r\n                \"keepAlive\": \"true\",\r\n                \"keepAliveMaxConnections\": 50,\r\n                \"keepAliveMaxConnectionsPerRoute\": 15,\r\n                \"connectionTimeout\": 10000,\r\n                \"socketTimeout\": 30000,\r\n                \"maxRetryTimeout\": 100000\r\n            },\r\n            \"sniff\": {\r\n                \"enable\": \"true\",\r\n                \"timeInterval\": 60000\r\n            },\r\n            \"clientHttpResponseSize\": 150\r\n        },\r\n        \"ports\": [\r\n            {\r\n                \"maxQueue\": \"200\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"false\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 5599,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test_websocket\",\r\n                \"clientAuth\": \"basic\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n\r\n\r\n"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "This response contains the updated configuration of elasticsearch and all ports details as part of the response.",
            "examples" : {
              "application/json" : "{\r\n    \"apigw\": {\r\n        \"elasticsearch\": {\r\n            \"tenantId\": \"default\",\r\n            \"hosts\": \"127.0.0.1:9240\",\r\n            \"autostart\": \"true\",\r\n            \"http\": {\r\n                \"keepAlive\": \"true\",\r\n                \"keepAliveMaxConnections\": 50,\r\n                \"keepAliveMaxConnectionsPerRoute\": 15,\r\n                \"connectionTimeout\": 10000,\r\n                \"socketTimeout\": 30000,\r\n                \"maxRetryTimeout\": 100000\r\n            },\r\n            \"sniff\": {\r\n                \"enable\": \"true\",\r\n                \"timeInterval\": 60000\r\n            },\r\n            \"clientHttpResponseSize\": 150,\r\n            \"pendingRestart\": \"true\"\r\n        },\r\n        \"ports\": [\r\n            {\r\n                \"configURL\": \"/WmRoot/configWebSocket.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"WebSocketListener@4559\",\r\n                \"portDescription\": \"Integration Server WebSocket port: 4559\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"false\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 4559,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test\",\r\n                \"key\": \"WebSocketListener@4559\",\r\n                \"uniqueID\": \"9ab5e939dbe546f4b03fc47949fec4d9\",\r\n                \"clientAuth\": \"basic\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configWebSocket.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"WebSocketListener@5599\",\r\n                \"portDescription\": \"Integration Server WebSocket port: 5599\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"false\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 5599,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test_websocket\",\r\n                \"key\": \"WebSocketListener@5599\",\r\n                \"uniqueID\": \"79cc6980881d4a80908138f7ed17f88b\",\r\n                \"clientAuth\": \"basic\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerType\": \"Regular\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"true\",\r\n                \"protocol\": \"HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"portAlias\": \"DefaultPrimaryPort\",\r\n                \"key\": \"HTTPListener@5555\",\r\n                \"uniqueID\": \"fb5163612fca44fa82d33abe61cabde1\",\r\n                \"curDelay\": \"0\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"listenerKey\": \"HTTPListener@5555\",\r\n                \"portDescription\": \"Integration Server HTTP port: 5559\",\r\n                \"internalPort\": \"-1\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"port\": 5555,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"idProvider\": null,\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\",\r\n                \"primary\": \"true\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"maxQueue\": \"65534\",\r\n                \"listenerType\": \"revinvokeinternal\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"false\",\r\n                \"proxyPort\": \"7777\",\r\n                \"protocol\": \"HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"portAlias\": \"registrationport\",\r\n                \"key\": \"HTTPListener@7778\",\r\n                \"uniqueID\": \"2de74bf32f4847a0b2d7d4260e47ee62\",\r\n                \"curDelay\": \"0\",\r\n                \"keepAliveTimeout\": \"0\",\r\n                \"listenerKey\": \"HTTPListener@7778\",\r\n                \"portDescription\": \"Integration Server HTTP port: 7778\",\r\n                \"internalPort\": \"7778\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"port\": 7778,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"idProvider\": null,\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            },\r\n            {\r\n                \"curDelay\": \"0\",\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"HTTPListener@7777\",\r\n                \"portDescription\": \"external port\",\r\n                \"internalPort\": \"7778\",\r\n                \"listenerType\": \"revinvoke\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"false\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"protocol\": \"HTTP\",\r\n                \"port\": 7777,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"idProvider\": null,\r\n                \"portAlias\": \"external\",\r\n                \"key\": \"HTTPListener@7777\",\r\n                \"uniqueID\": \"60c4cd43cb9548398f94ac4f1bd1b793\",\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            },\r\n            {\r\n                \"curDelay\": \"0\",\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"HTTPListener@5559\",\r\n                \"portDescription\": \"Integration Server HTTP port: 5559\",\r\n                \"internalPort\": \"-1\",\r\n                \"listenerType\": \"Regular\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"true\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"protocol\": \"HTTP\",\r\n                \"port\": 5559,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"idProvider\": null,\r\n                \"portAlias\": \"asdasd\",\r\n                \"key\": \"HTTPListener@5559\",\r\n                \"uniqueID\": \"50d375d2b44a4aae81ef2ea237af599d\",\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            }\r\n        ]\r\n    }\r\n}"
            },
            "schema" : {
              "$ref" : "#/definitions/APIGatewayYAMLConfig"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges \"Manage general administration configurations\" to create or update the configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" The user: provider is not authorized to perform: PUT on the resource: administration\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicate that request doesnt have valid payload. The below sample response shows the error during port creation with existing port alias name",
            "examples" : {
              "application/json" : "\"{\r\n    \"errorDetails\": \"Port Alias test_websocket must be unique.\"\r\n}\""
            }
          },
          "500" : {
            "description" : "This status code indicates that the server has encountered an error while trying to update the specified configuration details in API Gateway"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/administration/{configuration}/{configurationId}" : {
      "get" : {
        "description" : "This REST API is used to get the particular configuration in API Gateway. The below example tries to get a websocket port 4559.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "configuration",
          "in" : "path",
          "description" : "This path param is used to retrieve configuration in API Gateway. Configuration that can be retrieved using id  from API Gateway are ports, keystore, truststore.",
          "required" : true,
          "type" : "string",
          "x-example" : "ports",
          "enum" : [ "ports", "keystores", "truststores" ]
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The unique id of the configuration.Below are the list of configuration and its id field.\n\t1. Ports - listenerKey\n\t2. Keystore - id\n\t3. Truststore - id",
          "required" : true,
          "type" : "string",
          "x-example" : "WebSocketListener@4559"
        } ],
        "responses" : {
          "200" : {
            "description" : "This status code indicates the successful retrieval of configuration.",
            "examples" : {
              "application/json" : "\"{\\r\\n    \\\"apigw\\\": {\\r\\n        \\\"ports\\\": [\\r\\n            {\\r\\n                \\\"configURL\\\": \\\"\\/WmRoot\\/configWebSocket.dsp\\\",\\r\\n                \\\"maxQueue\\\": \\\"200\\\",\\r\\n                \\\"listenerKey\\\": \\\"WebSocketListener@4559\\\",\\r\\n                \\\"portDescription\\\": \\\"Integration Server WebSocket port: 4559\\\",\\r\\n                \\\"listenerType\\\": \\\"WebSocket\\\",\\r\\n                \\\"maxThread\\\": \\\"200\\\",\\r\\n                \\\"threadPriority\\\": \\\"5\\\",\\r\\n                \\\"pkg\\\": \\\"WmRoot\\\",\\r\\n                \\\"enabled\\\": \\\"true\\\",\\r\\n                \\\"minThread\\\": \\\"10\\\",\\r\\n                \\\"protocol\\\": \\\"WebSocket\\\",\\r\\n                \\\"port\\\": 4559,\\r\\n                \\\"factoryKey\\\": \\\"webMethods\\/WebSocket\\\",\\r\\n                \\\"provider\\\": \\\"webMethods\\\",\\r\\n                \\\"idleTimeout\\\": \\\"300000\\\",\\r\\n                \\\"portAlias\\\": \\\"test\\\",\\r\\n                \\\"key\\\": \\\"WebSocketListener@4559\\\",\\r\\n                \\\"uniqueID\\\": \\\"9ab5e939dbe546f4b03fc47949fec4d9\\\",\\r\\n                \\\"clientAuth\\\": \\\"basic\\\"\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n}"
            },
            "schema" : {
              "$ref" : "#/definitions/APIGatewayYAMLConfig"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges \"Manage general administration configurations\" to retrieve the configuration from API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" The user: provider is not authorized to perform: GET on the resource: administration\"\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that resource trying to retrieve is not found. The below example shows that port is not available to retrieve",
            "examples" : {
              "application/json" : " {\n    \"error\": \"Port - WebSocketListener@4569 is not found.\"\n}"
            }
          },
          "500" : {
            "description" : "This status code indicates that the server has encountered an error while trying to retrieve the specified configuration details from API Gateway"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "put" : {
        "description" : "This REST API is used to update the particular configuration in API Gateway. The below example tries to enable a websocket port 4559.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/APIGatewayYAMLConfig"
          },
          "x-examples" : {
            "application/json" : "{\r\n    \"apigw\": {\r\n        \"ports\": [\r\n            {\r\n                \"configURL\": \"/WmRoot/configWebSocket.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"WebSocketListener@4559\",\r\n                \"portDescription\": \"Integration Server WebSocket port: 4559\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"true\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 4559,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test\",\r\n                \"key\": \"WebSocketListener@4559\",\r\n                \"uniqueID\": \"9ab5e939dbe546f4b03fc47949fec4d9\",\r\n                \"clientAuth\": \"basic\"\r\n            }\r\n        ]\r\n    }\r\n}"
          }
        }, {
          "name" : "configuration",
          "in" : "path",
          "description" : "This path param is used to specify specific configuration name to update the configuration details in API Gateway. Applicable configurations are  ports,keystores,truststores. For other configuration you can directly update the desired field in payload to update the configuration in API gateway using the /administration PUT request.",
          "required" : true,
          "type" : "string",
          "x-example" : "elasticsearch",
          "enum" : [ "elasticsearch", "kibana", "cluster", "ports", "keystores", "truststores", "license", "logConfig", "settings" ]
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The unique id of the configuration to be updated.Below are the list of configuration and its id field.\r\n\t1. Ports - listenerKey\r\n\t2. Keystore - id\r\n\t3. Truststore - id",
          "required" : true,
          "type" : "string",
          "x-example" : "WebSocketListener@4559"
        } ],
        "responses" : {
          "200" : {
            "description" : "This response contains the updated configuration of enabled websocket port as part of the response.",
            "examples" : {
              "application/json" : "{\r\n    \"apigw\": {\r\n        \"ports\": [\r\n            {\r\n                \"configURL\": \"/WmRoot/configWebSocket.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"WebSocketListener@4559\",\r\n                \"portDescription\": \"Integration Server WebSocket port: 4559\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"true\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 4559,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test\",\r\n                \"key\": \"WebSocketListener@4559\",\r\n                \"uniqueID\": \"9ab5e939dbe546f4b03fc47949fec4d9\",\r\n                \"clientAuth\": \"basic\"\r\n            }\r\n        ]\r\n    }\r\n}"
            },
            "schema" : {
              "$ref" : "#/definitions/APIGatewayYAMLConfig"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges \"Manage general administration configurations\" to create or update the configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" The user: provider is not authorized to perform: PUT on the resource: administration\"\r\n}"
            }
          },
          "400" : {
            "description" : "This status code indicate that request doesnt have valid payload. The below sample response shows the error while trying to set the port as primary without enabling it ",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \"Port is not enabled to mark the port WebSocketListener@4559 as primary.\"\r\n}"
            }
          },
          "500" : {
            "description" : "This status code indicates that the server has encountered an error while trying to update the specified configuration details in API Gateway"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      },
      "delete" : {
        "description" : "This REST API is used to delete the particular configuration in API Gateway. The below example tries to delete a websocket port 4559.",
        "parameters" : [ {
          "name" : "configuration",
          "in" : "path",
          "description" : "This path param is used to delete configuration in API Gateway. Configuration that can be deleted from API Gateway are ports, keystore, truststore.",
          "required" : true,
          "type" : "string",
          "x-example" : "ports",
          "enum" : [ "ports", "keystores", "truststores" ]
        }, {
          "name" : "configurationId",
          "in" : "path",
          "description" : "The unique id of the configuration to be delete.Below are the list of configuration and its id field.\n\t1. Ports - listenerKey\n\t2. Keystore - id\n\t3. Truststore - id",
          "required" : true,
          "type" : "string",
          "x-example" : "WebSocketListener@4559"
        }, {
          "name" : "pkg",
          "in" : "query",
          "description" : "This is query param which is used to specify the package of a port. It is only applicable for Ports.",
          "required" : false,
          "type" : "string",
          "x-example" : "pkg=WmRoot"
        } ],
        "responses" : {
          "204" : {
            "description" : "This status code indicates successful deletion of the configuration from API Gateway"
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges \"Manage general administration configurations\" to delete the configuration in API Gateway.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" The user: provider is not authorized to perform: DELETE on the resource: administration\"\r\n}"
            }
          },
          "404" : {
            "description" : "This status code indicates that resource trying to delete is not found. The below example shows that port is not available to delete",
            "examples" : {
              "application/json" : " {\n    \"error\": \"Port - WebSocketListener@4569 is not found.\"\n}"
            }
          },
          "500" : {
            "description" : "This status code indicates that the server has encountered an error while trying to delete the specified configuration details in API Gateway"
          },
          "400" : {
            "description" : "This status code indicates the configuration is not deleted due to bad request. The below example indicates error during the ports deletion",
            "examples" : {
              "application/json" : "{\n    \"errorDetails\": \"Port WebSocketListener@5599 cannot be deleted. Please specify package name\"\n}"
            }
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    },
    "/administration/{configuration}" : {
      "get" : {
        "description" : "This API is used to fetch specific configuration details from API Gateway",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "configuration",
          "in" : "path",
          "description" : "This path param is used to specify specific configuration name to fetch the configuration details from API Gateway. Configuration can be elasticsearch,kibana,cluster,filebeat,ports,keystores,truststores,license,logConfig,settings. Multiple Configuration can also be specified in path param as ',' separated value. EX: elasticsearch,ports ",
          "required" : true,
          "type" : "string",
          "x-example" : "elasticsearch",
          "enum" : [ "elasticsearch", "kibana", "cluster", "ports", "keystores", "truststores", "license", "logConfig", "settings" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "The below sample shows the details fetched for elasticsearch and ports. If invalid configuration name is specified, the response wont retrieve any configuration from API Gateway",
            "examples" : {
              "application/json" : "{\r\n    \"apigw\": {\r\n        \"elasticsearch\": {\r\n            \"tenantId\": \"default\",\r\n            \"hosts\": \"localhost:9240\",\r\n            \"autostart\": \"true\",\r\n            \"http\": {\r\n                \"keepAlive\": \"true\",\r\n                \"keepAliveMaxConnections\": 50,\r\n                \"keepAliveMaxConnectionsPerRoute\": 15,\r\n                \"connectionTimeout\": 10000,\r\n                \"socketTimeout\": 30000,\r\n                \"maxRetryTimeout\": 100000\r\n            },\r\n            \"sniff\": {\r\n                \"enable\": \"true\",\r\n                \"timeInterval\": 60000\r\n            },\r\n            \"clientHttpResponseSize\": 100\r\n        },\r\n        \"ports\": [\r\n            {\r\n                \"configURL\": \"/WmRoot/configWebSocket.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"WebSocketListener@4559\",\r\n                \"portDescription\": \"Integration Server WebSocket port: 4559\",\r\n                \"listenerType\": \"WebSocket\",\r\n                \"maxThread\": \"200\",\r\n                \"threadPriority\": \"5\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"enabled\": \"false\",\r\n                \"minThread\": \"10\",\r\n                \"protocol\": \"WebSocket\",\r\n                \"port\": 4559,\r\n                \"factoryKey\": \"webMethods/WebSocket\",\r\n                \"provider\": \"webMethods\",\r\n                \"idleTimeout\": \"300000\",\r\n                \"portAlias\": \"test\",\r\n                \"key\": \"WebSocketListener@4559\",\r\n                \"uniqueID\": \"2701a1b15ebe4e929cee0ff961439eb3\",\r\n                \"clientAuth\": \"basic\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerType\": \"Regular\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"true\",\r\n                \"protocol\": \"HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"portAlias\": \"DefaultPrimaryPort\",\r\n                \"key\": \"HTTPListener@5555\",\r\n                \"uniqueID\": \"fb5163612fca44fa82d33abe61cabde1\",\r\n                \"curDelay\": \"0\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"listenerKey\": \"HTTPListener@5555\",\r\n                \"portDescription\": \"Integration Server HTTP port: 5559\",\r\n                \"internalPort\": \"-1\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"port\": 5555,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"idProvider\": null,\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\",\r\n                \"primary\": \"true\"\r\n            },\r\n            {\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"maxQueue\": \"65534\",\r\n                \"listenerType\": \"revinvokeinternal\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"false\",\r\n                \"proxyPort\": \"7777\",\r\n                \"protocol\": \"HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"portAlias\": \"registrationport\",\r\n                \"key\": \"HTTPListener@7778\",\r\n                \"uniqueID\": \"631361dc176f4df39da6a63b8d07dddd\",\r\n                \"curDelay\": \"0\",\r\n                \"keepAliveTimeout\": \"0\",\r\n                \"listenerKey\": \"HTTPListener@7778\",\r\n                \"portDescription\": \"Integration Server HTTP port: 7778\",\r\n                \"internalPort\": \"7778\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"port\": 7778,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"idProvider\": null,\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            },\r\n            {\r\n                \"curDelay\": \"0\",\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"HTTPListener@7777\",\r\n                \"portDescription\": \"external port\",\r\n                \"internalPort\": \"7778\",\r\n                \"listenerType\": \"revinvoke\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"false\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"protocol\": \"HTTP\",\r\n                \"port\": 7777,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"idProvider\": null,\r\n                \"portAlias\": \"external\",\r\n                \"key\": \"HTTPListener@7777\",\r\n                \"uniqueID\": \"11cbaa3200a0450f875d53879ad361da\",\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            },\r\n            {\r\n                \"curDelay\": \"0\",\r\n                \"configURL\": \"/WmRoot/configHTTP.dsp\",\r\n                \"keepAliveTimeout\": \"20000\",\r\n                \"maxQueue\": \"200\",\r\n                \"listenerKey\": \"HTTPListener@5559\",\r\n                \"portDescription\": \"Integration Server HTTP port: 5559\",\r\n                \"internalPort\": \"-1\",\r\n                \"listenerType\": \"Regular\",\r\n                \"pkg\": \"WmRoot\",\r\n                \"ssl\": \"false\",\r\n                \"enabled\": \"true\",\r\n                \"suspended\": \"false\",\r\n                \"jsseEnabledProtocols\": null,\r\n                \"protocol\": \"HTTP\",\r\n                \"port\": 5559,\r\n                \"factoryKey\": \"webMethods/HTTP\",\r\n                \"provider\": \"webMethods\",\r\n                \"idProvider\": null,\r\n                \"portAlias\": \"asdasd\",\r\n                \"key\": \"HTTPListener@5559\",\r\n                \"uniqueID\": \"c3e97bc70c8e43a5a6e08269742464be\",\r\n                \"clientAuth\": \"none\",\r\n                \"stepsize\": \"10000\"\r\n            }\r\n        ]\r\n    }\r\n}"
            },
            "schema" : {
              "$ref" : "#/definitions/APIGatewayYAMLConfig"
            }
          },
          "401" : {
            "description" : "This status code indicates that either user didn't provide right credentials or user doesn't have required privileges \"Manage general administration configurations\" to access this API.",
            "examples" : {
              "application/json" : "{\r\n    \"errorDetails\": \" The user: provider is not authorized to perform: GET on the resource: administration\"\r\n}"
            }
          },
          "500" : {
            "description" : "This status code indicates that the server has encountered an error while trying to fetch the specified configuration details from API Gateway"
          }
        },
        "security" : [ {
          "Basic" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "Basic" : {
      "description" : "API Gateway Administrator and API Gateway provider",
      "type" : "basic"
    }
  },
  "definitions" : {
    "APIGateway" : {
      "type" : "object",
      "properties" : {
        "Policy Management - Threat Protection" : {
          "type" : "string"
        },
        "Policy Management - Gateway" : {
          "type" : "string"
        },
        "Application Management" : {
          "type" : "string"
        },
        "APIManagement" : {
          "type" : "string"
        }
      }
    },
    "APIGatewayConfig" : {
      "type" : "object",
      "properties" : {
        "elasticsearch" : {
          "$ref" : "#/definitions/Elasticsearch"
        },
        "kibana" : {
          "$ref" : "#/definitions/Kibana"
        },
        "cluster" : {
          "$ref" : "#/definitions/Cluster"
        },
        "keystores" : {
          "type" : "array",
          "description" : "This model contains array of Keystore details",
          "items" : {
            "$ref" : "#/definitions/KeyStore"
          }
        },
        "truststores" : {
          "type" : "array",
          "description" : "This model contains array of Truststore details",
          "items" : {
            "$ref" : "#/definitions/TrustStore"
          }
        },
        "ports" : {
          "type" : "array",
          "description" : "This model contains array of port details",
          "items" : {
            "$ref" : "#/definitions/Port"
          }
        },
        "license" : {
          "$ref" : "#/definitions/LicenseDetail"
        },
        "logConfig" : {
          "$ref" : "#/definitions/LogConfiguration"
        },
        "settings" : {
          "$ref" : "#/definitions/Settings"
        }
      },
      "description" : "API Gateway configuration"
    },
    "APIGatewayYAMLConfig" : {
      "type" : "object",
      "properties" : {
        "apigw" : {
          "$ref" : "#/definitions/APIGatewayConfig"
        }
      }
    },
    "Cluster" : {
      "type" : "object",
      "properties" : {
        "clusterAware" : {
          "type" : "string",
          "description" : "Value indicate whether API gateway is clustered or not"
        },
        "clusterName" : {
          "type" : "string",
          "description" : "Name of the API gateway clustered"
        },
        "tsaURLs" : {
          "type" : "string",
          "description" : "Terracotta server array URL for clustering"
        },
        "terracottaLicenseFileName" : {
          "type" : "string",
          "description" : "Terracotta server license location"
        },
        "clusterSessTimeout" : {
          "type" : "string",
          "description" : "Cluster session time out in seconds"
        },
        "actionOnStartupError" : {
          "type" : "string"
        },
        "pendingRestart" : {
          "type" : "string",
          "description" : "Value indicate configuration is changed and restart is pending for this change to take effect"
        },
        "initialMasterNodes" : {
          "type" : "string"
        }
      },
      "description" : "Used to hold the information about the cluster details of an API Gateway cluster"
    },
    "Elasticsearch" : {
      "type" : "object",
      "properties" : {
        "tenantId" : {
          "type" : "string",
          "description" : "Tenant Id"
        },
        "hosts" : {
          "type" : "string",
          "description" : "Elasticsearch hosts list. Hosts can be specified host1:port1,host2:port2,host3:port3"
        },
        "autostart" : {
          "type" : "string",
          "description" : "auto start Internal Data store. If Elasticsearch is externally configured it has to be manually started. This property needs to be set to false to avoid auto start of Internal Data Store."
        },
        "http" : {
          "$ref" : "#/definitions/Http"
        },
        "https" : {
          "$ref" : "#/definitions/Https"
        },
        "sniff" : {
          "$ref" : "#/definitions/Sniff"
        },
        "outboundProxy" : {
          "$ref" : "#/definitions/OutboundProxy"
        },
        "clientHttpResponseSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum Response payload size in mb"
        },
        "pendingRestart" : {
          "type" : "string",
          "description" : "Value indicate configuration is changed and restart is pending for this change to take effect"
        }
      },
      "description" : "Used to hold the connection of data store for the API Gateway"
    },
    "Http" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string",
          "description" : "Elasticsearch username, which will be used in basic auth for HTTP connection"
        },
        "password" : {
          "type" : "string",
          "description" : "Event Data Store/Elasticsearch password, which will be used in basic auth for HTTP connection"
        },
        "keepAlive" : {
          "type" : "string",
          "description" : "To use persistent connection between APIGateway and Elasticsearch"
        },
        "keepAliveMaxConnections" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of persistent connections that can be maintained between API Gateway and cluster of Elasticsearch"
        },
        "keepAliveMaxConnectionsPerRoute" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of persistent connections that can be maintained between API Gateway and single Elasticsearch for single HTTP route."
        },
        "connectionTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Connection timeout in milli seconds between API Gateway and Elasticsearch"
        },
        "socketTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Read timeout in milli seconds between API Gateway and Elasticsearch"
        },
        "maxRetryTimeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time out in milli seconds to wait for retries. It is advisable to set max retry time for a request to (number of nodes * socketTimeOut )+connectionTimeout"
        }
      },
      "description" : "Used to hold the http connection details."
    },
    "Https" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "type" : "string",
          "description" : "Boolean property to enable secure connection between API Gateway and Elasticsearch. If this property is false none of the above properties related to HTTPS are respected."
        },
        "keystoreFilepath" : {
          "type" : "string",
          "description" : "Keystore location for client authentication"
        },
        "truststoreFilepath" : {
          "type" : "string",
          "description" : "Truststore location contains Elasticsearch certificate details"
        },
        "keystoreAlias" : {
          "type" : "string",
          "description" : "Alias name of the certificate that needs to be used from keystore"
        },
        "keystorePassword" : {
          "type" : "string",
          "description" : "Keystore password"
        },
        "truststorePassword" : {
          "type" : "string",
          "description" : "Truststore password"
        },
        "enforceHostnameVerification" : {
          "type" : "string",
          "description" : "Property to enforce hostname verification. If it is false it will not enforce hostname verification in SSL connection."
        }
      }
    },
    "IntegrationServer" : {
      "type" : "object",
      "properties" : {
        "Product Code" : {
          "type" : "string"
        },
        "Product Version" : {
          "type" : "string"
        },
        "Concurrent Sessions" : {
          "type" : "string"
        },
        "Clustering" : {
          "type" : "string"
        },
        "Publish / Subscribe" : {
          "type" : "string"
        },
        "Adapter Runtime" : {
          "type" : "string"
        },
        "Remote Invoke" : {
          "type" : "string"
        },
        "Guaranteed Delivery" : {
          "type" : "string"
        },
        "Security Auditing" : {
          "type" : "string"
        },
        "Distributed Cache" : {
          "type" : "string"
        },
        "Enterprise Gateway" : {
          "type" : "string"
        }
      }
    },
    "KeyStore" : {
      "type" : "object",
      "properties" : {
        "keyStoreName" : {
          "type" : "string",
          "description" : "The name of the keystore. It cannot contain spaces or special characters. The name of the key store must be unique across all the keystores created in API Gateway."
        },
        "keyStoreDescription" : {
          "type" : "string",
          "description" : "The description for the keystore."
        },
        "keyStoreType" : {
          "type" : "string",
          "description" : "The certificate file format of the keystore.",
          "enum" : [ "JKS", "PKCS12" ]
        },
        "keyStoreProvider" : {
          "type" : "string",
          "description" : "The provider that is used for the keystore type. The default is SUN for JKS type and SunJSSE for PKCS12 type.",
          "enum" : [ "SUN", "SunJSSE" ]
        },
        "keyStorePassword" : {
          "type" : "string",
          "description" : "The keystore password that is defined at the time of keystore creation using a keystore utility."
        },
        "uploadFileName" : {
          "type" : "string",
          "description" : "The name of the keystore file that will be used to save the keystore internally in API Gateway."
        },
        "fileContent" : {
          "type" : "string",
          "description" : "The contents of the keystore file."
        },
        "pkAliasesList" : {
          "type" : "string",
          "description" : "Comma separated list of alias names in the uploaded keystore file."
        },
        "pkPasswordsList" : {
          "type" : "string",
          "description" : "Comma separated list of passwords in the same order as the aliases specified in pkAliasesList. If a particular key alias does not have a password, it is denoted by space."
        },
        "nullPKpasswds" : {
          "type" : "string",
          "description" : "Comma separated list of boolean values (false/true) indicating whether the particular alias has a password or not in the same order as the aliases specified in pkAliasesList. For each key alias, true indicates that the key alias does not have a password and false indicates that it does have a password."
        },
        "bitarray" : {
          "type" : "string",
          "description" : "Comma separated list of bits (1/0) indicating whether the particular key alias has been successfully configured in API Gateway or not. For each key alias, 1 indicates that the key alias was loaded successfully and 0 indicates that the key alias was not loaded/configured."
        },
        "message" : {
          "type" : "string",
          "description" : "The error or warning or success message from persisting the keystore in API Gateway. If there are failures in loading a keystore or a key alias, then the reasons for the failures are indicated by this message."
        },
        "isLoaded" : {
          "type" : "boolean",
          "description" : "Indicates whether the keystore is loaded or not. A keystore may not be loaded if there are errors while reading the keystore file or its key aliases."
        },
        "isWarning" : {
          "type" : "boolean",
          "description" : "Indicates whether a warning is thrown by the API Gateway while persisting the keystore."
        }
      },
      "description" : "This model contains Keystore details"
    },
    "Kibana" : {
      "type" : "object",
      "properties" : {
        "dashboardInstance" : {
          "type" : "string",
          "description" : "Url of the  dashboard for API Gateway to connect"
        },
        "autostart" : {
          "type" : "string",
          "description" : "Auto start internal dashboard shipped with API Gateway"
        },
        "pendingRestart" : {
          "type" : "string",
          "description" : "Value indicate configuration is changed and restart is pending for this change to take effect"
        }
      },
      "description" : "Used to hold dashboard connection details of API Gateway"
    },
    "LicenseDetail" : {
      "type" : "object",
      "properties" : {
        "Sales Information" : {
          "$ref" : "#/definitions/SalesInformation"
        },
        "productInformation" : {
          "$ref" : "#/definitions/ProductInformation"
        },
        "integrationServer" : {
          "$ref" : "#/definitions/IntegrationServer"
        },
        "licenseInformation" : {
          "$ref" : "#/definitions/LicenseInformation"
        },
        "API Gateway" : {
          "$ref" : "#/definitions/APIGateway"
        }
      }
    },
    "LicenseInformation" : {
      "type" : "object",
      "properties" : {
        "Price Unit" : {
          "type" : "string"
        },
        "Price Quantity" : {
          "type" : "string"
        },
        "TypeOfInstallation" : {
          "type" : "string"
        },
        "LicenseType" : {
          "type" : "string"
        },
        "ExtendedRights" : {
          "type" : "string"
        },
        "LicenseVersion" : {
          "type" : "string"
        },
        "Metering" : {
          "type" : "string"
        }
      }
    },
    "LogConfiguration" : {
      "type" : "object",
      "properties" : {
        "apigatewayLogger" : {
          "type" : "string",
          "description" : "The log setting of APIGateway server.Possible values are off,trace,debug,info,warn,error and fatal"
        },
        "elasticSearchLogger" : {
          "type" : "string",
          "description" : "The log setting of Internal Data Store.Possible values are off,info,debug,warn,error and fatal"
        },
        "kibanaLogger" : {
          "type" : "string",
          "description" : "The log setting of APIGateway dashboard.Possible values are silent,quiet and verbose"
        },
        "enableSessionLogger" : {
          "type" : "string",
          "description" : "The log setting enable APIGateway session logs.Possible values are off,trace,debug,info,warn,error and fatal"
        },
        "enableSecurityLogger" : {
          "type" : "string",
          "description" : "The log setting to enable APIGateway security logs.Possible values are true and false."
        },
        "sagOsgiLogger" : {
          "type" : "string",
          "description" : "The log setting of OSGI platform.Possible values are true and false."
        },
        "enableLogAggregation" : {
          "type" : "string",
          "description" : "Enabling log aggregation will collect logs from the different components and store in Internal Data Store or external Elasticsearch.The value can be true or false."
        },
        "logDestination" : {
          "type" : "string",
          "description" : "Specifies where to store the accumulated logs from different stores. Value can be EXTERNAL_ES or INTERNAL"
        },
        "protocol" : {
          "type" : "string",
          "description" : "Protocol to communicate the external elastic search."
        },
        "hostName" : {
          "type" : "string",
          "description" : "Hostname of external elastic search used to send the logs."
        },
        "port" : {
          "type" : "string",
          "description" : "Port to communicate the external elastic search."
        },
        "indexName" : {
          "type" : "string",
          "description" : "Indexname of external elastic search to store the accumulated logs."
        },
        "userName" : {
          "type" : "string",
          "description" : "Username to communicate the external elastic search."
        },
        "password" : {
          "type" : "string",
          "description" : "Password that is used to communicate the external elastic search."
        }
      },
      "description" : "This contains log settings of various components used by APIGateway."
    },
    "OutboundProxy" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "type" : "string",
          "description" : "Boolean property to enable  outbound proxy settings between API Gateway and Elasticsearch"
        },
        "alias" : {
          "type" : "string",
          "description" : "Outbound proxy alias name that is created in API Gateway. The alias needs to be created in API Gateway before using it here"
        }
      }
    },
    "Port" : {
      "type" : "object",
      "properties" : {
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "protocol" : {
          "type" : "string"
        },
        "pkg" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "uniqueID" : {
          "type" : "string"
        },
        "portAlias" : {
          "type" : "string"
        },
        "portDescription" : {
          "type" : "string"
        },
        "factoryKey" : {
          "type" : "string"
        },
        "configURL" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "listenerType" : {
          "type" : "string"
        },
        "clientAuth" : {
          "type" : "string"
        },
        "idProvider" : {
          "type" : "object"
        },
        "ssl" : {
          "type" : "string"
        },
        "maxQueue" : {
          "type" : "string"
        },
        "keepAliveTimeout" : {
          "type" : "string"
        },
        "threadPool" : {
          "type" : "string"
        },
        "minThread" : {
          "type" : "string"
        },
        "maxThread" : {
          "type" : "string"
        },
        "threadPriority" : {
          "type" : "string"
        },
        "usedThreadCount" : {
          "type" : "string"
        },
        "internalPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "curDelay" : {
          "type" : "string"
        },
        "stepsize" : {
          "type" : "string"
        },
        "suspended" : {
          "type" : "string"
        },
        "jsseEnabledProtocols" : {
          "type" : "object"
        },
        "status" : {
          "type" : "string"
        },
        "listening" : {
          "type" : "string"
        },
        "accessMode" : {
          "type" : "string"
        },
        "hasAccessList" : {
          "type" : "string"
        },
        "ipAccessMode" : {
          "type" : "string"
        },
        "hasIPAccessList" : {
          "type" : "string"
        },
        "hostAccessMode" : {
          "type" : "string"
        },
        "hostAllow" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "hostDeny" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "This defines the various fields that related to a particular port."
    },
    "ProductInformation" : {
      "type" : "object",
      "properties" : {
        "Expiration Date" : {
          "type" : "string"
        },
        "Operating System" : {
          "type" : "string"
        },
        "Product Code" : {
          "type" : "string"
        },
        "Product ID" : {
          "type" : "string"
        },
        "Product Name" : {
          "type" : "string"
        },
        "Product Version" : {
          "type" : "string"
        },
        "Usage" : {
          "type" : "string"
        },
        "RenewalDate" : {
          "type" : "string"
        },
        "HigherLevPosNr" : {
          "type" : "string"
        },
        "HigherLevProdCode" : {
          "type" : "string"
        },
        "HigherLevProdName" : {
          "type" : "string"
        }
      }
    },
    "SalesInformation" : {
      "type" : "object",
      "properties" : {
        "Serial Number" : {
          "type" : "string"
        },
        "License Key" : {
          "type" : "string"
        },
        "Customer ID" : {
          "type" : "string"
        },
        "Customer Name" : {
          "type" : "string"
        },
        "ContractDetails" : {
          "type" : "string"
        },
        "ContractPosNumber" : {
          "type" : "string"
        },
        "License Type Details" : {
          "type" : "string"
        },
        "AutoCallHome" : {
          "type" : "string"
        }
      }
    },
    "Settings" : {
      "type" : "object",
      "properties" : {
        "preferredSettings" : {
          "type" : "object",
          "description" : "Contains extended settings.",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Sniff" : {
      "type" : "object",
      "properties" : {
        "enable" : {
          "type" : "string",
          "description" : "Boolean property to enable sniffer. This property helps in adding newly added Elasticsearch node in Elasticsearch cluster with providing its detail here. It will automatically manage the node details by contacting Elasticsearch server"
        },
        "timeInterval" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time interval to refresh Elasticsearch node details in milliseconds"
        }
      }
    },
    "TrustStore" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The unique identifier for the truststore.",
          "readOnly" : true
        },
        "keyStoreName" : {
          "type" : "string",
          "description" : "The name of the truststore. It cannot contain spaces or special characters."
        },
        "keyStoreDescription" : {
          "type" : "string",
          "description" : "The description for the truststore."
        },
        "keyStoreType" : {
          "type" : "string",
          "description" : "The certificate file format of the truststore.",
          "enum" : [ "JKS" ]
        },
        "keyStoreProvider" : {
          "type" : "string",
          "description" : "The provider that is used for the truststore type.",
          "enum" : [ "SUN" ]
        },
        "keyStoreLocation" : {
          "type" : "string",
          "description" : "The location where the truststore is saved in API Gateway."
        },
        "keyStorePassword" : {
          "type" : "string",
          "description" : "The truststore password that is defined at the time of truststore creation using a keystore utility."
        },
        "uploadFileName" : {
          "type" : "string",
          "description" : "The name of the truststore file that will be used to save the truststore internally in API Gateway."
        },
        "fileContent" : {
          "type" : "string",
          "description" : "The contents of the truststore file."
        },
        "certificateAliases" : {
          "type" : "array",
          "description" : "The list of aliases that are available within the truststore.",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "message" : {
          "type" : "string",
          "description" : "The warning message if any. Applies only if isWarning = true"
        },
        "isLoaded" : {
          "type" : "boolean",
          "description" : "Indicates whether the truststore is loaded or not. A truststore may not be loaded if there are errors while reading the truststore file."
        },
        "isWarning" : {
          "type" : "boolean",
          "description" : "Indicates whether there is a warning message from the API Gateway while the truststore was created/modified."
        }
      },
      "description" : "Model containing the properties of a truststore in API Gateway"
    }
  }
}