{
	"info": {
		"_postman_id": "a6f34e8c-8e29-4f29-8814-d24d74ff36fe",
		"name": "Policy Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Policy Actions",
			"item": [
				{
					"name": "Transport",
					"item": [
						{
							"name": "Create Enable HTTP/HTTPS",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Enable HTTP / HTTPS\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"entryProtocolPolicy\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"protocol\",\r\n                \"values\": [\r\n                    \"http\",\r\n                    \"https\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"soapVersion\",\r\n                \"values\": [\r\n                    \"soap\"\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Soap Version:\nCurrently we are supporting 2 types of soap version. They are\n\n1. soap\n2. soap12"
							},
							"response": []
						},
						{
							"name": "Create Set Media Type",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"setMediaType\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"defaultContentType\",\n                \"values\": [\n                    \"application/json\"\n                ]\n            },\n            {\n                \"templateKey\": \"defaultAccept\",\n                \"values\": [\n                    \"application/json\"\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Soap Version:\nCurrently we are supporting 2 types of soap version. They are\n\n1. soap\n2. soap12"
							},
							"response": []
						},
						{
							"name": "Create Enable JMS/AMQP",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"enableJmsORAmqp\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"connectionAlias\",\n                \"values\": [\n                    \"AMQP_CON\"\n                ]\n            },\n            {\n                \"templateKey\": \"jmsOrAmqpSourceDetails\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"sourceName\",\n                        \"values\": [\n                            \"AMQPInputQueue\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"sourceType\",\n                        \"values\": [\n                            \"QUEUE\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"jmsSelector\",\n                        \"values\": []\n                    },\n                    {\n                        \"templateKey\": \"httpResource\",\n                        \"values\": [\n                            \"/softwareAG\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"httpMethods\",\n                        \"values\": [\n                            \"GET\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"content-type\",\n                        \"values\": [\n                            \"application/json\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Soap Version:\nCurrently we are supporting 2 types of soap version. They are\n\n1. soap\n2. soap12"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Identify & Access",
					"item": [
						{
							"name": "Create Authorize User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Authorize User\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"authorizeUser\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"users\",\n                \"values\": [\n                    \"Administrator\"\n                ]\n            },\n            {\n                \"templateKey\": \"groups\",\n                \"values\": [\n                    \"API-Gateway-Administrators\"\n                ]\n            },\n            {\n                \"templateKey\": \"accessProfiles\",\n                \"values\": [\n                    \"Administrators\"\n                ]\n            }\n        ],\n        \"active\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Identify & Authorize Application",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Identify & Authorize Application\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"evaluatePolicy\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"logicalConnector\",\r\n                \"values\": [\r\n                    \"OR\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"allowAnonymous\",\r\n                \"values\": [\r\n                    \"true\"                     \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"IdentificationRule\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"applicationLookup\",\r\n                        \"values\": [\r\n                            \"strict\"          \r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"identificationType\",\r\n                        \"values\": [\r\n                            \"hostNameAddress\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": false\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Allow anonymous applicable values are\n1. true\n2. false\n\n\nApplication Lookup applicable values are\n1. strict - Registered Application\n2. open - Global Application\n3. relax - Global Application and default Application\n\nDifferent Type of Template Keys are\nAPI Key:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"apiKey\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nHTTP Basic Authentication:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"httpBasicAuth\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nOAuth2 Token:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"oAuth2Token\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nOpenID Connect:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"openIdClaims\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nHTTPS Certificate:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"httpsCertificate\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nWS Security Username Token:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"wssecUsernameToken\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nWS Security X.509 Token:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"wssecX509Token\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nPayload Element:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"payloadElement\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"xpath\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"//s\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"namespace\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"templateKey\": \"prefix\",\n\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\"axis2\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"templateKey\": \"uri\",\n\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\"https://axis2.org\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"jsonPath\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"response.paylaod\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"regex\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"softwareag\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n            \nKerberos:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"kerberosToken\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"kerberosTokenAssertion\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"servicePrincipalName\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"Administrator\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"servicePrincipalPassword\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"manage\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n            \nJWT:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"jwtClaims\"\n\t\t\t]\n\t\t}\n\t]\n}\n            \nIP Address:\n{\n\t\"templateKey\": \"IdentificationRule\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"applicationLookup\",\n\t\t\t\"values\": [\n\t\t\t\t\"strict\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"identificationType\",\n\t\t\t\"values\": [\n\t\t\t\t\"ipAddressRange\"\n\t\t\t]\n\t\t}\n\t]\n}"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6492f4fd-8a91-40bd-8a87-054a06b7adfe",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4299f377-cb7c-4ec6-b441-45ed5768e10b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Request Processing",
					"item": [
						{
							"name": "Create Invoke webMethods IS Service",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"requestInvokeESB\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"invokeISService\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"serviceName\",\n                        \"values\": [\n                            \"Service.processRequest:processPayload\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"runAsUser\",\n                        \"values\": [\n                            \"Administrator\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"complyToISSpec\",\n                        \"values\": [\n                            true\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Instead of configuration the webMethods IS service details every time. Create webMethods IS service alias under Administration -> Alias and use it everywhere.\n\n{\n\t\"policyAction\": {\n\t\t\"id\": \"1837bc32-5a2b-44d5-a6c9-2d832d15bdf2\",\n\t\t\"templateKey\": \"requestInvokeESB\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"esbAlias\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"APIGatewayESBAlias\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
							},
							"response": []
						},
						{
							"name": "Create Request Transformation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"requestTransformation\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transformationConditions\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"logicalConnector\",\n                        \"values\": [\n                            \"OR\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"transformationCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"transformationVariable\",\n                                \"values\": [\n                                    \"${request.httpMethod}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"transformationConditionOperator\",\n                                \"values\": [\n                                    \"equals\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"transformationConditionValue\",\n                                \"values\": [\n                                    \"POST\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"requestTransformationConfiguration\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"commonTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"remove\",\n                                \"values\": [\n                                    \"${request.headers.x-Gateway-APIKey}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"addOrModify\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"transformationVariable\",\n                                        \"values\": [\n                                            \"${request.headers.APIKey}\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"transformationValue\",\n                                        \"values\": [\n                                            \"e10a54ce-62f5-42ba-b5cb-a3bace7c39ab\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"methodTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Validate API Specification",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Validate API Specification\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"validateAPISpec\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"schemaValidationFlag\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateQueryParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validatePathParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateCookieParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateContentTypes\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"headersValidationFlag\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateHTTPHeaders\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"logicalConnector\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"AND\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"httpHeaderNonReqValue\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerKey\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Content-Type\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValueNonRequired\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Schema validation for different types of schema are listed below\n\n{\n\t\"templateKey\": \"validateSchema\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/generate-synthetic-annotations\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/id-idref-checkingID_IDREF_CHECKING\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/identity-constraint-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/ignore-xsi-type-until-elemdecl\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/namespace-growth\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/normalized-value\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/validation/schema/root-element-declaration\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/validation/schema/root-type-definition\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/augment-psvi\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/internal/validation/schema/dv-factory\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/element-default\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/schema/external-schemaLocation\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/internal/validator/schema\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/internal/tolerate-duplicates\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/unparsed-entity-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validate-annotations\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema-full-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
							},
							"response": []
						},
						{
							"name": "Create Data Masking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Data Masking\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"requestDataMasking\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"xpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"//request/payload/accountNumber\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"jpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${request.payload.accountNumber}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"sameForTransactionalLogging\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"applyForPayload\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Request Data Masking:\n\nDifferent types of masking types are\n1. XPath\n2. JsonPath\n3. Regex\n\n\nMasking Type applicable values are\n1. mask\n2. filter\n\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Routing",
					"item": [
						{
							"name": "Outbound Authentication - Transport",
							"item": [
								{
									"name": "Create Basic Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"HTTP_BASIC\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"INCOMING_HTTP_BASIC_AUTH\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										},
										"description": "Basic Outbound Authentication:\n\nTo create new basic auth credentials remove the authMode and add the below payload.\n\n\n\t{\n\t\t\"templateKey\": \"authMode\",\n\t\t\"values\": [\n\t\t\t\"NEW\"\n\t\t]\n\t},\n\t{\n\t\t\"templateKey\": \"httpAuthCredentials\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"userName\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"Administrator\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"password\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"manage\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n"
									},
									"response": []
								},
								{
									"name": "Create OAuth2 Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyAction\": {\n    \t \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"OAUTH2\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"INCOMING_OAUTH_TOKEN\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										},
										"description": "OAuth2 Outbound Authentication:\r\n\r\nWe can also provide custom oauth2 token by replacing the \"authMode\" to \"NEW\" and provide the \"oauth2Token\" like below\r\n\r\n\r\n\t{\r\n\t\t\"templateKey\": \"authMode\",\r\n\t\t\"values\": [\r\n\t\t\t\"NEW\"\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\t\"templateKey\": \"oauth2Token\",\r\n\t\t\"values\": [\r\n\t\t\t\"oauth2_token_value_here\"\r\n\t\t]\r\n\t}\r\n"
									},
									"response": []
								},
								{
									"name": "Create JWT Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"JWT\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"INCOMING_JWT\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Alias Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"ALIAS\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"NEW\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alias\",\n                        \"values\": [\n                            \"${HTTP transport security alias}\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Anonymous Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"REMOVE_INCOMING_HTTP_HEADERS\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"NEW\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create NTLM Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Outbound Authentication - Transport\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"outboundTransportAuthentication\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"transportSecurity\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"authType\",\r\n                        \"values\": [\r\n                            \"NTLM\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"authMode\",\r\n                        \"values\": [\r\n                            \"INCOMING_HTTP_BASIC_AUTH\"                     //availabels are NEW,,TRANSPARENT\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										},
										"description": "NTLM Outbound Authentication:\n\nTo pass the custom credentials change the auth mode to \"NEW\" and add the below entries.\n\n{\n\t\"templateKey\": \"httpAuthCredentials\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"userName\",\n\t\t\t\"values\": [\n\t\t\t\t\"Administrator\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"password\",\n\t\t\t\"values\": [\n\t\t\t\t\"manage\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nto make it transparent change the authMode to \"TRANSPARENT\"."
									},
									"response": []
								},
								{
									"name": "Create Kerberos Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Transport\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundTransportAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"KERBEROS\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"INCOMING_KERBEROS\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										},
										"description": "Kerberos Outbound Authentication:\n\nTo provide custom kerberos credentials change the authMode to \"NEW\" and add the below entries.\n\n{\n\t\"templateKey\": \"kerberosCredentials\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"clientPrincipal\",\n\t\t\t\"values\": [\n\t\t\t\t\"value\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"clientPassword\",\n\t\t\t\"values\": [\n\t\t\t\t\"value\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"servicePrincipal\",\n\t\t\t\"values\": [\n\t\t\t\t\"value\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"servicePrincipalNameForm\",\n\t\t\t\"values\": [\n\t\t\t\t\"hostbased\" // or username\n\t\t\t]\n\t\t}\n\t]\n}\n"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Outbound Authentication - Message",
							"item": [
								{
									"name": "Create None Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"policyAction\": {\n\t\t \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Message\",\n                \"locale\": \"en\"\n            }\n        ],\n\t\t\"templateKey\": \"outboundMessageAuthentication\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"messageSecurity\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"authType\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"NONE\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"signAndEncryptConfig\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"keyStoreAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DEFAULT_IS_KEYSTORE\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"keyAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"ssos\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"truststoreAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DEFAULT_IS_TRUSTSTORE\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"certificateAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"ssos\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create WSS Username Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Message\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundMessageAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"messageSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"WSS_USERNAME\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"signAndEncryptConfig\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"keyStoreAlias\",\n                                \"values\": [\n                                    \"DEFAULT_IS_KEYSTORE\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"keyAlias\",\n                                \"values\": [\n                                    \"ssos\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"truststoreAlias\",\n                                \"values\": [\n                                    \"DEFAULT_IS_TRUSTSTORE\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"certificateAlias\",\n                                \"values\": [\n                                    \"ssos\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"NEW\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"wssCredentials\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"userName\",\n                                \"values\": [\n                                    \"Administrator\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"password\",\n                                \"values\": [\n                                    \"manage\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Alias Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Outbound Authentication - Message\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"outboundMessageAuthentication\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transportSecurity\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"authType\",\n                        \"values\": [\n                            \"ALIAS\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"authMode\",\n                        \"values\": [\n                            \"NEW\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"alias\",\n                        \"values\": [\n                            \"${HTTP transport security alias}\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Kerberos Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Outbound Authentication - Message\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"outboundMessageAuthentication\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"messageSecurity\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"authType\",\r\n                        \"values\": [\r\n                            \"KERBEROS\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"authMode\",\r\n                        \"values\": [\r\n                            \"NEW\"                 \r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"kerberosCredentials\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"clientPrincipal\",\r\n                                \"values\": [\r\n                                    \"<value>\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"clientPassword\",\r\n                                \"values\": [\r\n                                    \"<value>\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"servicePrincipal\",\r\n                                \"values\": [\r\n                                    \"<value>\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"servicePrincipalNameForm\",\r\n                                \"values\": [\r\n                                    \"username\"                \r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"signAndEncryptConfig\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"truststoreAlias\",\r\n                                \"values\": [\r\n                                    \"DEFAULT_IS_TRUSTSTORE\"              \r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"certificateAlias\",\r\n                                \"values\": [\r\n                                    \"ssos\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										},
										"description": "Kerberos Outbound Message Authentication:\n\nAuth Mode applicable values are \n1. NEW\n2. DELEGATE_INCOMING\n3. INCOMING_HTTP_BASIC_AUTH\n\n\nService Principal Form applicable values are\n1. hostbased\n2. username"
									},
									"response": []
								},
								{
									"name": "Create Remove WSS Headers Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Outbound Authentication - Message\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"outboundMessageAuthentication\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"messageSecurity\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"authType\",\r\n                        \"values\": [\r\n                            \"REMOVE_WSS_HEADERS\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"authMode\",\r\n                        \"values\": [\r\n                            \"NEW\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										},
										"description": "Kerberos Outbound Message Authentication:\n\nAuth Mode applicable values are \n1. NEW\n2. DELEGATE_INCOMING\n3. INCOMING_HTTP_BASIC_AUTH\n\n\nService Principal Form applicable values are\n1. hostbased\n2. username"
									},
									"response": []
								},
								{
									"name": "Create SAML Outbound Authentication",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Outbound Authentication - Message\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"outboundMessageAuthentication\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"messageSecurity\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"authType\",\r\n                        \"values\": [\r\n                            \"SAML\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"authMode\",\r\n                        \"values\": [\r\n                            \"NEW\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"signAndEncryptConfig\",\r\n                        \"parameters\": [\r\n                            {\r\n                                \"templateKey\": \"truststoreAlias\",\r\n                                \"values\": [\r\n                                    \"DEFAULT_IS_TRUSTSTORE\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"certificateAlias\",\r\n                                \"values\": [\r\n                                    \"ssos\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"keyStoreAlias\",\r\n                                \"values\": [\r\n                                    \"DEFAULT_IS_KEYSTORE\"\r\n                                ]\r\n                            },\r\n                            {\r\n                                \"templateKey\": \"keyAlias\",\r\n                                \"values\": [\r\n                                    \"ssos\"\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions"
											]
										},
										"description": "Kerberos Outbound Message Authentication:\n\nAuth Mode applicable values are \n1. NEW\n2. DELEGATE_INCOMING\n3. INCOMING_HTTP_BASIC_AUTH\n\n\nService Principal Form applicable values are\n1. hostbased\n2. username"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Create Content Based Routing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"contentBasedRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"routeTo\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"endpointUri\",\n                        \"values\": [\n                            \"http://petstore.swagger.io/v2/${sys:resource_path}\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"method\",\n                        \"values\": [\n                            \"CUSTOM\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"connectTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"readTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"contentRules\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"routeTo\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"endpointUri\",\n                                \"values\": [\n                                    \"http://petstore.swagger.io/v2/${sys:resource_path}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"connectTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"readTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"sslConfig\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"keyStoreAlias\",\n                                        \"values\": [\n                                            \"DEFAULT_IS_KEYSTORE\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"keyAlias\",\n                                        \"values\": [\n                                            \"ssos\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"payloadIdentifier\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"expressionType\",\n                                \"values\": [\n                                    \"jsonPath\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"expression\",\n                                \"values\": [\n                                    \"${request.headers.isSSLEnabled}\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"name\",\n                        \"values\": [\n                            \"isSSLEnabled\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Content Based Routing:\n\nThe supported payload identifiers are xpath,jsonpath and regex.\n\nXPath Payload Identifier:\n{\n\t\"templateKey\": \"payloadIdentifier\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\"values\": [\n\t\t\t\t\"xpath\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"expression\",\n\t\t\t\"values\": [\n\t\t\t\t\"/request/header/enableSSL\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nRegex Payload Identifier:\n{\n\t\"templateKey\": \"payloadIdentifier\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\"values\": [\n\t\t\t\t\"xpath\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"expression\",\n\t\t\t\"values\": [\n\t\t\t\t\"/request/header/enableSSL\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nAlso we can add multiple rules for content based routing by adding the section with template key \"contentRules\"."
							},
							"response": []
						},
						{
							"name": "Create Context Based Routing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"contextBasedRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"routeTo\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"endpointUri\",\n                        \"values\": [\n                            \"http://petstore.swagger.io/v2/${sys:resource_path}\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"method\",\n                        \"values\": [\n                            \"CUSTOM\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"connectTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"readTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"contextRules\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"name\",\n                        \"values\": [\n                            \"ContextBasedRoutingRule\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextConditionOperator\",\n                        \"values\": [\n                            \"or\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"routeTo\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"endpointUri\",\n                                \"values\": [\n                                    \"https://petstore.swagger.io/v2/${sys:resource_path}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"connectTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"readTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"sslConfig\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"keyStoreAlias\",\n                                        \"values\": [\n                                            \"DEFAULT_IS_KEYSTORE\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"keyAlias\",\n                                        \"values\": [\n                                            \"ssos\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"conditionVariable\",\n                                \"values\": [\n                                    \"Consumer\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionValue\",\n                                \"values\": [\n                                    \"039778fc-dd3b-442b-a799-181a9dda1265\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"conditionVariable\",\n                                \"values\": [\n                                    \"Date\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionOperator\",\n                                \"values\": [\n                                    \"LT\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionValue\",\n                                \"values\": [\n                                    \"2020-04-20\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"conditionVariable\",\n                                \"values\": [\n                                    \"IPV4\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"fromIp\",\n                                \"values\": [\n                                    \"10.60.0.1\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"toIp\",\n                                \"values\": [\n                                    \"10.60.0.10\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"contextCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"conditionVariable\",\n                                \"values\": [\n                                    \"predefined\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionOperator\",\n                                \"values\": [\n                                    \"EQ\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionDataType\",\n                                \"values\": [\n                                    \"USER\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"conditionValue\",\n                                \"values\": [\n                                    \"Administrator\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Date:\nApplicable conditionOperator for Date is GT(greater than) and LT(lesser than).\n\nIPV6:\nSimilar to what given in IPv4 we can also add IPv6 address limit with key \"IPv6\".\n\nTime:\nApplicable conditionOperator for time is GT(greater than) and LT(lesser than).\n{\n\t\"templateKey\": \"contextCondition\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"conditionVariable\",\n\t\t\t\"values\": [\n\t\t\t\t\"Time\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"conditionOperator\",\n\t\t\t\"values\": [\n\t\t\t\t\"LT\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"hours\",\n\t\t\t\"values\": [\n\t\t\t\t\"20\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"minutes\",\n\t\t\t\"values\": [\n\t\t\t\t\"20\"\n\t\t\t]\n\t\t}\n\t]\n}\n\nPredefined Context Variables:\nSimilar to User we have few other conditionDataType for Predefined Context Variables with \n\nconditionOperator\n1. EQ(equal to)\n2. NEQ(not equal to)\n\nthey are \n\n1. INBOUND_HTTP_METHOD\n2. MESSAGE_TYPE - (Inbound Content Type)\n3. BUILDER_TYPE - (Inbound Accept)\n4. INBOUND_IP\n5. INBOUND_REQUEST_URI\n6. INBOUND_PROTOCOL\n7. ROUTING_METHOD\n8. MEDIATOR_IP - (Gateway IP)\n9. MEDIATOR_HOSTNAME - (Gateway HostName)\n10. OPERATION\n"
							},
							"response": []
						},
						{
							"name": "Create Dynamic Routing Policy Action",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"dynamicRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"routeTo\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"endpointUri\",\n                        \"values\": [\n                            \"https://petstore.swagger.io/v2/${sys:resource_path}\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"method\",\n                        \"values\": [\n                            \"CUSTOM\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"connectTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"readTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"sslConfig\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"keyStoreAlias\",\n                                \"values\": [\n                                    \"DEFAULT_IS_KEYSTORE\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"keyAlias\",\n                                \"values\": [\n                                    \"ssos\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"dynamicRule\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"routingConditionKey\",\n                        \"values\": [\n                            \"context\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"dynRouteTo\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"dynEndpointUri\",\n                                \"values\": [\n                                    \"http://petstore.swagger.io/v2/${sys:resource_path}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"connectTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"readTimeout\",\n                                \"values\": [\n                                    \"30\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Dynamic routing with Header:\n\nChange the routingConditionKey to \"header\" and add \"routingConditionValue\" like below.\n\n{\n\t\t\"templateKey\": \"routingConditionKey\",\n\t\t\"values\": [\n\t\t\t\"header\"\n\t\t]\n\t},\n\t{\n\t\t\"templateKey\": \"routingConditionValue\",\n\t\t\"values\": [\n\t\t\t\"dynamicRoutingHeader\"\n\t\t]\n\t}"
							},
							"response": []
						},
						{
							"name": "Create Load Balancing Routing Policy Action",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"loadBalancerRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"lbRouteTo\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"endpointUri\",\n                        \"values\": [\n                            \"https://petstore.swagger.io/v2/${sys:resource_path}\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"method\",\n                        \"values\": [\n                            \"CUSTOM\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"connectTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"readTimeout\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"suspendDurationOnFailure\",\n                        \"values\": [\n                            \"30\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"sslConfig\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"keyStoreAlias\",\n                                \"values\": [\n                                    \"DEFAULT_IS_KEYSTORE\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"keyAlias\",\n                                \"values\": [\n                                    \"ssos\"\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"serviceRegistryParameters\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"discoveryEndpointPathParameter\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"parameter\",\n                                        \"values\": [\n                                            \"seriviceDiscoveryParameter\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"parameterValue\",\n                                        \"values\": [\n                                            \"serviceDiscoveryValue\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Load Balancing Routing:\n\nTo add multiple endpoints in the load balancing routing, add another entry for template key \"lbRouteTo\" object with the needed details like below.\n\n{\n\t\"templateKey\": \"lbRouteTo\",\n\t\"parameters\":[....]\n},\n{\n\t\"templateKey\": \"lbRouteTo\",\n\t\"parameters\":[....]\n}"
							},
							"response": []
						},
						{
							"name": "Create Custom HTTP Header Policy Action",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Custom HTTP Header\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"customHttpHeaders\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"header\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"headerKey\",\r\n                        \"values\": [\r\n                            \"Accept\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"headerValue\",\r\n                        \"values\": [\r\n                            \"application/json\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Straight Through Routing Policy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Straight Through Routing\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"straightThroughRouting\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"endpointUri\",\n                \"values\": [\n                    \"http:google.com\"\n                ]\n            },\n            {\n                \"templateKey\": \"method\",\n                \"values\": [\n                    \"CUSTOM\"\n                ]\n            },\n            {\n                \"templateKey\": \"sslConfig\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"keyStoreAlias\",\n                        \"values\": [\n                            \"DEFAULT_IS_KEYSTORE\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"keyAlias\",\n                        \"values\": [\n                            \"ssos\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Straight Through Routing Policy:\n\nBy default API Gateway will create Straight Through Routing policy while creating an API."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Traffic Monitoring",
					"item": [
						{
							"name": "Create Log Invocation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Log Invocation\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"logInvocation\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"storeRequestHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeRequestPayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponseHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponsePayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeClientMessage\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeServerMessage\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeAsZip\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"logGenerationFrequency\",\r\n                \"values\": [\r\n                    \"OnSuccess\"                  \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Error\"                       \r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Log Invocation:\n\nLog Generation Frequency applicable values are\n1. Always\n2. OnSuccess\n3. OnFailure\n\nDestinations applicable destinations are\n1. APIPORTAL\n2. AUDITLOG\n3. CENTRASITE\n4. DES\n5. ELASTICSEARCH\n6. JDBC\n7. SNMP\n\nLog level for LocalLog applicable values are\n1. Error\n2. Info\n3. Warn"
							},
							"response": []
						},
						{
							"name": "Create Monitor Service Level Agreement",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Monitor Service Level Agreement\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"monitorSLA\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"alertInterval\",\r\n                \"values\": [\r\n                    \"2\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertIntervalUnit\",\r\n                \"values\": [\r\n                    \"minutes\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertFrequency\",\r\n                \"values\": [\r\n                    \"once\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertMessage\",\r\n                \"values\": [\r\n                    \"alert message flows here\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"consumerIds\",\r\n                \"values\": [\r\n                    \"a67f6c1e-77ff-423d-a9e7-917e11f5a4e0\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Warn\"       \r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"monitorRules\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"monitorRuleName\",\r\n                        \"values\": [\r\n                            \"availability\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"monitorRuleOperator\",\r\n                        \"values\": [\r\n                            \"EQ\"                      \r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"value\",\r\n                        \"values\": [\r\n                            \"1\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Monitor Service Level Agreement:\n\nLog Generation Frequency applicable values are\n1. Always\n2. OnSuccess\n3. OnFailure\n\nDestinations applicable destinations are\n1. APIPORTAL\n2. AUDITLOG\n3. CENTRASITE\n4. DES\n5. ELASTICSEARCH\n6. JDBC\n7. SNMP\n\nLog level for LocalLog applicable values are\n1. Error\n2. Info\n3. Warn\n\nWe can add multiple \"monitorRules\" object with the different types of \"monitorRuleName\" and \"monitorRuleOperator\" specified below.\n\nMonitor Rule Name applicable values are\n1. availability\n2. avgResponseTime\n3. faultCount\n4. maxResponseTime\n5. minResponseTime\n6. successCount\n7. requestCount\n\nMonitor Rule Operator applicable values are\n1. EQ\n2. GT\n3. LT"
							},
							"response": []
						},
						{
							"name": "Create Monitor Service Performance",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n         \"names\": [\r\n            {\r\n                \"value\": \"Monitor Service Performance\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"monitorServicePerformance\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"alertInterval\",\r\n                \"values\": [\r\n                    \"2\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertIntervalUnit\",\r\n                \"values\": [\r\n                    \"minutes\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertFrequency\",\r\n                \"values\": [\r\n                    \"once\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertMessage\",\r\n                \"values\": [\r\n                    \"alert message flows here\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Warn\"       \r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"monitorRules\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"monitorRuleName\",\r\n                        \"values\": [\r\n                            \"availability\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"monitorRuleOperator\",\r\n                        \"values\": [\r\n                            \"EQ\"                      \r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"value\",\r\n                        \"values\": [\r\n                            \"1\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Monitor Service Performance:\n\nLog Generation Frequency applicable values are\n1. Always\n2. OnSuccess\n3. OnFailure\n\nDestinations applicable destinations are\n1. APIPORTAL\n2. AUDITLOG\n3. CENTRASITE\n4. DES\n5. ELASTICSEARCH\n6. JDBC\n7. SNMP\n\nLog level for LocalLog applicable values are\n1. Error\n2. Info\n3. Warn\n\nWe can add multiple \"monitorRules\" object with the different types of \"monitorRuleName\" and \"monitorRuleOperator\" specified below.\n\nMonitor Rule Name applicable values are\n1. availability\n2. avgResponseTime\n3. faultCount\n4. maxResponseTime\n5. minResponseTime\n6. successCount\n7. requestCount\n\nMonitor Rule Operator applicable values are\n1. EQ\n2. GT\n3. LT"
							},
							"response": []
						},
						{
							"name": "Create Throttling Traffic Optimization",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Throttling Traffic Optimization\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"throttle\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"throttleRule\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"throttleRuleName\",\r\n                        \"values\": [\r\n                            \"requestCount\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"monitorRuleOperator\",\r\n                        \"values\": [\r\n                            \"GT\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"value\",\r\n                        \"values\": [\r\n                            \"1\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertInterval\",\r\n                \"values\": [\r\n                    \"1\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertIntervalUnit\",\r\n                \"values\": [\r\n                    \"minutes\"                        \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertFrequency\",\r\n                \"values\": [\r\n                    \"once\"                      \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"alertMessage\",\r\n                \"values\": [\r\n                    \"alert message flows here\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"consumerIds\",\r\n                \"values\": [\r\n                    \"ed12d783-ef97-4b57-a0b5-7ca06805e8af\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Error\"                        \r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Throttling Traffic Optimization\n\nDestinations applicable destinations are\n1. APIPORTAL\n2. AUDITLOG\n3. CENTRASITE\n4. DES\n5. ELASTICSEARCH\n6. JDBC\n7. SNMP\n\nLog level for LocalLog applicable values are\n1. Error\n2. Info\n3. Warn\n\nAlert frequency applicable values are\n1. once\n2. always\n\nAlert Interval Unit applicable values are\n1. minutes\n2. hours\n3. days\n4. weeks"
							},
							"response": []
						},
						{
							"name": "Create Service Result Cache",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Service Result Cache\",\n                \"locale\": \"en\"\n            }\n        ],\n\t\t\"templateKey\": \"serviceResultCache\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"cacheCriteria\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"httpHeader\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"httpHeaderName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Accept\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"whiteList\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\t\t\t\t\"text/xml\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"XPATH\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"xpath-exp\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"/request/headers\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"whiteList\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\t\t\t\t\"text/xml\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"namespace-src\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"prefix-src\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"axis2\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"uri-src\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"https://ws.axis2.org\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"queryParam\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"queryParamName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"srcResponse\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"whiteList\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"true\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"ttl\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"5d 4h 1m\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"max-payload-size\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"1024\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Response Processing",
					"item": [
						{
							"name": "Create Invoke webMethods IS Service",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Response Invoke ESB\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n        \"templateKey\": \"responseInvokeESB\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"invokeISService\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"serviceName\",\n                        \"values\": [\n                            \"Service.processRequest:processPayload\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"runAsUser\",\n                        \"values\": [\n                            \"Administrator\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"complyToISSpec\",\n                        \"values\": [\n                            true\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Instead of configuration the webMethods IS service details every time. Create webMethods IS service alias under Administration -> Alias and use it everywhere.\n\n{\n\t\"policyAction\": {\n\t\t\"id\": \"1837bc32-5a2b-44d5-a6c9-2d832d15bdf2\",\n\t\t\"templateKey\": \"requestInvokeESB\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"esbAlias\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"APIGatewayESBAlias\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
							},
							"response": []
						},
						{
							"name": "Create Validate API Specification",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Validate API Specification\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"validateAPISpec\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"schemaValidationFlag\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateQueryParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validatePathParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateCookieParams\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateContentTypes\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"headersValidationFlag\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"validateHTTPHeaders\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"logicalConnector\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"AND\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"httpHeaderNonReqValue\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerKey\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Content-Type\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValueNonRequired\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Schema validation for different types of schema are listed below\n\n{\n\t\"templateKey\": \"validateSchema\",\n\t\"parameters\": [\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/generate-synthetic-annotations\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/id-idref-checkingID_IDREF_CHECKING\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/identity-constraint-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/ignore-xsi-type-until-elemdecl\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/namespace-growth\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/normalized-value\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/validation/schema/root-element-declaration\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/validation/schema/root-type-definition\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/augment-psvi\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/internal/validation/schema/dv-factory\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema/element-default\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/schema/external-schemaLocation\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/properties/internal/validator/schema\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/internal/tolerate-duplicates\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/unparsed-entity-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validate-annotations\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema-full-checking\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"templateKey\": \"schemaProperties\",\n\t\t\t\"parameters\": [\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureNames\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"http://apache.org/xml/features/validation/schema\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"templateKey\": \"featureValues\",\n\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\"True\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}"
							},
							"response": []
						},
						{
							"name": "Create Data Masking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Data Masking\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"responseDataMasking\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"xpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"//request/payload/accountNumber\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"jpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${request.payload.accountNumber}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"sameForTransactionalLogging\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"applyForPayload\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Response Data Masking:\n\nDifferent types of masking types are\n1. XPath\n2. JsonPath\n3. Regex\n\n\nMasking Type applicable values are\n1. mask\n2. filter\n\n\n\n"
							},
							"response": []
						},
						{
							"name": "Create CORS",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"CORS\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"cors\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"corsAttributes\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"allowedOrigins\",\n                        \"values\": [\n                            \"10.60.20.30\",\n                            \"10.60.20.31\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"allowHeaders\",\n                        \"values\": [\n                            \"application/json\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"exposeHeaders\",\n                        \"values\": [\n                            \"application/json\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"allowCredentials\",\n                        \"values\": [\n                            \"true\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"allowMethods\",\n                        \"values\": [\n                            \"GET\",\n                            \"POST\",\n                            \"PUT\",\n                            \"DELETE\",\n                            \"PATCH\",\n                            \"HEAD\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"maxAge\",\n                        \"values\": [\n                            \"12\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Request Transformation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"templateKey\": \"responseTransformation\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"transformationConditions\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"logicalConnector\",\n                        \"values\": [\n                            \"OR\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"transformationCondition\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"transformationVariable\",\n                                \"values\": [\n                                    \"${request.httpMethod}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"transformationConditionOperator\",\n                                \"values\": [\n                                    \"equals\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"transformationConditionValue\",\n                                \"values\": [\n                                    \"POST\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"requestTransformationConfiguration\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"commonTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"remove\",\n                                \"values\": [\n                                    \"${request.headers.x-Gateway-APIKey}\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"addOrModify\",\n                                \"parameters\": [\n                                    {\n                                        \"templateKey\": \"transformationVariable\",\n                                        \"values\": [\n                                            \"${request.headers.APIKey}\"\n                                        ]\n                                    },\n                                    {\n                                        \"templateKey\": \"transformationValue\",\n                                        \"values\": [\n                                            \"e10a54ce-62f5-42ba-b5cb-a3bace7c39ab\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"methodTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"method\",\n                                \"values\": [\n                                    \"CUSTOM\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Error Handling",
					"item": [
						{
							"name": "Create Data Masking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n\t\t\"names\": [\n\t\t\t{\n\t\t\t\t\"value\": \"Data Masking\",\n\t\t\t\t\"locale\": \"en\"\n\t\t\t}\n\t\t],\n\t\t\"templateKey\": \"faultDataMasking\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"xpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"//request/payload/accountNumber\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"jpathMasking\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"maskingCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"action\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${request.payload.accountNumber}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskingType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"mask\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"maskValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"********\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n                \"templateKey\": \"regexMasking\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"maskingCriteria\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"action\",\n                                \"values\": [\n                                    \"//s\"\n                                ]\n                            },\n                            {\n                                \"templateKey\": \"maskingType\",\n                                \"values\": [\n                                    \"mask\"                          \n                                ]\n                            },\n                            {\n                                \"templateKey\": \"maskValue\",\n                                \"values\": [\n                                    \"********\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n\t\t\t{\n\t\t\t\t\"templateKey\": \"sameForTransactionalLogging\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"applyForPayload\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"true\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"active\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								},
								"description": "Fault Data Masking:\n\nDifferent types of masking types are\n1. XPath\n2. JsonPath\n3. Regex\n\n\nMasking Type applicable values are\n1. mask\n2. filter\n\n"
							},
							"response": []
						},
						{
							"name": "Create Conditional Error Processing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n\t\t\"templateKey\": \"conditionalErrorProcessing\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"preProcessingSteps\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"invokeESBParam\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"esbAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"WmAPIGatewayESB\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customFailureMessages\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"sendNativeProviderFault\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"false\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"failureMessage\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"contentType\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"errortemplate\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"{\\\"errorMessage\\\":\\\"unauthorized request\\\"}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"useAsDefault\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"postProcessingSteps\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"invokeESBParam\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"esbAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"WmAPIGatewayESB\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"faultCriteria\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"statusCodeCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"statusCode\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"401\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"faultCriteria\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"headerCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Accept\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"faultCriteria\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"xpathCriteria\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"xpath\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"/request/payload/error\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"value\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"unauthorized\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"payloadIdentifier\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"expressionType\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"jsonPath\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"expression\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"${request.payload.error}\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"value\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"unauthorized\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Service Result Cache",
					"item": [
						{
							"name": "Get Cache Details By API Name And Version",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/serviceResultCache?apiName=SoftwareAG&apiVersion=1.0",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"serviceResultCache"
									],
									"query": [
										{
											"key": "apiName",
											"value": "SoftwareAG",
											"description": "(Required) This query parameter is used to specify the API name for which the service result cache element size needs to be fetched."
										},
										{
											"key": "apiVersion",
											"value": "1.0",
											"description": "(Required) The version of the apiName parameter specified"
										}
									]
								},
								"description": "You can enable API caching in API Gateway to cache your native service's response. With caching, you can reduce the number of calls made to your endpoint and also improve the latency of the requests to your API. When you enable caching for a stage, API Gateway caches responses from your endpoint for a specified time to live period. API Gateway then responds to the request by looking up the endpoint response from the cache instead of making a request to your endpoint. \n\nService Result cache can be configured for a API or Resource/method or Operation. \n\nThis REST Request is used to get the Service Result cache size for an API using apiName and apiVersion."
							},
							"response": [
								{
									"name": "This status code indicates that the server has encountered an error while fetching the Service Result cache for the API",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the request for Service Result Cache size has been successfully returned. The response will have number of cache elements (A cached element is nothing but a single response) for the given API name and version, so it infers that the number of responses are actually cached for this API",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"Cache size\\\": 2\\r\\n}\""
								},
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator access.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Cache Details By API Name And Version",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/serviceResultCache?apiName=Petstore&apiVersion=1.0",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"serviceResultCache"
									],
									"query": [
										{
											"key": "apiName",
											"value": "Petstore",
											"description": "(Required) This query parameter is used to specify the API name for which the service result cache deletion is requsted."
										},
										{
											"key": "apiVersion",
											"value": "1.0",
											"description": "(Required) The version of the apiName parameter specified"
										}
									]
								},
								"description": "This REST Request is used to request for deletion of Service Result cache for the API using apiName and apiVersion"
							},
							"response": [
								{
									"name": "This status code indicates that the server has encountered an error while deleting the Service Result cache for the API",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that Service Result Cache has been deleted for the specified API and no data is returned in response",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API Gateway provider access to delete the Service Result Cache of the specified API.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache?apiName=<string>&apiVersion=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache"
											],
											"query": [
												{
													"key": "apiName",
													"value": "<string>"
												},
												{
													"key": "apiVersion",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Cache Details By API Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/serviceResultCache/:apiId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"serviceResultCache",
										":apiId"
									],
									"variable": [
										{
											"key": "apiId",
											"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0",
											"description": "(Required) The id of API for which the cached response size is requested"
										}
									]
								},
								"description": "This REST Request is used to get the Service Result cache size for the API using apiID. An alternative REST API call for /serviceResultCache. Instead of specifying name and version, if you know API id you can directly use that id to get the number of cached responses for that API"
							},
							"response": [
								{
									"name": "This status code indicates that the request for Service Result Cache size is successfully returned. The response will have number of cache elements (A cached element is nothing but a single response) for the given API id, so it infers that the number of responses are actually cached for this API ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n\\t\\\"Cache size\\\": 2\\r\\n}\""
								},
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator access",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the server has encountered an error while fetching the Service Result Cache for the API",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Cache Details by API Id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/serviceResultCache/:apiId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"serviceResultCache",
										":apiId"
									],
									"variable": [
										{
											"description": "(Required) The id of API for which the Service Result Cache deletion is requested",
											"key": "apiId",
											"value": "2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0"
										}
									]
								},
								"description": "This REST Request is used to request for deletion of Service Result Cache for the API using api id"
							},
							"response": [
								{
									"name": "This status code indicates that Service Result Cache has been deleted for the API and no data is returned in response ",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API Gateway provider access to delete the Service Result cache of the specified API.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the server has encountered an error while deleting the Service Result Cache for the API",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/serviceResultCache/:apiId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"serviceResultCache",
												":apiId"
											],
											"variable": [
												{
													"key": "apiId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3365d25-7479-4025-bf3d-4a2dee1604c0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e934685a-c16b-4957-a152-82e39aaf0da4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Custom Extension",
					"item": [
						{
							"name": "Create External Callout Policy Action",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Custom Extension\",\n                \"locale\": \"en\"\n            }\n        ],\n\t\t\"templateKey\": \"customPolicy\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionType\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"externalCallout\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"externalEndpoint\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"endpointUri\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"${EndpointAlias}/rest/service/jsonTransformation/{pathParam}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"externalEndpointMethod\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"CUSTOM\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"endpointSSLConfig\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"keyStoreAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DEFAULT_IS_KEYSTORE\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"keyAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"ssos\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"truststoreAlias\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"DEFAULT_IS_TRUSTSTORE\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"connectTimeout\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"30\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"readTimeout\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"30\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"mashupPathParamTransformation\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupPathParams\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"mashupPathParamName\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"pathParam\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"mashupPathParamValue\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"pathValue\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionRequestProcessing\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"requestPayload\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"${request.payload}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"mashupHeaderTransformation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"useIncomingHeaders\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"customHeaders\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Accept\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"mashupQueryParamsTransformation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"mashupQueryParams\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupQueryParamName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"queryParam\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupQueryParamValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"queryValue\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionResponseProcessing\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"copyEntireResponse\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"abortInCaseOfFailure\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create webMethods IS Service Policy Action",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Custom Extension\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"customPolicy\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"customExtensionType\",\n                \"values\": [\n                    \"invokeESB\"\n                ]\n            },\n            {\n                \"templateKey\": \"esbServices\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"esbAlias\",\n                        \"values\": [\n                            \"WmAPIGatewayESB\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create AWS Lambda Policy Action",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Custom Extension\",\n                \"locale\": \"en\"\n            }\n        ],\n\t\t\"templateKey\": \"customPolicy\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionType\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"awsLambda\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionRequestProcessing\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"requestPayload\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"${request.payload}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"mashupHeaderTransformation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"useIncomingHeaders\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"customHeaders\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"Content-type\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"headerValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"application/json\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"mashupQueryParamsTransformation\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"mashupQueryParams\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupQueryParamName\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"queryParam\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"mashupQueryParamValue\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"queryValue\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customExtensionResponseProcessing\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"copyEntireResponse\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"abortInCaseOfFailure\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"responsePayloadMap\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"responseFromCustomPolicyExpression\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${request.headers.APIKey}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"targetPayloadExpression\",\n\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\"${response.payload.apiKey}\"\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"awsLambda\",\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"functionName\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"JsonTransformation\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"invocationType\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"RequestResponse\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"awsAlias\",\n\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\"${NECROLAX}\"\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"templateKey\": \"awsClientConfig\",\n\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"clientConfiguration\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"awsClientConfigName\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"connectionTimeout\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"awsClientConfigValue\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"3000\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"templateKey\": \"clientConfiguration\",\n\t\t\t\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"awsClientConfigName\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"requestTimeout\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"templateKey\": \"awsClientConfigValue\",\n\t\t\t\t\t\t\t\t\t\t\"values\": [\n\t\t\t\t\t\t\t\t\t\t\t\"3000\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Messaging Policy Action",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policyAction\": {\n        \"names\": [\n            {\n                \"value\": \"Custom Extension\",\n                \"locale\": \"en\"\n            }\n        ],\n        \"templateKey\": \"customPolicy\",\n        \"parameters\": [\n            {\n                \"templateKey\": \"customExtensionType\",\n                \"values\": [\n                    \"messaging\"\n                ]\n            },\n            {\n                \"templateKey\": \"customExtensionRequestProcessing\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"requestPayload\",\n                        \"values\": [\n                            \"{\\n\\\"echoAMQP\\\" : ${request.payload}\\n}\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"mashupHeaderTransformation\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"useIncomingHeaders\",\n                        \"values\": [\n                            \"false\"\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"customExtensionResponseProcessing\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"copyEntireResponse\",\n                        \"values\": [\n                            \"true\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"abortInCaseOfFailure\",\n                        \"values\": [\n                            \"true\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"mashupHeaderTransformation\",\n                        \"parameters\": [\n                            {\n                                \"templateKey\": \"useIncomingHeaders\",\n                                \"values\": [\n                                    \"false\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"templateKey\": \"messaging\",\n                \"parameters\": [\n                    {\n                        \"templateKey\": \"connectionAlias\",\n                        \"values\": [\n                            \"AMQP_CON\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destinationQueueOrTopicName\",\n                        \"values\": [\n                            \"amqpCPQueue\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"destinationQueueOrTopicType\",\n                        \"values\": [\n                            \"QUEUE\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"replyToQueueOrTopicName\",\n                        \"values\": [\n                            \"amqpCPReplyQueue\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"replyToQueueOrTopicType\",\n                        \"values\": [\n                            \"QUEUE\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"timeToLive\",\n                        \"values\": [\n                            \"20000\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"timeToWait\",\n                        \"values\": [\n                            \"30000\"\n                        ]\n                    },\n                    {\n                        \"templateKey\": \"deliveryMode\",\n                        \"values\": [\n                            \"NON_PERSISTENT\"\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policyActions",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policyActions"
									]
								}
							},
							"response": []
						}
					],
					"description": "Custom Extension:\n\nTo know more about Custom Extension please refer below techcommunity article.\n\nTECHCommunity Article:\nhttp://techcommunity.softwareag.com/pwiki/-/wiki/Main/Custom%20Extension%20policy%20in%20API%20Gateway\n\nCustom Extension is supported in 5 stages of API Invoke flow. They are\n\n1. Identify & Access - IAM\n2. Request Processing - requestPayloadProcessing\n3. Routing - routing\n4. Response Processing - responseProcessing\n5. Error Handling - responseFaultProcessing",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "28b1fe12-b82d-40d9-8d5d-4a287bbdea24",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "022081fe-c354-4b07-9bf0-d089bad5fa09",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get PolicyAction by PolicyAction ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/policyActions/:policyActionId",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"policyActions",
								":policyActionId"
							],
							"variable": [
								{
									"key": "policyActionId",
									"value": "830a33fb-6967-4133-b5dd-88a43cea67a6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Policy Actions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/policyActions",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"policyActions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Policy Action",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/policyActions/:policyActionId",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"policyActions",
								":policyActionId"
							],
							"variable": [
								{
									"key": "policyActionId",
									"value": "a1c8b26a-2fd1-4877-980d-3dd1c2c9caab"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Policies",
			"item": [
				{
					"name": "Threat Protection",
					"item": [
						{
							"name": "Global IP DOS",
							"item": [
								{
									"name": "Get Global DOS",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/policyActions/globalipdos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions",
												"globalipdos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Global DOS",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"policyAction\": {\n\t\t\"id\": \"globalipdos\",\n\t\t\"templateKey\": \"globalipdos\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"limitBy\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"GLOBALIP\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"isDOSEnabled\",\n\t\t\t\t\"values\": [\n\t\t\t\t\ttrue\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"maximumRequests\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t5\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"requestsPerSeconds\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"inProgressRequests\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t4\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"whenLimitExceeds\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"Block\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"blockInterval\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t1\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customErrorMessage\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"<img src=\\\"x\\\" onerror=alert(1) onerror=\\\"alert(22)\\\">\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"trustedIPRange\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"10.60.22.32\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions/globalipdos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions",
												"globalipdos"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "DOS by IP",
							"item": [
								{
									"name": "Get DOS by IP",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/policyActions/ipdos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions",
												"ipdos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update DOS by IP",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"policyAction\": {\n\t\t\"id\": \"ipdos\",\n\t\t\"templateKey\": \"ipdos\",\n\t\t\"parameters\": [\n\t\t\t{\n\t\t\t\t\"templateKey\": \"limitBy\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"IP\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"isDOSEnabled\",\n\t\t\t\t\"values\": [\n\t\t\t\t\ttrue\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"maximumRequests\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"5\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"requestsPerSeconds\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"60\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"inProgressRequests\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"2\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"whenLimitExceeds\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"Add to Deny List\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"blockInterval\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t0\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"customErrorMessage\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"Request reached limit by IP\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"templateKey\": \"trustedIPRange\",\n\t\t\t\t\"values\": [\n\t\t\t\t\t\"10.60.22.33\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseURL}}/policyActions/ipdos",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"policyActions",
												"ipdos"
											]
										},
										"description": "To block the request change the payload with the values below\n\n{\n    \"templateKey\": \"whenLimitExceeds\",\n    \"values\": [\n        \"Block\"\n    ]\n}\n    \n//provide the blockInterval in minutes    \n{\n    \"templateKey\": \"blockInterval\",\n    \"values\": [\n        \"1\"\n    ]\n}"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Mobile Device and App",
							"item": [
								{
									"name": "Get Mobile Configurations",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseURL}}/configurations/mobileApp",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"configurations",
												"mobileApp"
											]
										},
										"description": "You can use API Gateway to disable access for certain mobile application versions on a predefined set of mobile platforms. By registering the required devices and applications and disabling access to these versions, you ensure that all users use the latest versions of the applications and take advantage of the latest security and functional updates."
									},
									"response": [
										{
											"name": "This status code indicates that the mobileApp not mentioned in API access uri path.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/configurations/mobileApp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"configurations",
														"mobileApp"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\"Missing mandatory field configId in request.\\\"\\r\\n}\""
										},
										{
											"name": "This status code indicates that the user is not a valid API Gateway user for retrieving the Mobile Applications configuration.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/configurations/mobileApp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"configurations",
														"mobileApp"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the Mobile Applications configurations are retrieved successfully. ",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/configurations/mobileApp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"configurations",
														"mobileApp"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"mobileApplications\\\": [\\r\\n        \\\"MyApp\\\",\\r\\n        \\\"HelloApplication\\\"\\r\\n    ],\\r\\n    \\\"mobileAppDeviceTypes\\\": [\\r\\n        \\\"Android\\\",\\r\\n        \\\"ios\\\"\\r\\n    ]\\r\\n}\""
										}
									]
								},
								{
									"name": "Create Mobile Application Configurations",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"mobileAppDeviceTypes\": [\r\n        \"Android\",\r\n        \"Windows\"\r\n    ],\r\n    \"mobileApplications\": [\r\n        \"APIGateway\"\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{baseURL}}/configurations/mobileApp",
											"host": [
												"{{baseURL}}"
											],
											"path": [
												"configurations",
												"mobileApp"
											]
										},
										"description": "The method is used to update the details of the Mobile Applications configuration in API Gateway.You can use API Gateway to disable access for certain mobile application versions on a predefined set of mobile platforms. By registering the required devices and applications and disabling access to these versions, you ensure that all users use the latest versions of the applications and take advantage of the latest security and functional updates."
									},
									"response": [
										{
											"name": "This status code indicates that the Mobile Applications configuration has been successfully updated in API Gateway, and the updated configuration is available in the response body.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mobileApplications\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"mobileAppDeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/configurations/mobileApp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"configurations",
														"mobileApp"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n    \\\"mobileApplications\\\": [\\r\\n        \\\"MyApp\\\",\\r\\n        \\\"HelloApplication\\\"\\r\\n    ],\\r\\n    \\\"mobileAppDeviceTypes\\\": [\\r\\n        \\\"Android\\\",\\r\\n        \\\"ios\\\"\\r\\n    ]\\r\\n}\""
										},
										{
											"name": "This status code indicates that the specified HTTP method is not allowed for the requested Mobile Applications in API Gateway.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mobileApplications\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"mobileAppDeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/configurations/mobileApp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"configurations",
														"mobileApp"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\t\\\"errorDetails\\\": \\\" Unable to process the PUT request for Mobile Applications configuration. Error occurred while processing the payload. Error Message: Method: PUT is not allowed on resource: loadBalancer\\\"\\r\\n}\""
										},
										{
											"name": "This status code indicates that either user didn't provide right credentials or user doesn't have \"Manage Threat Protection\" functional privilege to access this API.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mobileApplications\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"mobileAppDeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/configurations/mobileApp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"configurations",
														"mobileApp"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "This status code indicates that the request body is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mobileApplications\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"mobileAppDeviceTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/configurations/mobileApp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"configurations",
														"mobileApp"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\r\\n\\\"errorDetails\\\": \\\" Invalid property key found in request payload.\\\"\\r\\n}\""
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8bbe6caf-5c09-4a98-9862-94f87c7ab115",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9772c781-d530-4aff-907e-b7ebc5d8d4cf",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Global Policy",
					"item": [
						{
							"name": "Create Global Policy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policy\": {\n        \"descriptions\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"description flows here\"\n            }\n        ],\n        \"names\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"Global Policy\"\n            }\n        ],\n        \"global\": true,\n        \"policyScope\": \"GLOBAL\",\n        \"active\": false,\n        \"systemPolicy\": false,\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"a3e8b1d4-03f0-4146-8c6b-565089039146\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"requestPayloadProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"2592c05c-0c96-4455-be8e-2eebf5dba16e\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"routing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"dd69eeb1-9bc7-44c9-be0d-cb7a047349d3\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"c068a84c-beed-4199-b32e-e56679f5f3ac\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"IAM\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"0c29da09-7c7c-4449-b93b-6ec6acb89bda\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseFaultProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"fcac4e90-a0a6-4f37-bbcc-3d8ed02460dd\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"transport\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"8b6c2c66-7eba-435c-a22c-2f156ff984be\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseProcessing\"\n            }\n        ],\n        \"scope\": {\n            \"applicableAPITypes\": [\n                \"REST\",\n                \"SOAP\",\n                \"ODATA\"\n            ],\n            \"logicalConnector\": \"AND\",\n            \"scopeConditions\": [\n                {\n                    \"filterType\": \"HTTP_METHOD\",\n                    \"attributes\": [\n                        {\n                            \"attributeName\": \"GET\",\n                            \"value\": true\n                        }\n                    ]\n                },\n                {\n                    \"filterType\": \"API\",\n                    \"attributes\": [\n                        {\n                            \"attributeName\": \"API_NAME\",\n                            \"operation\": \"EQUALS\",\n                            \"value\": \"SoftwareAG\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policies",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies"
									]
								},
								"description": "The possible values for HTTP_METHODS filter type are \n1. POST\n2. PUT\n3. DELETE\n4. PATCH\n5. GET\n\nThe possible values for API filter type are \nattribute name\n1. API_NAME\n2. API_DESCRIPTION\n3. API_VERSION\n\nattribute values\n1. EQUALS\n2. NOT_EQUALS\n3. CONTAINS\n4. NOT_CONTAINS\n5. STARTS_WITH\n6. NOT_STARTS_WITH\n7. ENDS_WITH"
							},
							"response": []
						},
						{
							"name": "Update Global Policy",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policy\": {\n        \"id\": \"0ef28805-1254-40db-9841-738f85680bc4\",\n        \"descriptions\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"description flows here\"\n            }\n        ],\n        \"names\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"Global Policy\"\n            }\n        ],\n        \"global\": true,\n        \"policyScope\": \"GLOBAL\",\n        \"active\": false,\n        \"systemPolicy\": false,\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"a3e8b1d4-03f0-4146-8c6b-565089039146\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"requestPayloadProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"2592c05c-0c96-4455-be8e-2eebf5dba16e\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"routing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"dd69eeb1-9bc7-44c9-be0d-cb7a047349d3\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"c068a84c-beed-4199-b32e-e56679f5f3ac\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"IAM\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"0c29da09-7c7c-4449-b93b-6ec6acb89bda\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseFaultProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"fcac4e90-a0a6-4f37-bbcc-3d8ed02460dd\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"transport\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"8b6c2c66-7eba-435c-a22c-2f156ff984be\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseProcessing\"\n            }\n        ],\n        \"scope\": {\n            \"applicableAPITypes\": [\n                \"REST\",\n                \"SOAP\",\n                \"ODATA\"\n            ],\n            \"logicalConnector\": \"AND\",\n            \"scopeConditions\": [\n                {\n                    \"filterType\": \"HTTP_METHOD\",\n                    \"attributes\": [\n                        {\n                            \"attributeName\": \"GET\",\n                            \"value\": true\n                        }\n                    ]\n                },\n                {\n                    \"filterType\": \"API\",\n                    \"attributes\": [\n                        {\n                            \"attributeName\": \"API_NAME\",\n                            \"operation\": \"EQUALS\",\n                            \"value\": \"SoftwareAG\"\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policies/:policyId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										":policyId"
									],
									"variable": [
										{
											"key": "policyId",
											"value": "0ef28805-1254-40db-9841-738f85680bc4"
										}
									]
								},
								"description": "The possible values for HTTP_METHODS filter type are \n1. POST\n2. PUT\n3. DELETE\n4. PATCH\n5. GET\n\nThe possible values for API filter type are \nattribute name\n1. API_NAME\n2. API_DESCRIPTION\n3. API_VERSION\n\nattribute values\n1. EQUALS\n2. NOT_EQUALS\n3. CONTAINS\n4. NOT_CONTAINS\n5. STARTS_WITH\n6. NOT_STARTS_WITH\n7. ENDS_WITH"
							},
							"response": []
						},
						{
							"name": "Get APIs for Global Policy By ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/policies/:policyId/apis?active=true",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										":policyId",
										"apis"
									],
									"query": [
										{
											"key": "active",
											"value": "true"
										}
									],
									"variable": [
										{
											"description": "(Required) This path parameter is used to specify the global policy id for which we need the list of applicable APIs",
											"key": "policyId",
											"value": "0ef28805-1254-40db-9841-738f85680bc4"
										}
									]
								},
								"description": "This REST request is used to get the list of applicable APIs for a global policy.  An API become  applicable API for a global policy only if it satisfies the scope specified in the global policy.  By default it will return the basic API details of all the applicable APIs either if the API is active or inactive for a global policy. User can use the query parameter \"active\" to retrieve all active APIs for a global policy or all applicable APIs regardless of its status for a global policy."
							},
							"response": [
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API gateway provider access to get the list of applicable APIs for the specified global policy.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"apis"
											],
											"query": [
												{
													"key": "active",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the specified global policy is valid and in the response it will contain the list of applicable APIs based on the parameters specified in the request. ",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"apis"
											],
											"query": [
												{
													"key": "active",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"apiResponse\\\": [\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"API Gateway \\\",\\r\\n        \\\"apiVersion\\\": \\\"10.0\\\",\\r\\n        \\\"apiDescription\\\": \\\"This swagger doc contain API Definition for API Gateway APIs. It contains swagger definition for all APIs in API Gateway.\\\",\\r\\n        \\\"isActive\\\": false,\\r\\n        \\\"type\\\": \\\"REST\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"4869049b-4cef-4c76-b678-14d4970c5241\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"EMP\\\",\\r\\n        \\\"apiVersion\\\": \\\"1.0\\\",\\r\\n        \\\"isActive\\\": true,\\r\\n        \\\"type\\\": \\\"REST\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"e60d6fe9-3612-469f-b33a-fb4c97c72b3b\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"EMP_POJO_WSDL\\\",\\r\\n        \\\"apiVersion\\\": \\\"1\\\",\\r\\n        \\\"isActive\\\": true,\\r\\n        \\\"type\\\": \\\"SOAP\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"421eb4bf-b2d0-40a4-900f-ad5fd0a2484e\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"api\\\": {\\r\\n        \\\"apiName\\\": \\\"EMP_REST_SWAGGER\\\",\\r\\n        \\\"apiVersion\\\": \\\"1.0.0\\\",\\r\\n        \\\"isActive\\\": false,\\r\\n        \\\"type\\\": \\\"REST\\\",\\r\\n        \\\"publishedPortals\\\": [],\\r\\n        \\\"systemVersion\\\": 1,\\r\\n        \\\"id\\\": \\\"260c11e1-b3eb-4714-aa73-7cd95fc91abb\\\"\\r\\n      },\\r\\n      \\\"responseStatus\\\": \\\"SUCCESS\\\"\\r\\n    }\\r\\n  ]\\r\\n}\""
								},
								{
									"name": "This status code indicates that the specified global policy is not available in API Gateway",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"apis"
											],
											"query": [
												{
													"key": "active",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Unable to find the resource: 732c4526-db9a-4ef9-9782-edda1a6aa9bc1\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicate the specified policy is not a global policy.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"apis"
											],
											"query": [
												{
													"key": "active",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n    \\\"errorDetails\\\": \\\"5e04581b-a583-495b-83b3-411f9c067054 is not a global policy.\\\"\\r\\n}\""
								},
								{
									"name": "This is status code indicates that server has encounted an while getting applicable APIs for the specified policy",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/apis?active=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"apis"
											],
											"query": [
												{
													"key": "active",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Activate Global Policy By Policy ID",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/policies/:policyId/activate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										":policyId",
										"activate"
									],
									"variable": [
										{
											"key": "policyId",
											"value": "0ef28805-1254-40db-9841-738f85680bc4",
											"description": "(Required) The path parameter should be the policy id of global policy that needs to be activated. If the policy id is not belongs to a global policy then error will be reported"
										}
									]
								},
								"description": "This REST request is used to activate a global policy and this request doesn't require any request body. This request will try to activate the global policy and if any error occurs during activation it will be reported as response or if the global policy is activated then its policy details active flag set to true will be sent as response. If the global policy have any conflicts then it cannot be activated the conflicts are manually resolved."
							},
							"response": [
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator access to activate global policy.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"activate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the request is not correct. It can be either due to incorrect policy type or trying to activate already active policy. The sample shows that the policy is specified is not a global policy id.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"activate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Policy [PT1] is not a global policy. Cannot be activated/deactivated.\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates that the server has encountered an error during the activation of global policy. The sample shows the error is due to a conflict between two global policies on the common applicable APIs. The conflict is between this global policy and other active global policy. This happens when an API satisfies the scope of one or more global policy and during the effective policy calculation you might get policy validation error message. The detailed structure of the error is reported for any conflicts that happen during the process activation ",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"activate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Conflict between global Policy for API - EMP_POJO_WSDL, Operation - updateEmployee -  An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n  \\\"reason\\\": [\\r\\n    {\\r\\n      \\\"apiId\\\": \\\"421eb4bf-b2d0-40a4-900f-ad5fd0a2484e\\\",\\r\\n      \\\"apiName\\\": \\\"EMP_POJO_WSDL\\\",\\r\\n      \\\"apiType\\\": \\\"SOAP\\\",\\r\\n      \\\"errorOnResource\\\": [\\r\\n        {\\r\\n          \\\"conflictingPolicies\\\": {\\r\\n            \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\": {\\r\\n              \\\"names\\\": [\\r\\n                {\\r\\n                  \\\"value\\\": \\\"a\\\",\\r\\n                  \\\"locale\\\": \\\"English\\\"\\r\\n                }\\r\\n              ],\\r\\n              \\\"policyActionsIds\\\": [\\r\\n                \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\"\\r\\n              ],\\r\\n              \\\"policyId\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n              \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n              \\\"stageKey\\\": \\\"IAM\\\"\\r\\n            }\\r\\n          },\\r\\n          \\\"error\\\": {\\r\\n            \\\"allowedOccurence\\\": \\\"once\\\",\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"policyActionName\\\": \\\"[Identify & Authorize Application]\\\",\\r\\n            \\\"templateId\\\": \\\"evaluatePolicy\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Employee Global Policy\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"31c729f9-4f1c-4074-acba-6975c0668433\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"7a16baec-7925-4579-966b-bfe58265853d\\\",\\r\\n            \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n            \\\"stageKey\\\": \\\"IAM\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"updateEmployee\\\"\\r\\n        },\\r\\n        {\\r\\n          \\\"conflictingPolicies\\\": {\\r\\n            \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\": {\\r\\n              \\\"names\\\": [\\r\\n                {\\r\\n                  \\\"value\\\": \\\"a\\\",\\r\\n                  \\\"locale\\\": \\\"English\\\"\\r\\n                }\\r\\n              ],\\r\\n              \\\"policyActionsIds\\\": [\\r\\n                \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\"\\r\\n              ],\\r\\n              \\\"policyId\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n              \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n              \\\"stageKey\\\": \\\"IAM\\\"\\r\\n            }\\r\\n          },\\r\\n          \\\"error\\\": {\\r\\n            \\\"allowedOccurence\\\": \\\"once\\\",\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"policyActionName\\\": \\\"[Identify & Authorize Application]\\\",\\r\\n            \\\"templateId\\\": \\\"evaluatePolicy\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Employee Global Policy\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"31c729f9-4f1c-4074-acba-6975c0668433\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"7a16baec-7925-4579-966b-bfe58265853d\\\",\\r\\n            \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n            \\\"stageKey\\\": \\\"IAM\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"addEmployee\\\"\\r\\n        },\\r\\n        {\\r\\n          \\\"conflictingPolicies\\\": {\\r\\n            \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\": {\\r\\n              \\\"names\\\": [\\r\\n                {\\r\\n                  \\\"value\\\": \\\"a\\\",\\r\\n                  \\\"locale\\\": \\\"English\\\"\\r\\n                }\\r\\n              ],\\r\\n              \\\"policyActionsIds\\\": [\\r\\n                \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\"\\r\\n              ],\\r\\n              \\\"policyId\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n              \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n              \\\"stageKey\\\": \\\"IAM\\\"\\r\\n            }\\r\\n          },\\r\\n          \\\"error\\\": {\\r\\n            \\\"allowedOccurence\\\": \\\"once\\\",\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"policyActionName\\\": \\\"[Identify & Authorize Application]\\\",\\r\\n            \\\"templateId\\\": \\\"evaluatePolicy\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Employee Global Policy\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"31c729f9-4f1c-4074-acba-6975c0668433\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"7a16baec-7925-4579-966b-bfe58265853d\\\",\\r\\n            \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n            \\\"stageKey\\\": \\\"IAM\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"deleteEmployee\\\"\\r\\n        },\\r\\n        {\\r\\n          \\\"conflictingPolicies\\\": {\\r\\n            \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\": {\\r\\n              \\\"names\\\": [\\r\\n                {\\r\\n                  \\\"value\\\": \\\"a\\\",\\r\\n                  \\\"locale\\\": \\\"English\\\"\\r\\n                }\\r\\n              ],\\r\\n              \\\"policyActionsIds\\\": [\\r\\n                \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\"\\r\\n              ],\\r\\n              \\\"policyId\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n              \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n              \\\"stageKey\\\": \\\"IAM\\\"\\r\\n            }\\r\\n          },\\r\\n          \\\"error\\\": {\\r\\n            \\\"allowedOccurence\\\": \\\"once\\\",\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"policyActionName\\\": \\\"[Identify & Authorize Application]\\\",\\r\\n            \\\"templateId\\\": \\\"evaluatePolicy\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" An API can be associated with only one policy action with template id Identify & Authorize Application\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Employee Global Policy\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"31c729f9-4f1c-4074-acba-6975c0668433\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"7a16baec-7925-4579-966b-bfe58265853d\\\",\\r\\n            \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n            \\\"stageKey\\\": \\\"IAM\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"getEmployee\\\"\\r\\n        }\\r\\n      ]\\r\\n    }\\r\\n  ]\\r\\n}\""
								},
								{
									"name": "This status code indicates that the global policy id specified is activated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"activate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"policy\\\": {\\r\\n    \\\"id\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n    \\\"names\\\": [\\r\\n      {\\r\\n        \\\"value\\\": \\\"a\\\",\\r\\n        \\\"locale\\\": \\\"English\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"descriptions\\\": [\\r\\n      {\\r\\n        \\\"value\\\": \\\"\\\",\\r\\n        \\\"locale\\\": \\\"English\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"scope\\\": {\\r\\n      \\\"applicableAPITypes\\\": [\\r\\n        \\\"REST\\\",\\r\\n        \\\"SOAP\\\"\\r\\n      ],\\r\\n      \\\"result\\\": {},\\r\\n      \\\"scopeConditions\\\": [],\\r\\n      \\\"logicalConnector\\\": \\\"AND\\\"\\r\\n    },\\r\\n    \\\"policyEnforcements\\\": [\\r\\n      {\\r\\n        \\\"enforcements\\\": [\\r\\n          {\\r\\n            \\\"enforcementObjectId\\\": \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\",\\r\\n            \\\"order\\\": null\\r\\n          }\\r\\n        ],\\r\\n        \\\"stageKey\\\": \\\"IAM\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n    \\\"global\\\": true,\\r\\n    \\\"active\\\": true,\\r\\n    \\\"systemPolicy\\\": false\\r\\n  }\\r\\n}\""
								},
								{
									"name": "This status code indicates that the policy id specified is not found in API Gateway",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"activate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Unable to find the resource: 732c4526-db9a-4ef9-9782-edda1a6aa9bc1\\\"\\r\\n}\""
								}
							]
						},
						{
							"name": "Deactivate Global Policy By Policy ID",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/policies/:policyId/deactivate",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										":policyId",
										"deactivate"
									],
									"variable": [
										{
											"description": "(Required) The path parameter should be the policy id of global policy that needs to be deactivated. If the policy id is not belongs to a global policy then error will be reported",
											"key": "policyId",
											"value": "0ef28805-1254-40db-9841-738f85680bc4"
										}
									]
								},
								"description": "This REST request is used to deactivate a global policy and it doesn't require any request body. This request tries to deactivate the global policy and if any error occurs during deactivation will be reported as response or if the global policy deactivated the policy details of a global policy with active flag set to false is sent as response. An active global policy cannot have conflicts with other active global policy and hence the  deactivation fails only when the conflict occurs between active global policy that is specified and one or more applicable active APIs. This can happen when the applicable active API policy action  might depend on one or more policy action from the specified global policy. If you deactivate this policy, it would cause the active API to have an unstable state. Hence the deactivation is reported as failed in this case."
							},
							"response": [
								{
									"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator access to deactivate global policy.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"deactivate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "This status code indicates that the global policy id specified is deactivated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"deactivate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"policy\\\": {\\r\\n    \\\"id\\\": \\\"732c4526-db9a-4ef9-9782-edda1a6aa9bc\\\",\\r\\n    \\\"names\\\": [\\r\\n      {\\r\\n        \\\"value\\\": \\\"a\\\",\\r\\n        \\\"locale\\\": \\\"English\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"descriptions\\\": [\\r\\n      {\\r\\n        \\\"value\\\": \\\"\\\",\\r\\n        \\\"locale\\\": \\\"English\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"scope\\\": {\\r\\n      \\\"applicableAPITypes\\\": [\\r\\n        \\\"REST\\\",\\r\\n        \\\"SOAP\\\"\\r\\n      ],\\r\\n      \\\"result\\\": {},\\r\\n      \\\"scopeConditions\\\": [],\\r\\n      \\\"logicalConnector\\\": \\\"AND\\\"\\r\\n    },\\r\\n    \\\"policyEnforcements\\\": [\\r\\n      {\\r\\n        \\\"enforcements\\\": [\\r\\n          {\\r\\n            \\\"enforcementObjectId\\\": \\\"2e63b365-5fb8-4c8c-b2b3-404045b583f7\\\",\\r\\n            \\\"order\\\": null\\r\\n          }\\r\\n        ],\\r\\n        \\\"stageKey\\\": \\\"IAM\\\"\\r\\n      }\\r\\n    ],\\r\\n    \\\"policyScope\\\": \\\"GLOBAL\\\",\\r\\n    \\\"global\\\": true,\\r\\n    \\\"active\\\": false,\\r\\n    \\\"systemPolicy\\\": false\\r\\n  }\\r\\n}\""
								},
								{
									"name": "This status code indicates that the server has encountered an error during the deactivation of global policy. The sample shows the error due to policy dependencies between an active API and the global policy specified",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"deactivate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Conflict between global Policy for API - EMP, Path - /employee/{id}, Method - get -  Policy action Throttling Traffic Optimization is dependent to policy action(s) [Identify & Authorize Application]\\\",\\r\\n  \\\"reason\\\": [\\r\\n    {\\r\\n      \\\"apiId\\\": \\\"e60d6fe9-3612-469f-b33a-fb4c97c72b3b\\\",\\r\\n      \\\"apiName\\\": \\\"EMP\\\",\\r\\n      \\\"apiType\\\": \\\"REST\\\",\\r\\n      \\\"errorOnResource\\\": [\\r\\n        {\\r\\n          \\\"error\\\": {\\r\\n            \\\"errorType\\\": \\\"occurence\\\",\\r\\n            \\\"missingDependency\\\": [\\r\\n              \\\"evaluatePolicy\\\"\\r\\n            ],\\r\\n            \\\"policyActionName\\\": \\\"[Throttling Traffic Optimization]\\\",\\r\\n            \\\"templateId\\\": \\\"throttle\\\"\\r\\n          },\\r\\n          \\\"errorMessage\\\": \\\" Policy action Throttling Traffic Optimization is dependent to policy action(s) [Identify & Authorize Application]\\\",\\r\\n          \\\"method\\\": \\\"get\\\",\\r\\n          \\\"policyDetails\\\": {\\r\\n            \\\"names\\\": [\\r\\n              {\\r\\n                \\\"value\\\": \\\"Default Policy for API EMP\\\",\\r\\n                \\\"locale\\\": \\\"English\\\"\\r\\n              }\\r\\n            ],\\r\\n            \\\"policyActionsIds\\\": [\\r\\n              \\\"9adf1ff1-efdc-4c41-8998-794d316eaced\\\"\\r\\n            ],\\r\\n            \\\"policyId\\\": \\\"d7672248-7d25-444e-a9b6-853e1d95d1c6\\\",\\r\\n            \\\"policyScope\\\": \\\"SERVICE\\\",\\r\\n            \\\"stageKey\\\": \\\"LMT\\\"\\r\\n          },\\r\\n          \\\"resource\\\": \\\"/employee/{id}\\\"\\r\\n        }\\r\\n      ]\\r\\n    }\\r\\n  ]\\r\\n}\""
								},
								{
									"name": "This status code indicates that the policy id specified is not found in API Gateway",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"deactivate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Unable to find the resource: 732c4526-db9a-4ef9-9782-edda1a6aa9bc1\\\"\\r\\n}\""
								},
								{
									"name": "This status code indicates that the request is not correct. It can be either due to incorrect policy type or trying to deactivate already inactive  policy. The sample shows that the policy is specified is not a global policy id.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/policies/:policyId/deactivate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"policies",
												":policyId",
												"deactivate"
											],
											"variable": [
												{
													"key": "policyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\r\\n  \\\"errorDetails\\\": \\\" Policy [PT1] is not a global policy. Cannot be activated/deactivated.\\\"\\r\\n}\""
								}
							]
						}
					],
					"description": "Global Policy:\n\nCreate the needed policy actions before creating global policy. Once the needed policy actions are created then add the created policy actions entry in policyEnforcements with the appropriate stage key. Also add the required filters for the global policy.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0ca1345e-d2d5-4d07-a795-4b06175c6b85",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "866fabf1-b796-4dcc-b26f-2d9f9e9c99ae",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Policy Template",
					"item": [
						{
							"name": "Create Policy Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policy\": {\n        \"descriptions\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"description flows here\"\n            }\n        ],\n        \"names\": [\n            {\n                \"locale\": \"English\",\n                \"value\": \"Policy Template\"\n            }\n        ],\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"a3e8b1d4-03f0-4146-8c6b-565089039146\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"requestPayloadProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"2592c05c-0c96-4455-be8e-2eebf5dba16e\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"routing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"dd69eeb1-9bc7-44c9-be0d-cb7a047349d3\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"c068a84c-beed-4199-b32e-e56679f5f3ac\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"IAM\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"0c29da09-7c7c-4449-b93b-6ec6acb89bda\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseFaultProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"fcac4e90-a0a6-4f37-bbcc-3d8ed02460dd\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"transport\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"8b6c2c66-7eba-435c-a22c-2f156ff984be\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseProcessing\"\n            }\n        ],\n        \"global\": false,\n        \"policyScope\": \"TEMPLATE\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policies",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Policy Template",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"policy\": {\n        \"id\": \"ebba103b-62a1-432d-a564-54126464c214\",\n        \"names\": [\n            {\n                \"value\": \"Policy Template\",\n                \"locale\": \"English\"\n            }\n        ],\n        \"descriptions\": [\n            {\n                \"value\": \"description flows here\",\n                \"locale\": \"English\"\n            }\n        ],\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"a3e8b1d4-03f0-4146-8c6b-565089039146\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"requestPayloadProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"2592c05c-0c96-4455-be8e-2eebf5dba16e\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"routing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"dd69eeb1-9bc7-44c9-be0d-cb7a047349d3\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"c068a84c-beed-4199-b32e-e56679f5f3ac\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"IAM\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"0c29da09-7c7c-4449-b93b-6ec6acb89bda\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseFaultProcessing\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"fcac4e90-a0a6-4f37-bbcc-3d8ed02460dd\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"transport\"\n            },\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"8b6c2c66-7eba-435c-a22c-2f156ff984be\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"responseProcessing\"\n            }\n        ],\n        \"policyScope\": \"TEMPLATE\",\n        \"systemPolicy\": false,\n        \"active\": false,\n        \"global\": false\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/policies/:policyId",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"policies",
										":policyId"
									],
									"variable": [
										{
											"key": "policyId",
											"value": "ebba103b-62a1-432d-a564-54126464c214"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Policy Template:\n\nCreate the needed policy actions before creating policy template. After creating policy actions associate it with the policy template payload under policyEnforcements, add it to the appropriate stages.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1bf9e3ca-f148-4b6b-8b3f-97921c7a8110",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "47e777c6-b270-4a01-be02-84cf526c60ef",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Policy by PolicyID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/policies/:policyId",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"policies",
								":policyId"
							],
							"variable": [
								{
									"key": "policyId",
									"value": "5c755bdc-f900-40b9-a5d1-bace562ea1b7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/policies",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Policy by PolicyID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/policies/:policyId",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"policies",
								":policyId"
							],
							"variable": [
								{
									"key": "policyId",
									"value": "ebba103b-62a1-432d-a564-54126464c214"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get Policy Stages",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/policyStages",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"policyStages"
					]
				},
				"description": "This REST Request is used to get the list of policy stages available in API gateway. It will also show the list of policies (template key of each policy) associated with each stage. "
			},
			"response": [
				{
					"name": "The response body contains list of all stages and policy associated with the stages. Also the response body contains the sequence where the policies corresponding to a stage will be executed",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/policyStages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"policyStages"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\r\\n  \\\"stages\\\": [\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"threatProtection\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Threat Protection\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"globalipdos\\\",\\r\\n        \\\"ipdos\\\",\\r\\n        \\\"egviolationalert\\\",\\r\\n        \\\"MsgSizeLimitFilter\\\",\\r\\n        \\\"OAuthFilter\\\",\\r\\n        \\\"mobileAppProtectionFilter\\\",\\r\\n        \\\"sqlInjectionFilter\\\",\\r\\n        \\\"antiVirusFilter\\\",\\r\\n        \\\"jsonThreatProtectionFilter\\\",\\r\\n        \\\"xmlThreatProtectionFilter\\\",\\r\\n        \\\"customFilter\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"transport\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Transport\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"entryProtocolPolicy\\\",\\r\\n        \\\"setMediaType\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"IAM\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Identity and Access Management\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"inboundAuthTransport\\\",\\r\\n        \\\"webServiceSecurityPolicy\\\",\\r\\n        \\\"authorizeUser\\\",\\r\\n        \\\"evaluatePolicy\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": null\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"requestPayloadProcessing\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Request Payload Processing\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"invokeESB\\\",\\r\\n        \\\"xsltTransformation\\\",\\r\\n        \\\"validateSchema\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"routing\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Routing Policies\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"contentBasedRouting\\\",\\r\\n        \\\"contextBasedRouting\\\",\\r\\n        \\\"dynamicRouting\\\",\\r\\n        \\\"loadBalancerRouting\\\",\\r\\n        \\\"straightThroughRouting\\\",\\r\\n        \\\"customHttpHeaders\\\",\\r\\n        \\\"outboundTransportAuthentication\\\",\\r\\n        \\\"outboundMessageAuthentication\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"LMT\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Logging, Monitoring and Traffic Optimization\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"logInvocation\\\",\\r\\n        \\\"monitorServicePerformance\\\",\\r\\n        \\\"monitorSLA\\\",\\r\\n        \\\"throttle\\\",\\r\\n        \\\"serviceResultCache\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"insequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"responseProcessing\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Response Processing\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"invokeESB\\\",\\r\\n        \\\"xsltTransformation\\\",\\r\\n        \\\"validateSchema\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"outsequence\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"stageKey\\\": \\\"responseFaultProcessing\\\",\\r\\n      \\\"names\\\": [\\r\\n        {\\r\\n          \\\"value\\\": \\\"Error Handling\\\",\\r\\n          \\\"locale\\\": \\\"en\\\"\\r\\n        }\\r\\n      ],\\r\\n      \\\"descriptions\\\": [],\\r\\n      \\\"policyActionTemplates\\\": [\\r\\n        \\\"conditionalErrorProcessing\\\"\\r\\n      ],\\r\\n      \\\"sequence\\\": \\\"faultsequence\\\"\\r\\n    }\\r\\n  ]\\r\\n}\""
				},
				{
					"name": "This status code indicates that the user did not provide any user credential or user does not have API Gateway Administrator or API Gateway provider access to get the policy stage.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/policyStages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"policyStages"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "manage",
				"type": "string"
			},
			{
				"key": "username",
				"value": "Administrator",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "4254efa1-cd4c-47d5-9d5e-1305caa4ceb1",
			"key": "baseURL",
			"value": "http://localhost:5555/rest/apigateway",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}