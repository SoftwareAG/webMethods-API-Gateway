{
	"info": {
		"_postman_id": "921bb06b-3d71-413f-9adc-8ee5fe47ee29",
		"name": "API Application association",
		"description": "Explanation:\r\n\r\nThis postman collection contains API Gateway REST service to create an API with IAM and LMT policy and associate application with it.\r\n\r\nStep 1:\r\nCreate API using file\r\n\r\nStep 2:\r\nCreate IAM Policy Action\r\n\r\nStep 3:\r\nCreate Log Invocation LMT Policy Action\r\n\r\nStep 4:\r\nGet Policy details by policyID\r\n\r\nStep 5:\r\nAssociate the created policy action with it\r\n\r\nStep 6:\r\nCreate Application with username identifier\r\n\r\nStep 7:\r\nAssociate created application with API\r\n\r\nStep 8:\r\nActivate the API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create IAM Policy Action",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb83f407-4865-4182-94e5-d53f3e28eba5",
						"exec": [
							"let policyActionResponse=JSON.parse(responseBody);",
							"pm.environment.set(\"iamPolicyActionID\", policyActionResponse.policyAction.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Identify & Authorize Application\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"evaluatePolicy\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"logicalConnector\",\r\n                \"values\": [\r\n                    \"OR\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"allowAnonymous\",\r\n                \"values\": [\r\n                    \"false\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"IdentificationRule\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"identificationType\",\r\n                        \"values\": [\r\n                            \"apiKey\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": \"false\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/policyActions",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"policyActions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Log Invocation Policy Action",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1301e27-21ac-4d6a-9bf0-c851be1fc160",
						"exec": [
							"let policyActionResponse=JSON.parse(responseBody);",
							"pm.environment.set(\"logInvocationPolicyActionID\", policyActionResponse.policyAction.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Log Invocation\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"logInvocation\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"storeRequestPayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponsePayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeAsZip\",\r\n                \"values\": [\r\n                    \"false\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"logGenerationFrequency\",\r\n                \"values\": [\r\n                    \"Always\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"active\": false\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/policyActions",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"policyActions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Policy by PolicyID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a04281a-a32e-4601-becf-8ebb388b427c",
						"exec": [
							"let policyResponse=JSON.parse(responseBody);",
							"pm.environment.set()",
							"pm.environment.set(\"policyName\",\"\"+policyResponse.policy.names[0].value);",
							"pm.environment.set(\"policyDescription\",policyResponse.policy.descriptions[0].value);",
							"    ",
							"let policyEnforcements=policyResponse.policy.policyEnforcements;",
							"for(var i=0;i<policyEnforcements.length;i++){",
							"    if(policyEnforcements[i].stageKey==\"routing\"){",
							"        pm.environment.set(\"routingPolicyActionID\",policyEnforcements[i].enforcements[0].enforcementObjectId);",
							"    }",
							"    if(policyEnforcements[i].stageKey==\"transport\"){",
							"        pm.environment.set(\"transportPolicyActionID\",policyEnforcements[i].enforcements[0].enforcementObjectId);",
							"    }",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/policies/{{policyID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"policies",
						"{{policyID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Associate created Policy Actions with API Policy",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"policy\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"{{policyName}}\",\r\n                \"locale\": \"English\"\r\n            }\r\n        ],\r\n        \"descriptions\": [\r\n            {\r\n                \"value\": \"{{policyDescription}}\",\r\n                \"locale\": \"English\"\r\n            }\r\n        ],\r\n        \"scope\": {\r\n            \"scopeConditions\": []\r\n        },\r\n        \"policyEnforcements\": [\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{routingPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"routing\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{transportPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"transport\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{iamPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"IAM\"\r\n            },\r\n            {\r\n                \"enforcements\": [\r\n                    {\r\n                        \"enforcementObjectId\": \"{{logInvocationPolicyActionID}}\",\r\n                        \"order\": null\r\n                    }\r\n                ],\r\n                \"stageKey\": \"LMT\"\r\n            }\r\n        ],\r\n        \"policyScope\": \"SERVICE\",\r\n        \"global\": false,\r\n        \"active\": false,\r\n        \"systemPolicy\": false\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/policies/{{policyID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"policies",
						"{{policyID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Application with Username Identifier",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7bb043c3-8b91-4316-9ca1-b86f06b24d65",
						"exec": [
							"let applicatonResponse=JSON.parse(responseBody);",
							"pm.environment.set(\"applicationID\", applicatonResponse.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"API Key Application\",\r\n    \"description\": \"This application contains Username identifier\",\r\n    \"version\": \"1.0\",\r\n    \"contactEmails\": [],\r\n    \"siteURLs\": [],\r\n    \"identifiers\": [\r\n        {\r\n            \"value\": [\r\n                \"Administrator\"\r\n            ],\r\n            \"name\": \"Username\",\r\n            \"key\": \"httpBasicAuth\"\r\n        }\r\n    ],\r\n    \"consumingAPIs\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/applications",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"applications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Associate Application with API",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"apiIDs\": [\r\n        \"{{apiID}}\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/applications/{{applicationID}}/apis",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"applications",
						"{{applicationID}}",
						"apis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Activate API",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/apis/{{apiID}}/activate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"apis",
						"{{apiID}}",
						"activate"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "manage",
				"type": "string"
			},
			{
				"key": "username",
				"value": "Administrator",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ba52059b-dd29-4495-8140-ddc4b62ee1df",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d66477bf-4723-45bc-b570-39fa04aeecea",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "877f3f66-fb5d-4d56-bd6d-24ede08d5dbd",
			"key": "baseURL",
			"value": "http://localhost:5555/rest/apigateway",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}