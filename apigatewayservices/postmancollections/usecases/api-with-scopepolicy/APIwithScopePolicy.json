{
	"info": {
		"_postman_id": "6b74b8b6-a007-4962-9b75-9bf5125b55c3",
		"name": "API with Scope Policy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create API from URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "743a1355-2b4f-4557-9311-c5cf9b48dd21",
						"exec": [
							"let apiResponse=JSON.parse(responseBody);",
							"pm.environment.set(\"apiID\", apiResponse.apiResponse.api.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"apiVersion\": \"1.0\",\r\n    \"type\": \"swagger\",\r\n    \"url\": \"http://petstore.swagger.io/v2/swagger.json\",\r\n    \"apiName\": \"API_with_Scope_Policy\",\r\n    \"apiDescription\": \"Petstore API with Log Invocation Traffic Monitoring Policy at Scope Level\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/apis",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"apis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get API Details by API ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20cd5214-1bb3-4fbb-a14f-f3fc1278e6f6",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseURL}}/apis/{{apiID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"apis",
						"{{apiID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Log Invocation Policy Action",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4510251-0c15-4f89-aac1-7a6231bc9cc7",
						"exec": [
							"let policyActionResponse=JSON.parse(responseBody);",
							"pm.environment.set(\"logInvocationPolicyActionID\", policyActionResponse.policyAction.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"policyAction\": {\r\n        \"names\": [\r\n            {\r\n                \"value\": \"Log Invocation\",\r\n                \"locale\": \"en\"\r\n            }\r\n        ],\r\n        \"templateKey\": \"logInvocation\",\r\n        \"parameters\": [\r\n            {\r\n                \"templateKey\": \"storeRequestHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeRequestPayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponseHeaders\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeResponsePayload\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeClientMessage\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeServerMessage\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"storeAsZip\",\r\n                \"values\": [\r\n                    \"true\"\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"logGenerationFrequency\",\r\n                \"values\": [\r\n                    \"OnSuccess\"                  \r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"GATEWAY\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"SMTP\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"emailTo\",\r\n                        \"values\": [\r\n                            \"support@softwareag.com\"\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"templateKey\": \"destination\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"templateKey\": \"destinationType\",\r\n                        \"values\": [\r\n                            \"localLog\"\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"templateKey\": \"logLevel\",\r\n                        \"values\": [\r\n                            \"Error\"                       \r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/policyActions",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"policyActions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Scope Policy with LMT",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cccde6dc-74f5-483c-97f5-597aea3d287b",
						"exec": [
							"let policyResponse=JSON.parse(responseBody);",
							"pm.environment.set(\"scopePolicyID\", policyResponse.policy.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"policy\": {\n        \"names\": [\n            {\n                \"value\": \"Petstore_scopePolicy\",\n                \"locale\": \"English\"\n            }\n        ],\n        \"descriptions\": [\n            {\n                \"value\": \"\",\n                \"locale\": \"English\"\n            }\n        ],\n        \"scope\": {\n            \"scopeConditions\": []\n        },\n        \"policyEnforcements\": [\n            {\n                \"enforcements\": [\n                    {\n                        \"enforcementObjectId\": \"{{logInvocationPolicyActionID}}\",\n                        \"order\": \"0\"\n                    }\n                ],\n                \"stageKey\": \"LMT\"\n            }\n        ],\n        \"policyScope\": \"SCOPE\",\n        \"global\": false,\n        \"active\": false,\n        \"systemPolicy\": false\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/policies",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"policies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update API with Scope Policy",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"restrictViewAsset\": false,\n    \"id\": \"2c843837-cc6c-4ba1-aaf3-b10f8e9adbe0\",\n    \"apiName\": \"Petstore\",\n    \"apiVersion\": \"1.0.5\",\n    \"apiDescription\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n    \"isActive\": true,\n    \"nativeEndpoint\": [\n        {\n            \"passSecurityHeaders\": true,\n            \"uri\": \"http://petstore.swagger.io/v2\",\n            \"connectionTimeoutDuration\": 0,\n            \"alias\": false\n        },\n        {\n            \"passSecurityHeaders\": true,\n            \"uri\": \"https://petstore.swagger.io/v2\",\n            \"connectionTimeoutDuration\": 0,\n            \"alias\": false\n        }\n    ],\n    \"owner\": \"Administrator\",\n    \"policies\": [\n        \"4268ca6b-b13d-48f2-8912-1d2a87ca59b0\"\n    ],\n    \"type\": \"REST\",\n    \"systemVersion\": 1,\n    \"maturityState\": \"Beta\",\n    \"apiGroups\": null,\n    \"scopes\": [\n        {\n            \"name\": \"Pet Scope\",\n            \"description\": \"\",\n            \"policies\": [\n                \"{{scopePolicyID}}\"\n            ]\n        }\n    ],\n    \"apiDocuments\": [],\n    \"apiDefinition\": {\n        \"info\": {\n            \"title\": \"Swagger Petstore\",\n            \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n            \"version\": \"1.0.5\",\n            \"termsOfService\": \"http://swagger.io/terms/\",\n            \"contact\": {\n                \"email\": \"apiteam@swagger.io\"\n            },\n            \"license\": {\n                \"name\": \"Apache 2.0\",\n                \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n            }\n        },\n        \"serviceRegistryDisplayName\": \"Petstore_1.0.5\",\n        \"servers\": [\n            {\n                \"url\": \"https://petstore.swagger.io/v2\",\n                \"variables\": {}\n            },\n            {\n                \"url\": \"http://petstore.swagger.io/v2\",\n                \"variables\": {}\n            }\n        ],\n        \"security\": [],\n        \"securityDefinitions\": {\n            \"api_key\": {\n                \"in\": \"header\",\n                \"name\": \"api_key\",\n                \"type\": \"apiKey\"\n            },\n            \"petstore_auth\": {\n                \"authorizationUrl\": \"https://petstore.swagger.io/oauth/authorize\",\n                \"flow\": \"implicit\",\n                \"scopes\": {\n                    \"read:pets\": \"read your pets\",\n                    \"write:pets\": \"modify pets in your account\"\n                },\n                \"type\": \"oauth2\"\n            }\n        },\n        \"definitions\": {},\n        \"externalDocs\": [\n            {\n                \"description\": \"Find out more about Swagger\",\n                \"url\": \"http://swagger.io\"\n            }\n        ],\n        \"parameters\": {},\n        \"paths\": {\n            \"/pet\": {\n                \"displayName\": \"/pet\",\n                \"enabled\": true,\n                \"scopes\": [\n                    \"Pet Scope\"\n                ],\n                \"get\": {\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"requestBody\",\n                        \"content\": {}\n                    },\n                    \"responses\": {},\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                },\n                \"put\": {\n                    \"description\": \"\",\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Update an existing pet\",\n                    \"operationId\": \"updatePet\",\n                    \"consumes\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"updatePet\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"examples\": {},\n                                \"schema\": {\n                                    \"type\": \"ref\",\n                                    \"$ref\": \"#/components/schemas/Pet\",\n                                    \"ref\": \"Pet\"\n                                },\n                                \"refSchema\": \"#/components/schemas/Pet\"\n                            },\n                            \"application/xml\": {\n                                \"examples\": {},\n                                \"schema\": {\n                                    \"type\": \"ref\",\n                                    \"$ref\": \"#/components/schemas/Pet\",\n                                    \"ref\": \"Pet\"\n                                },\n                                \"refSchema\": \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"responses\": {\n                        \"400\": {\n                            \"schema\": {},\n                            \"content\": {},\n                            \"examples\": {},\n                            \"headers\": {},\n                            \"description\": \"Invalid ID supplied\",\n                            \"links\": {}\n                        },\n                        \"404\": {\n                            \"schema\": {},\n                            \"content\": {},\n                            \"examples\": {},\n                            \"headers\": {},\n                            \"description\": \"Pet not found\",\n                            \"links\": {}\n                        },\n                        \"405\": {\n                            \"schema\": {},\n                            \"content\": {},\n                            \"examples\": {},\n                            \"headers\": {},\n                            \"description\": \"Validation exception\",\n                            \"links\": {}\n                        }\n                    },\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                },\n                \"post\": {\n                    \"description\": \"\",\n                    \"tags\": [\n                        \"pet\"\n                    ],\n                    \"summary\": \"Add a new pet to the store\",\n                    \"operationId\": \"addPet\",\n                    \"consumes\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"produces\": [\n                        \"application/json\",\n                        \"application/xml\"\n                    ],\n                    \"security\": [\n                        {\n                            \"petstore_auth\": [\n                                \"write:pets\",\n                                \"read:pets\"\n                            ]\n                        }\n                    ],\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"addPet\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"examples\": {},\n                                \"schema\": {\n                                    \"type\": \"ref\",\n                                    \"$ref\": \"#/components/schemas/Pet\",\n                                    \"ref\": \"Pet\"\n                                },\n                                \"refSchema\": \"#/components/schemas/Pet\"\n                            },\n                            \"application/xml\": {\n                                \"examples\": {},\n                                \"schema\": {\n                                    \"type\": \"ref\",\n                                    \"$ref\": \"#/components/schemas/Pet\",\n                                    \"ref\": \"Pet\"\n                                },\n                                \"refSchema\": \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"responses\": {\n                        \"405\": {\n                            \"schema\": {},\n                            \"content\": {},\n                            \"examples\": {},\n                            \"headers\": {},\n                            \"description\": \"Invalid input\",\n                            \"links\": {}\n                        }\n                    },\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                }\n            },\n            \"/test\": {\n                \"displayName\": \"/test\",\n                \"enabled\": true,\n                \"scopes\": [],\n                \"get\": {\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"requestBody\",\n                        \"content\": {}\n                    },\n                    \"responses\": {},\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                },\n                \"put\": {\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"requestBody\",\n                        \"content\": {}\n                    },\n                    \"responses\": {},\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                },\n                \"post\": {\n                    \"scopes\": [],\n                    \"enabled\": true,\n                    \"requestBody\": {\n                        \"name\": \"requestBody\",\n                        \"content\": {}\n                    },\n                    \"responses\": {},\n                    \"mockedResponses\": {},\n                    \"mockedConditionsBasedCustomResponsesList\": []\n                }\n            }\n        },\n        \"tags\": [\n            {\n                \"name\": \"pet\",\n                \"description\": \"\"\n            }\n        ],\n        \"components\": {\n            \"schemas\": {\n                \"ApiResponse\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"},\\\"type\\\":{\\\"type\\\":\\\"string\\\"}}}\"\n                },\n                \"Category\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"Category\\\"}}\"\n                },\n                \"Order\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"complete\\\":{\\\"type\\\":\\\"boolean\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"petId\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"quantity\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"shipDate\\\":{\\\"type\\\":\\\"string\\\",\\\"format\\\":\\\"date-time\\\"},\\\"status\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Order Status\\\",\\\"enum\\\":[\\\"placed\\\",\\\"approved\\\",\\\"delivered\\\"]}},\\\"xml\\\":{\\\"name\\\":\\\"Order\\\"}}\"\n                },\n                \"Pet\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"required\\\":[\\\"photoUrls\\\",\\\"name\\\"],\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"category\\\":{\\\"$ref\\\":\\\"#/components/schemas/Category\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\",\\\"example\\\":\\\"doggie\\\"},\\\"photoUrls\\\":{\\\"type\\\":\\\"array\\\",\\\"xml\\\":{\\\"wrapped\\\":true},\\\"items\\\":{\\\"type\\\":\\\"string\\\",\\\"xml\\\":{\\\"name\\\":\\\"photoUrl\\\"}}},\\\"status\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"pet status in the store\\\",\\\"enum\\\":[\\\"available\\\",\\\"pending\\\",\\\"sold\\\"]},\\\"tags\\\":{\\\"type\\\":\\\"array\\\",\\\"xml\\\":{\\\"wrapped\\\":true},\\\"items\\\":{\\\"$ref\\\":\\\"#/components/schemas/Tag\\\",\\\"xml\\\":{\\\"name\\\":\\\"tag\\\"}}}},\\\"xml\\\":{\\\"name\\\":\\\"Pet\\\"}}\"\n                },\n                \"Tag\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"Tag\\\"}}\"\n                },\n                \"User\": {\n                    \"type\": \"gateway\",\n                    \"schema\": \"{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"email\\\":{\\\"type\\\":\\\"string\\\"},\\\"firstName\\\":{\\\"type\\\":\\\"string\\\"},\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"lastName\\\":{\\\"type\\\":\\\"string\\\"},\\\"password\\\":{\\\"type\\\":\\\"string\\\"},\\\"phone\\\":{\\\"type\\\":\\\"string\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\",\\\"description\\\":\\\"User Status\\\",\\\"format\\\":\\\"int32\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"User\\\"}}\"\n                }\n            },\n            \"parameters\": {},\n            \"headers\": {},\n            \"examples\": {},\n            \"responses\": {},\n            \"requestBodies\": {},\n            \"links\": {},\n            \"callbacks\": {}\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/apis/{{apiID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"apis",
						"{{apiID}}"
					]
				},
				"description": "Scope Policy:\n--------------\nWe can add a scope policy to multiple resource and methods. Resource and Method can have multiple scope policies.\n\nGet the API details using our rest service and update the api with scope policy changes.\n\nAdding scope policy to the API:\n-----------------------------------\nLike policies we have 'scopes' object to add the Scope Policy to an API. We can add 'n' number of Scope Policy to an API with unique name.\n\n    \"scopes\": [\n        {\n            \"name\": \"Pet Scope\",\n            \"description\": \"\",\n            \"policies\": [\n                \"{{scopePolicyID}}\"\n            ]\n        }\n    ]\n\n\nAdding scope policy at the Resource Level:\n-------------------------------------------\nAdd Pet Scope to the Resource Level, if it is applied at the Resource level then it will be applicable to all the Methods under this Resource.\n\n    \"/pet\": {\n        \"displayName\": \"/pet\",\n        \"enabled\": true,\n        \"scopes\": [\n            \"Pet Scope\"\n        ],\n        \"get\": {\n            \"scopes\": [],\n            \"enabled\": true,\n            \"requestBody\": {\n                \"name\": \"requestBody\",\n                \"content\": {}\n            },\n            \"responses\": {},\n            \"mockedResponses\": {},\n            \"mockedConditionsBasedCustomResponsesList\": []\n        }\n    }\n\n\nAdding scope policy at the Method Level:\n------------------------------------------\nAdd scope to particular method.\n\n    \"/pet\": {\n        \"displayName\": \"/pet\",\n        \"enabled\": true,\n        \"scopes\": [],\n        \"get\": {\n            \"scopes\": [\n            \t\"Pet Scope\"\n            ],\n            \"enabled\": true,\n            \"requestBody\": {\n                \"name\": \"requestBody\",\n                \"content\": {}\n            },\n            \"responses\": {},\n            \"mockedResponses\": {},\n            \"mockedConditionsBasedCustomResponsesList\": []\n        }\n    }\n"
			},
			"response": []
		},
		{
			"name": "Activate API",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseURL}}/apis/{{apiID}}/activate",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"apis",
						"{{apiID}}",
						"activate"
					]
				},
				"description": "Scope Policy:\n--------------\nWe can add a scope policy to multiple resource and methods. Resource and Method can have multiple scope policies.\n\nGet the API details using our rest service and update the api with scope policy changes.\n\nAdding scope policy to the API:\n-----------------------------------\nLike policies we have 'scopes' object to add the Scope Policy to an API. We can add 'n' number of Scope Policy to an API with unique name.\n\n    \"scopes\": [\n        {\n            \"name\": \"Pet Scope\",\n            \"description\": \"\",\n            \"policies\": [\n                \"{{scopePolicyID}}\"\n            ]\n        }\n    ]\n\n\nAdding scope policy at the Resource Level:\n-------------------------------------------\nAdd Pet Scope to the Resource Level, if it is applied at the Resource level then it will be applicable to all the Methods under this Resource.\n\n    \"/pet\": {\n        \"displayName\": \"/pet\",\n        \"enabled\": true,\n        \"scopes\": [\n            \"Pet Scope\"\n        ],\n        \"get\": {\n            \"scopes\": [],\n            \"enabled\": true,\n            \"requestBody\": {\n                \"name\": \"requestBody\",\n                \"content\": {}\n            },\n            \"responses\": {},\n            \"mockedResponses\": {},\n            \"mockedConditionsBasedCustomResponsesList\": []\n        }\n    }\n\n\nAdding scope policy at the Method Level:\n------------------------------------------\nAdd scope to particular method.\n\n    \"/pet\": {\n        \"displayName\": \"/pet\",\n        \"enabled\": true,\n        \"scopes\": [],\n        \"get\": {\n            \"scopes\": [\n            \t\"Pet Scope\"\n            ],\n            \"enabled\": true,\n            \"requestBody\": {\n                \"name\": \"requestBody\",\n                \"content\": {}\n            },\n            \"responses\": {},\n            \"mockedResponses\": {},\n            \"mockedConditionsBasedCustomResponsesList\": []\n        }\n    }\n"
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "manage",
				"type": "string"
			},
			{
				"key": "username",
				"value": "Administrator",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "32b9678a-6f19-42e6-ac12-51d782de35b9",
			"key": "baseURL",
			"value": "http://localhost:5555/rest/apigateway",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}